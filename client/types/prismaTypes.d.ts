
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Invitation
 * 
 */
export type Invitation = $Result.DefaultSelection<Prisma.$InvitationPayload>
/**
 * Model Agency
 * 
 */
export type Agency = $Result.DefaultSelection<Prisma.$AgencyPayload>
/**
 * Model ClientCareAssignment
 * 
 */
export type ClientCareAssignment = $Result.DefaultSelection<Prisma.$ClientCareAssignmentPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model CommunicationPreference
 * 
 */
export type CommunicationPreference = $Result.DefaultSelection<Prisma.$CommunicationPreferencePayload>
/**
 * Model FamilyAccess
 * 
 */
export type FamilyAccess = $Result.DefaultSelection<Prisma.$FamilyAccessPayload>
/**
 * Model MedicationDatabaseLink
 * 
 */
export type MedicationDatabaseLink = $Result.DefaultSelection<Prisma.$MedicationDatabaseLinkPayload>
/**
 * Model VisitType
 * 
 */
export type VisitType = $Result.DefaultSelection<Prisma.$VisitTypePayload>
/**
 * Model Schedule
 * 
 */
export type Schedule = $Result.DefaultSelection<Prisma.$SchedulePayload>
/**
 * Model Report
 * 
 */
export type Report = $Result.DefaultSelection<Prisma.$ReportPayload>
/**
 * Model ReportTask
 * 
 */
export type ReportTask = $Result.DefaultSelection<Prisma.$ReportTaskPayload>
/**
 * Model ReportAlert
 * 
 */
export type ReportAlert = $Result.DefaultSelection<Prisma.$ReportAlertPayload>
/**
 * Model BodyMapObservation
 * 
 */
export type BodyMapObservation = $Result.DefaultSelection<Prisma.$BodyMapObservationPayload>
/**
 * Model ReportEdit
 * 
 */
export type ReportEdit = $Result.DefaultSelection<Prisma.$ReportEditPayload>
/**
 * Model MedicationRecord
 * 
 */
export type MedicationRecord = $Result.DefaultSelection<Prisma.$MedicationRecordPayload>
/**
 * Model MedicationAdministration
 * 
 */
export type MedicationAdministration = $Result.DefaultSelection<Prisma.$MedicationAdministrationPayload>
/**
 * Model Invoice
 * 
 */
export type Invoice = $Result.DefaultSelection<Prisma.$InvoicePayload>
/**
 * Model MileageRecord
 * 
 */
export type MileageRecord = $Result.DefaultSelection<Prisma.$MileageRecordPayload>
/**
 * Model Document
 * 
 */
export type Document = $Result.DefaultSelection<Prisma.$DocumentPayload>
/**
 * Model Profile
 * 
 */
export type Profile = $Result.DefaultSelection<Prisma.$ProfilePayload>
/**
 * Model IncidentReport
 * 
 */
export type IncidentReport = $Result.DefaultSelection<Prisma.$IncidentReportPayload>
/**
 * Model Message
 * 
 */
export type Message = $Result.DefaultSelection<Prisma.$MessagePayload>
/**
 * Model KeyContact
 * 
 */
export type KeyContact = $Result.DefaultSelection<Prisma.$KeyContactPayload>
/**
 * Model CareOutcome
 * 
 */
export type CareOutcome = $Result.DefaultSelection<Prisma.$CareOutcomePayload>
/**
 * Model CommunicationLog
 * 
 */
export type CommunicationLog = $Result.DefaultSelection<Prisma.$CommunicationLogPayload>
/**
 * Model RiskCategory
 * 
 */
export type RiskCategory = $Result.DefaultSelection<Prisma.$RiskCategoryPayload>
/**
 * Model RiskAssessment
 * 
 */
export type RiskAssessment = $Result.DefaultSelection<Prisma.$RiskAssessmentPayload>
/**
 * Model Reminder
 * 
 */
export type Reminder = $Result.DefaultSelection<Prisma.$ReminderPayload>
/**
 * Model Notification
 * 
 */
export type Notification = $Result.DefaultSelection<Prisma.$NotificationPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Role: {
  SOFTWARE_OWNER: 'SOFTWARE_OWNER',
  ADMIN: 'ADMIN',
  CARE_WORKER: 'CARE_WORKER',
  OFFICE_STAFF: 'OFFICE_STAFF',
  CLIENT: 'CLIENT',
  FAMILY: 'FAMILY'
};

export type Role = (typeof Role)[keyof typeof Role]


export const SubRole: {
  FINANCE_MANAGER: 'FINANCE_MANAGER',
  HR_MANAGER: 'HR_MANAGER',
  CARE_MANAGER: 'CARE_MANAGER',
  SCHEDULING_COORDINATOR: 'SCHEDULING_COORDINATOR',
  OFFICE_ADMINISTRATOR: 'OFFICE_ADMINISTRATOR',
  RECEPTIONIST: 'RECEPTIONIST',
  QUALITY_ASSURANCE_MANAGER: 'QUALITY_ASSURANCE_MANAGER',
  MARKETING_COORDINATOR: 'MARKETING_COORDINATOR',
  COMPLIANCE_OFFICER: 'COMPLIANCE_OFFICER',
  CAREGIVER: 'CAREGIVER',
  SENIOR_CAREGIVER: 'SENIOR_CAREGIVER',
  JUNIOR_CAREGIVER: 'JUNIOR_CAREGIVER',
  TRAINEE_CAREGIVER: 'TRAINEE_CAREGIVER',
  LIVE_IN_CAREGIVER: 'LIVE_IN_CAREGIVER',
  PART_TIME_CAREGIVER: 'PART_TIME_CAREGIVER',
  SPECIALIZED_CAREGIVER: 'SPECIALIZED_CAREGIVER',
  NURSING_ASSISTANT: 'NURSING_ASSISTANT',
  SERVICE_USER: 'SERVICE_USER',
  FAMILY_AND_FRIENDS: 'FAMILY_AND_FRIENDS',
  OTHER: 'OTHER'
};

export type SubRole = (typeof SubRole)[keyof typeof SubRole]


export const ScheduleStatus: {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  COMPLETED: 'COMPLETED',
  CANCELED: 'CANCELED'
};

export type ScheduleStatus = (typeof ScheduleStatus)[keyof typeof ScheduleStatus]


export const ScheduleType: {
  WEEKLY_CHECKUP: 'WEEKLY_CHECKUP',
  APPOINTMENT: 'APPOINTMENT',
  HOME_VISIT: 'HOME_VISIT',
  CHECKUP: 'CHECKUP',
  EMERGENCY: 'EMERGENCY',
  ROUTINE: 'ROUTINE',
  OTHER: 'OTHER'
};

export type ScheduleType = (typeof ScheduleType)[keyof typeof ScheduleType]


export const InvoiceStatus: {
  PENDING: 'PENDING',
  PAID: 'PAID',
  OVERDUE: 'OVERDUE'
};

export type InvoiceStatus = (typeof InvoiceStatus)[keyof typeof InvoiceStatus]


export const SeverityLevel: {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  CRITICAL: 'CRITICAL'
};

export type SeverityLevel = (typeof SeverityLevel)[keyof typeof SeverityLevel]


export const InvitationStatus: {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  EXPIRED: 'EXPIRED',
  CANCELED: 'CANCELED'
};

export type InvitationStatus = (typeof InvitationStatus)[keyof typeof InvitationStatus]


export const NotificationType: {
  SCHEDULE: 'SCHEDULE',
  REPORT: 'REPORT',
  DOCUMENT: 'DOCUMENT',
  SYSTEM: 'SYSTEM',
  ALERT: 'ALERT'
};

export type NotificationType = (typeof NotificationType)[keyof typeof NotificationType]


export const DoseType: {
  MORNING: 'MORNING',
  LUNCH: 'LUNCH',
  EVENING: 'EVENING',
  BEDTIME: 'BEDTIME',
  AS_NEEDED: 'AS_NEEDED'
};

export type DoseType = (typeof DoseType)[keyof typeof DoseType]


export const ReportStatus: {
  DRAFT: 'DRAFT',
  COMPLETED: 'COMPLETED',
  EDITED: 'EDITED',
  FLAGGED: 'FLAGGED',
  REVIEWED: 'REVIEWED'
};

export type ReportStatus = (typeof ReportStatus)[keyof typeof ReportStatus]


export const AlertType: {
  MEDICATION: 'MEDICATION',
  INCIDENT: 'INCIDENT',
  HEALTH_CHANGE: 'HEALTH_CHANGE',
  BEHAVIOR: 'BEHAVIOR',
  MISSED_TASK: 'MISSED_TASK',
  OTHER: 'OTHER'
};

export type AlertType = (typeof AlertType)[keyof typeof AlertType]


export const AlertSeverity: {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  CRITICAL: 'CRITICAL'
};

export type AlertSeverity = (typeof AlertSeverity)[keyof typeof AlertSeverity]

}

export type Role = $Enums.Role

export const Role: typeof $Enums.Role

export type SubRole = $Enums.SubRole

export const SubRole: typeof $Enums.SubRole

export type ScheduleStatus = $Enums.ScheduleStatus

export const ScheduleStatus: typeof $Enums.ScheduleStatus

export type ScheduleType = $Enums.ScheduleType

export const ScheduleType: typeof $Enums.ScheduleType

export type InvoiceStatus = $Enums.InvoiceStatus

export const InvoiceStatus: typeof $Enums.InvoiceStatus

export type SeverityLevel = $Enums.SeverityLevel

export const SeverityLevel: typeof $Enums.SeverityLevel

export type InvitationStatus = $Enums.InvitationStatus

export const InvitationStatus: typeof $Enums.InvitationStatus

export type NotificationType = $Enums.NotificationType

export const NotificationType: typeof $Enums.NotificationType

export type DoseType = $Enums.DoseType

export const DoseType: typeof $Enums.DoseType

export type ReportStatus = $Enums.ReportStatus

export const ReportStatus: typeof $Enums.ReportStatus

export type AlertType = $Enums.AlertType

export const AlertType: typeof $Enums.AlertType

export type AlertSeverity = $Enums.AlertSeverity

export const AlertSeverity: typeof $Enums.AlertSeverity

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Invitations
 * const invitations = await prisma.invitation.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Invitations
   * const invitations = await prisma.invitation.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.invitation`: Exposes CRUD operations for the **Invitation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Invitations
    * const invitations = await prisma.invitation.findMany()
    * ```
    */
  get invitation(): Prisma.InvitationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.agency`: Exposes CRUD operations for the **Agency** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Agencies
    * const agencies = await prisma.agency.findMany()
    * ```
    */
  get agency(): Prisma.AgencyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.clientCareAssignment`: Exposes CRUD operations for the **ClientCareAssignment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ClientCareAssignments
    * const clientCareAssignments = await prisma.clientCareAssignment.findMany()
    * ```
    */
  get clientCareAssignment(): Prisma.ClientCareAssignmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.communicationPreference`: Exposes CRUD operations for the **CommunicationPreference** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CommunicationPreferences
    * const communicationPreferences = await prisma.communicationPreference.findMany()
    * ```
    */
  get communicationPreference(): Prisma.CommunicationPreferenceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.familyAccess`: Exposes CRUD operations for the **FamilyAccess** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FamilyAccesses
    * const familyAccesses = await prisma.familyAccess.findMany()
    * ```
    */
  get familyAccess(): Prisma.FamilyAccessDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.medicationDatabaseLink`: Exposes CRUD operations for the **MedicationDatabaseLink** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MedicationDatabaseLinks
    * const medicationDatabaseLinks = await prisma.medicationDatabaseLink.findMany()
    * ```
    */
  get medicationDatabaseLink(): Prisma.MedicationDatabaseLinkDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.visitType`: Exposes CRUD operations for the **VisitType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VisitTypes
    * const visitTypes = await prisma.visitType.findMany()
    * ```
    */
  get visitType(): Prisma.VisitTypeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.schedule`: Exposes CRUD operations for the **Schedule** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Schedules
    * const schedules = await prisma.schedule.findMany()
    * ```
    */
  get schedule(): Prisma.ScheduleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.report`: Exposes CRUD operations for the **Report** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reports
    * const reports = await prisma.report.findMany()
    * ```
    */
  get report(): Prisma.ReportDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reportTask`: Exposes CRUD operations for the **ReportTask** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReportTasks
    * const reportTasks = await prisma.reportTask.findMany()
    * ```
    */
  get reportTask(): Prisma.ReportTaskDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reportAlert`: Exposes CRUD operations for the **ReportAlert** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReportAlerts
    * const reportAlerts = await prisma.reportAlert.findMany()
    * ```
    */
  get reportAlert(): Prisma.ReportAlertDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.bodyMapObservation`: Exposes CRUD operations for the **BodyMapObservation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BodyMapObservations
    * const bodyMapObservations = await prisma.bodyMapObservation.findMany()
    * ```
    */
  get bodyMapObservation(): Prisma.BodyMapObservationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reportEdit`: Exposes CRUD operations for the **ReportEdit** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReportEdits
    * const reportEdits = await prisma.reportEdit.findMany()
    * ```
    */
  get reportEdit(): Prisma.ReportEditDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.medicationRecord`: Exposes CRUD operations for the **MedicationRecord** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MedicationRecords
    * const medicationRecords = await prisma.medicationRecord.findMany()
    * ```
    */
  get medicationRecord(): Prisma.MedicationRecordDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.medicationAdministration`: Exposes CRUD operations for the **MedicationAdministration** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MedicationAdministrations
    * const medicationAdministrations = await prisma.medicationAdministration.findMany()
    * ```
    */
  get medicationAdministration(): Prisma.MedicationAdministrationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.invoice`: Exposes CRUD operations for the **Invoice** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Invoices
    * const invoices = await prisma.invoice.findMany()
    * ```
    */
  get invoice(): Prisma.InvoiceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mileageRecord`: Exposes CRUD operations for the **MileageRecord** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MileageRecords
    * const mileageRecords = await prisma.mileageRecord.findMany()
    * ```
    */
  get mileageRecord(): Prisma.MileageRecordDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.document`: Exposes CRUD operations for the **Document** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Documents
    * const documents = await prisma.document.findMany()
    * ```
    */
  get document(): Prisma.DocumentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.profile`: Exposes CRUD operations for the **Profile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Profiles
    * const profiles = await prisma.profile.findMany()
    * ```
    */
  get profile(): Prisma.ProfileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.incidentReport`: Exposes CRUD operations for the **IncidentReport** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more IncidentReports
    * const incidentReports = await prisma.incidentReport.findMany()
    * ```
    */
  get incidentReport(): Prisma.IncidentReportDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.message`: Exposes CRUD operations for the **Message** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.message.findMany()
    * ```
    */
  get message(): Prisma.MessageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.keyContact`: Exposes CRUD operations for the **KeyContact** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more KeyContacts
    * const keyContacts = await prisma.keyContact.findMany()
    * ```
    */
  get keyContact(): Prisma.KeyContactDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.careOutcome`: Exposes CRUD operations for the **CareOutcome** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CareOutcomes
    * const careOutcomes = await prisma.careOutcome.findMany()
    * ```
    */
  get careOutcome(): Prisma.CareOutcomeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.communicationLog`: Exposes CRUD operations for the **CommunicationLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CommunicationLogs
    * const communicationLogs = await prisma.communicationLog.findMany()
    * ```
    */
  get communicationLog(): Prisma.CommunicationLogDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.riskCategory`: Exposes CRUD operations for the **RiskCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RiskCategories
    * const riskCategories = await prisma.riskCategory.findMany()
    * ```
    */
  get riskCategory(): Prisma.RiskCategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.riskAssessment`: Exposes CRUD operations for the **RiskAssessment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RiskAssessments
    * const riskAssessments = await prisma.riskAssessment.findMany()
    * ```
    */
  get riskAssessment(): Prisma.RiskAssessmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reminder`: Exposes CRUD operations for the **Reminder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reminders
    * const reminders = await prisma.reminder.findMany()
    * ```
    */
  get reminder(): Prisma.ReminderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **Notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.NotificationDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.5.0
   * Query Engine version: 173f8d54f8d52e692c7e27e72a88314ec7aeff60
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Invitation: 'Invitation',
    Agency: 'Agency',
    ClientCareAssignment: 'ClientCareAssignment',
    User: 'User',
    CommunicationPreference: 'CommunicationPreference',
    FamilyAccess: 'FamilyAccess',
    MedicationDatabaseLink: 'MedicationDatabaseLink',
    VisitType: 'VisitType',
    Schedule: 'Schedule',
    Report: 'Report',
    ReportTask: 'ReportTask',
    ReportAlert: 'ReportAlert',
    BodyMapObservation: 'BodyMapObservation',
    ReportEdit: 'ReportEdit',
    MedicationRecord: 'MedicationRecord',
    MedicationAdministration: 'MedicationAdministration',
    Invoice: 'Invoice',
    MileageRecord: 'MileageRecord',
    Document: 'Document',
    Profile: 'Profile',
    IncidentReport: 'IncidentReport',
    Message: 'Message',
    KeyContact: 'KeyContact',
    CareOutcome: 'CareOutcome',
    CommunicationLog: 'CommunicationLog',
    RiskCategory: 'RiskCategory',
    RiskAssessment: 'RiskAssessment',
    Reminder: 'Reminder',
    Notification: 'Notification'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "invitation" | "agency" | "clientCareAssignment" | "user" | "communicationPreference" | "familyAccess" | "medicationDatabaseLink" | "visitType" | "schedule" | "report" | "reportTask" | "reportAlert" | "bodyMapObservation" | "reportEdit" | "medicationRecord" | "medicationAdministration" | "invoice" | "mileageRecord" | "document" | "profile" | "incidentReport" | "message" | "keyContact" | "careOutcome" | "communicationLog" | "riskCategory" | "riskAssessment" | "reminder" | "notification"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Invitation: {
        payload: Prisma.$InvitationPayload<ExtArgs>
        fields: Prisma.InvitationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InvitationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InvitationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          findFirst: {
            args: Prisma.InvitationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InvitationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          findMany: {
            args: Prisma.InvitationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>[]
          }
          create: {
            args: Prisma.InvitationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          createMany: {
            args: Prisma.InvitationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InvitationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>[]
          }
          delete: {
            args: Prisma.InvitationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          update: {
            args: Prisma.InvitationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          deleteMany: {
            args: Prisma.InvitationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InvitationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InvitationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>[]
          }
          upsert: {
            args: Prisma.InvitationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          aggregate: {
            args: Prisma.InvitationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvitation>
          }
          groupBy: {
            args: Prisma.InvitationGroupByArgs<ExtArgs>
            result: $Utils.Optional<InvitationGroupByOutputType>[]
          }
          count: {
            args: Prisma.InvitationCountArgs<ExtArgs>
            result: $Utils.Optional<InvitationCountAggregateOutputType> | number
          }
        }
      }
      Agency: {
        payload: Prisma.$AgencyPayload<ExtArgs>
        fields: Prisma.AgencyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgencyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgencyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          findFirst: {
            args: Prisma.AgencyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgencyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          findMany: {
            args: Prisma.AgencyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>[]
          }
          create: {
            args: Prisma.AgencyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          createMany: {
            args: Prisma.AgencyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgencyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>[]
          }
          delete: {
            args: Prisma.AgencyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          update: {
            args: Prisma.AgencyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          deleteMany: {
            args: Prisma.AgencyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgencyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AgencyUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>[]
          }
          upsert: {
            args: Prisma.AgencyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          aggregate: {
            args: Prisma.AgencyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgency>
          }
          groupBy: {
            args: Prisma.AgencyGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgencyGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgencyCountArgs<ExtArgs>
            result: $Utils.Optional<AgencyCountAggregateOutputType> | number
          }
        }
      }
      ClientCareAssignment: {
        payload: Prisma.$ClientCareAssignmentPayload<ExtArgs>
        fields: Prisma.ClientCareAssignmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClientCareAssignmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCareAssignmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClientCareAssignmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCareAssignmentPayload>
          }
          findFirst: {
            args: Prisma.ClientCareAssignmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCareAssignmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClientCareAssignmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCareAssignmentPayload>
          }
          findMany: {
            args: Prisma.ClientCareAssignmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCareAssignmentPayload>[]
          }
          create: {
            args: Prisma.ClientCareAssignmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCareAssignmentPayload>
          }
          createMany: {
            args: Prisma.ClientCareAssignmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClientCareAssignmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCareAssignmentPayload>[]
          }
          delete: {
            args: Prisma.ClientCareAssignmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCareAssignmentPayload>
          }
          update: {
            args: Prisma.ClientCareAssignmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCareAssignmentPayload>
          }
          deleteMany: {
            args: Prisma.ClientCareAssignmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClientCareAssignmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClientCareAssignmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCareAssignmentPayload>[]
          }
          upsert: {
            args: Prisma.ClientCareAssignmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCareAssignmentPayload>
          }
          aggregate: {
            args: Prisma.ClientCareAssignmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClientCareAssignment>
          }
          groupBy: {
            args: Prisma.ClientCareAssignmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientCareAssignmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClientCareAssignmentCountArgs<ExtArgs>
            result: $Utils.Optional<ClientCareAssignmentCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      CommunicationPreference: {
        payload: Prisma.$CommunicationPreferencePayload<ExtArgs>
        fields: Prisma.CommunicationPreferenceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommunicationPreferenceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPreferencePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommunicationPreferenceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPreferencePayload>
          }
          findFirst: {
            args: Prisma.CommunicationPreferenceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPreferencePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommunicationPreferenceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPreferencePayload>
          }
          findMany: {
            args: Prisma.CommunicationPreferenceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPreferencePayload>[]
          }
          create: {
            args: Prisma.CommunicationPreferenceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPreferencePayload>
          }
          createMany: {
            args: Prisma.CommunicationPreferenceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CommunicationPreferenceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPreferencePayload>[]
          }
          delete: {
            args: Prisma.CommunicationPreferenceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPreferencePayload>
          }
          update: {
            args: Prisma.CommunicationPreferenceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPreferencePayload>
          }
          deleteMany: {
            args: Prisma.CommunicationPreferenceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommunicationPreferenceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CommunicationPreferenceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPreferencePayload>[]
          }
          upsert: {
            args: Prisma.CommunicationPreferenceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationPreferencePayload>
          }
          aggregate: {
            args: Prisma.CommunicationPreferenceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommunicationPreference>
          }
          groupBy: {
            args: Prisma.CommunicationPreferenceGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommunicationPreferenceGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommunicationPreferenceCountArgs<ExtArgs>
            result: $Utils.Optional<CommunicationPreferenceCountAggregateOutputType> | number
          }
        }
      }
      FamilyAccess: {
        payload: Prisma.$FamilyAccessPayload<ExtArgs>
        fields: Prisma.FamilyAccessFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FamilyAccessFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyAccessPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FamilyAccessFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyAccessPayload>
          }
          findFirst: {
            args: Prisma.FamilyAccessFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyAccessPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FamilyAccessFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyAccessPayload>
          }
          findMany: {
            args: Prisma.FamilyAccessFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyAccessPayload>[]
          }
          create: {
            args: Prisma.FamilyAccessCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyAccessPayload>
          }
          createMany: {
            args: Prisma.FamilyAccessCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FamilyAccessCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyAccessPayload>[]
          }
          delete: {
            args: Prisma.FamilyAccessDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyAccessPayload>
          }
          update: {
            args: Prisma.FamilyAccessUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyAccessPayload>
          }
          deleteMany: {
            args: Prisma.FamilyAccessDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FamilyAccessUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FamilyAccessUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyAccessPayload>[]
          }
          upsert: {
            args: Prisma.FamilyAccessUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyAccessPayload>
          }
          aggregate: {
            args: Prisma.FamilyAccessAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFamilyAccess>
          }
          groupBy: {
            args: Prisma.FamilyAccessGroupByArgs<ExtArgs>
            result: $Utils.Optional<FamilyAccessGroupByOutputType>[]
          }
          count: {
            args: Prisma.FamilyAccessCountArgs<ExtArgs>
            result: $Utils.Optional<FamilyAccessCountAggregateOutputType> | number
          }
        }
      }
      MedicationDatabaseLink: {
        payload: Prisma.$MedicationDatabaseLinkPayload<ExtArgs>
        fields: Prisma.MedicationDatabaseLinkFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MedicationDatabaseLinkFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationDatabaseLinkPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MedicationDatabaseLinkFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationDatabaseLinkPayload>
          }
          findFirst: {
            args: Prisma.MedicationDatabaseLinkFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationDatabaseLinkPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MedicationDatabaseLinkFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationDatabaseLinkPayload>
          }
          findMany: {
            args: Prisma.MedicationDatabaseLinkFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationDatabaseLinkPayload>[]
          }
          create: {
            args: Prisma.MedicationDatabaseLinkCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationDatabaseLinkPayload>
          }
          createMany: {
            args: Prisma.MedicationDatabaseLinkCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MedicationDatabaseLinkCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationDatabaseLinkPayload>[]
          }
          delete: {
            args: Prisma.MedicationDatabaseLinkDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationDatabaseLinkPayload>
          }
          update: {
            args: Prisma.MedicationDatabaseLinkUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationDatabaseLinkPayload>
          }
          deleteMany: {
            args: Prisma.MedicationDatabaseLinkDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MedicationDatabaseLinkUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MedicationDatabaseLinkUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationDatabaseLinkPayload>[]
          }
          upsert: {
            args: Prisma.MedicationDatabaseLinkUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationDatabaseLinkPayload>
          }
          aggregate: {
            args: Prisma.MedicationDatabaseLinkAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMedicationDatabaseLink>
          }
          groupBy: {
            args: Prisma.MedicationDatabaseLinkGroupByArgs<ExtArgs>
            result: $Utils.Optional<MedicationDatabaseLinkGroupByOutputType>[]
          }
          count: {
            args: Prisma.MedicationDatabaseLinkCountArgs<ExtArgs>
            result: $Utils.Optional<MedicationDatabaseLinkCountAggregateOutputType> | number
          }
        }
      }
      VisitType: {
        payload: Prisma.$VisitTypePayload<ExtArgs>
        fields: Prisma.VisitTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VisitTypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VisitTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VisitTypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VisitTypePayload>
          }
          findFirst: {
            args: Prisma.VisitTypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VisitTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VisitTypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VisitTypePayload>
          }
          findMany: {
            args: Prisma.VisitTypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VisitTypePayload>[]
          }
          create: {
            args: Prisma.VisitTypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VisitTypePayload>
          }
          createMany: {
            args: Prisma.VisitTypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VisitTypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VisitTypePayload>[]
          }
          delete: {
            args: Prisma.VisitTypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VisitTypePayload>
          }
          update: {
            args: Prisma.VisitTypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VisitTypePayload>
          }
          deleteMany: {
            args: Prisma.VisitTypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VisitTypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VisitTypeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VisitTypePayload>[]
          }
          upsert: {
            args: Prisma.VisitTypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VisitTypePayload>
          }
          aggregate: {
            args: Prisma.VisitTypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVisitType>
          }
          groupBy: {
            args: Prisma.VisitTypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<VisitTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.VisitTypeCountArgs<ExtArgs>
            result: $Utils.Optional<VisitTypeCountAggregateOutputType> | number
          }
        }
      }
      Schedule: {
        payload: Prisma.$SchedulePayload<ExtArgs>
        fields: Prisma.ScheduleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ScheduleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SchedulePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ScheduleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SchedulePayload>
          }
          findFirst: {
            args: Prisma.ScheduleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SchedulePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ScheduleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SchedulePayload>
          }
          findMany: {
            args: Prisma.ScheduleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SchedulePayload>[]
          }
          create: {
            args: Prisma.ScheduleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SchedulePayload>
          }
          createMany: {
            args: Prisma.ScheduleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ScheduleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SchedulePayload>[]
          }
          delete: {
            args: Prisma.ScheduleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SchedulePayload>
          }
          update: {
            args: Prisma.ScheduleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SchedulePayload>
          }
          deleteMany: {
            args: Prisma.ScheduleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ScheduleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ScheduleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SchedulePayload>[]
          }
          upsert: {
            args: Prisma.ScheduleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SchedulePayload>
          }
          aggregate: {
            args: Prisma.ScheduleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSchedule>
          }
          groupBy: {
            args: Prisma.ScheduleGroupByArgs<ExtArgs>
            result: $Utils.Optional<ScheduleGroupByOutputType>[]
          }
          count: {
            args: Prisma.ScheduleCountArgs<ExtArgs>
            result: $Utils.Optional<ScheduleCountAggregateOutputType> | number
          }
        }
      }
      Report: {
        payload: Prisma.$ReportPayload<ExtArgs>
        fields: Prisma.ReportFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReportFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReportFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          findFirst: {
            args: Prisma.ReportFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReportFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          findMany: {
            args: Prisma.ReportFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>[]
          }
          create: {
            args: Prisma.ReportCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          createMany: {
            args: Prisma.ReportCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReportCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>[]
          }
          delete: {
            args: Prisma.ReportDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          update: {
            args: Prisma.ReportUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          deleteMany: {
            args: Prisma.ReportDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReportUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReportUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>[]
          }
          upsert: {
            args: Prisma.ReportUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          aggregate: {
            args: Prisma.ReportAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReport>
          }
          groupBy: {
            args: Prisma.ReportGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReportGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReportCountArgs<ExtArgs>
            result: $Utils.Optional<ReportCountAggregateOutputType> | number
          }
        }
      }
      ReportTask: {
        payload: Prisma.$ReportTaskPayload<ExtArgs>
        fields: Prisma.ReportTaskFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReportTaskFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportTaskPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReportTaskFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportTaskPayload>
          }
          findFirst: {
            args: Prisma.ReportTaskFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportTaskPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReportTaskFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportTaskPayload>
          }
          findMany: {
            args: Prisma.ReportTaskFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportTaskPayload>[]
          }
          create: {
            args: Prisma.ReportTaskCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportTaskPayload>
          }
          createMany: {
            args: Prisma.ReportTaskCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReportTaskCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportTaskPayload>[]
          }
          delete: {
            args: Prisma.ReportTaskDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportTaskPayload>
          }
          update: {
            args: Prisma.ReportTaskUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportTaskPayload>
          }
          deleteMany: {
            args: Prisma.ReportTaskDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReportTaskUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReportTaskUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportTaskPayload>[]
          }
          upsert: {
            args: Prisma.ReportTaskUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportTaskPayload>
          }
          aggregate: {
            args: Prisma.ReportTaskAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReportTask>
          }
          groupBy: {
            args: Prisma.ReportTaskGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReportTaskGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReportTaskCountArgs<ExtArgs>
            result: $Utils.Optional<ReportTaskCountAggregateOutputType> | number
          }
        }
      }
      ReportAlert: {
        payload: Prisma.$ReportAlertPayload<ExtArgs>
        fields: Prisma.ReportAlertFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReportAlertFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportAlertPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReportAlertFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportAlertPayload>
          }
          findFirst: {
            args: Prisma.ReportAlertFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportAlertPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReportAlertFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportAlertPayload>
          }
          findMany: {
            args: Prisma.ReportAlertFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportAlertPayload>[]
          }
          create: {
            args: Prisma.ReportAlertCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportAlertPayload>
          }
          createMany: {
            args: Prisma.ReportAlertCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReportAlertCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportAlertPayload>[]
          }
          delete: {
            args: Prisma.ReportAlertDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportAlertPayload>
          }
          update: {
            args: Prisma.ReportAlertUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportAlertPayload>
          }
          deleteMany: {
            args: Prisma.ReportAlertDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReportAlertUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReportAlertUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportAlertPayload>[]
          }
          upsert: {
            args: Prisma.ReportAlertUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportAlertPayload>
          }
          aggregate: {
            args: Prisma.ReportAlertAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReportAlert>
          }
          groupBy: {
            args: Prisma.ReportAlertGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReportAlertGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReportAlertCountArgs<ExtArgs>
            result: $Utils.Optional<ReportAlertCountAggregateOutputType> | number
          }
        }
      }
      BodyMapObservation: {
        payload: Prisma.$BodyMapObservationPayload<ExtArgs>
        fields: Prisma.BodyMapObservationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BodyMapObservationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BodyMapObservationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BodyMapObservationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BodyMapObservationPayload>
          }
          findFirst: {
            args: Prisma.BodyMapObservationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BodyMapObservationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BodyMapObservationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BodyMapObservationPayload>
          }
          findMany: {
            args: Prisma.BodyMapObservationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BodyMapObservationPayload>[]
          }
          create: {
            args: Prisma.BodyMapObservationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BodyMapObservationPayload>
          }
          createMany: {
            args: Prisma.BodyMapObservationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BodyMapObservationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BodyMapObservationPayload>[]
          }
          delete: {
            args: Prisma.BodyMapObservationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BodyMapObservationPayload>
          }
          update: {
            args: Prisma.BodyMapObservationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BodyMapObservationPayload>
          }
          deleteMany: {
            args: Prisma.BodyMapObservationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BodyMapObservationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BodyMapObservationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BodyMapObservationPayload>[]
          }
          upsert: {
            args: Prisma.BodyMapObservationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BodyMapObservationPayload>
          }
          aggregate: {
            args: Prisma.BodyMapObservationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBodyMapObservation>
          }
          groupBy: {
            args: Prisma.BodyMapObservationGroupByArgs<ExtArgs>
            result: $Utils.Optional<BodyMapObservationGroupByOutputType>[]
          }
          count: {
            args: Prisma.BodyMapObservationCountArgs<ExtArgs>
            result: $Utils.Optional<BodyMapObservationCountAggregateOutputType> | number
          }
        }
      }
      ReportEdit: {
        payload: Prisma.$ReportEditPayload<ExtArgs>
        fields: Prisma.ReportEditFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReportEditFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportEditPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReportEditFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportEditPayload>
          }
          findFirst: {
            args: Prisma.ReportEditFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportEditPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReportEditFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportEditPayload>
          }
          findMany: {
            args: Prisma.ReportEditFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportEditPayload>[]
          }
          create: {
            args: Prisma.ReportEditCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportEditPayload>
          }
          createMany: {
            args: Prisma.ReportEditCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReportEditCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportEditPayload>[]
          }
          delete: {
            args: Prisma.ReportEditDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportEditPayload>
          }
          update: {
            args: Prisma.ReportEditUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportEditPayload>
          }
          deleteMany: {
            args: Prisma.ReportEditDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReportEditUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReportEditUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportEditPayload>[]
          }
          upsert: {
            args: Prisma.ReportEditUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportEditPayload>
          }
          aggregate: {
            args: Prisma.ReportEditAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReportEdit>
          }
          groupBy: {
            args: Prisma.ReportEditGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReportEditGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReportEditCountArgs<ExtArgs>
            result: $Utils.Optional<ReportEditCountAggregateOutputType> | number
          }
        }
      }
      MedicationRecord: {
        payload: Prisma.$MedicationRecordPayload<ExtArgs>
        fields: Prisma.MedicationRecordFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MedicationRecordFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationRecordPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MedicationRecordFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationRecordPayload>
          }
          findFirst: {
            args: Prisma.MedicationRecordFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationRecordPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MedicationRecordFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationRecordPayload>
          }
          findMany: {
            args: Prisma.MedicationRecordFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationRecordPayload>[]
          }
          create: {
            args: Prisma.MedicationRecordCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationRecordPayload>
          }
          createMany: {
            args: Prisma.MedicationRecordCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MedicationRecordCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationRecordPayload>[]
          }
          delete: {
            args: Prisma.MedicationRecordDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationRecordPayload>
          }
          update: {
            args: Prisma.MedicationRecordUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationRecordPayload>
          }
          deleteMany: {
            args: Prisma.MedicationRecordDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MedicationRecordUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MedicationRecordUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationRecordPayload>[]
          }
          upsert: {
            args: Prisma.MedicationRecordUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationRecordPayload>
          }
          aggregate: {
            args: Prisma.MedicationRecordAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMedicationRecord>
          }
          groupBy: {
            args: Prisma.MedicationRecordGroupByArgs<ExtArgs>
            result: $Utils.Optional<MedicationRecordGroupByOutputType>[]
          }
          count: {
            args: Prisma.MedicationRecordCountArgs<ExtArgs>
            result: $Utils.Optional<MedicationRecordCountAggregateOutputType> | number
          }
        }
      }
      MedicationAdministration: {
        payload: Prisma.$MedicationAdministrationPayload<ExtArgs>
        fields: Prisma.MedicationAdministrationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MedicationAdministrationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationAdministrationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MedicationAdministrationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationAdministrationPayload>
          }
          findFirst: {
            args: Prisma.MedicationAdministrationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationAdministrationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MedicationAdministrationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationAdministrationPayload>
          }
          findMany: {
            args: Prisma.MedicationAdministrationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationAdministrationPayload>[]
          }
          create: {
            args: Prisma.MedicationAdministrationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationAdministrationPayload>
          }
          createMany: {
            args: Prisma.MedicationAdministrationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MedicationAdministrationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationAdministrationPayload>[]
          }
          delete: {
            args: Prisma.MedicationAdministrationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationAdministrationPayload>
          }
          update: {
            args: Prisma.MedicationAdministrationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationAdministrationPayload>
          }
          deleteMany: {
            args: Prisma.MedicationAdministrationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MedicationAdministrationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MedicationAdministrationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationAdministrationPayload>[]
          }
          upsert: {
            args: Prisma.MedicationAdministrationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MedicationAdministrationPayload>
          }
          aggregate: {
            args: Prisma.MedicationAdministrationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMedicationAdministration>
          }
          groupBy: {
            args: Prisma.MedicationAdministrationGroupByArgs<ExtArgs>
            result: $Utils.Optional<MedicationAdministrationGroupByOutputType>[]
          }
          count: {
            args: Prisma.MedicationAdministrationCountArgs<ExtArgs>
            result: $Utils.Optional<MedicationAdministrationCountAggregateOutputType> | number
          }
        }
      }
      Invoice: {
        payload: Prisma.$InvoicePayload<ExtArgs>
        fields: Prisma.InvoiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InvoiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InvoiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          findFirst: {
            args: Prisma.InvoiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InvoiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          findMany: {
            args: Prisma.InvoiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>[]
          }
          create: {
            args: Prisma.InvoiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          createMany: {
            args: Prisma.InvoiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InvoiceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>[]
          }
          delete: {
            args: Prisma.InvoiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          update: {
            args: Prisma.InvoiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          deleteMany: {
            args: Prisma.InvoiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InvoiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InvoiceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>[]
          }
          upsert: {
            args: Prisma.InvoiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          aggregate: {
            args: Prisma.InvoiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvoice>
          }
          groupBy: {
            args: Prisma.InvoiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<InvoiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.InvoiceCountArgs<ExtArgs>
            result: $Utils.Optional<InvoiceCountAggregateOutputType> | number
          }
        }
      }
      MileageRecord: {
        payload: Prisma.$MileageRecordPayload<ExtArgs>
        fields: Prisma.MileageRecordFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MileageRecordFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MileageRecordPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MileageRecordFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MileageRecordPayload>
          }
          findFirst: {
            args: Prisma.MileageRecordFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MileageRecordPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MileageRecordFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MileageRecordPayload>
          }
          findMany: {
            args: Prisma.MileageRecordFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MileageRecordPayload>[]
          }
          create: {
            args: Prisma.MileageRecordCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MileageRecordPayload>
          }
          createMany: {
            args: Prisma.MileageRecordCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MileageRecordCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MileageRecordPayload>[]
          }
          delete: {
            args: Prisma.MileageRecordDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MileageRecordPayload>
          }
          update: {
            args: Prisma.MileageRecordUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MileageRecordPayload>
          }
          deleteMany: {
            args: Prisma.MileageRecordDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MileageRecordUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MileageRecordUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MileageRecordPayload>[]
          }
          upsert: {
            args: Prisma.MileageRecordUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MileageRecordPayload>
          }
          aggregate: {
            args: Prisma.MileageRecordAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMileageRecord>
          }
          groupBy: {
            args: Prisma.MileageRecordGroupByArgs<ExtArgs>
            result: $Utils.Optional<MileageRecordGroupByOutputType>[]
          }
          count: {
            args: Prisma.MileageRecordCountArgs<ExtArgs>
            result: $Utils.Optional<MileageRecordCountAggregateOutputType> | number
          }
        }
      }
      Document: {
        payload: Prisma.$DocumentPayload<ExtArgs>
        fields: Prisma.DocumentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DocumentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DocumentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          findFirst: {
            args: Prisma.DocumentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DocumentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          findMany: {
            args: Prisma.DocumentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>[]
          }
          create: {
            args: Prisma.DocumentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          createMany: {
            args: Prisma.DocumentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DocumentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>[]
          }
          delete: {
            args: Prisma.DocumentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          update: {
            args: Prisma.DocumentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          deleteMany: {
            args: Prisma.DocumentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DocumentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DocumentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>[]
          }
          upsert: {
            args: Prisma.DocumentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          aggregate: {
            args: Prisma.DocumentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDocument>
          }
          groupBy: {
            args: Prisma.DocumentGroupByArgs<ExtArgs>
            result: $Utils.Optional<DocumentGroupByOutputType>[]
          }
          count: {
            args: Prisma.DocumentCountArgs<ExtArgs>
            result: $Utils.Optional<DocumentCountAggregateOutputType> | number
          }
        }
      }
      Profile: {
        payload: Prisma.$ProfilePayload<ExtArgs>
        fields: Prisma.ProfileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProfileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProfileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          findFirst: {
            args: Prisma.ProfileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProfileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          findMany: {
            args: Prisma.ProfileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>[]
          }
          create: {
            args: Prisma.ProfileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          createMany: {
            args: Prisma.ProfileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProfileCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>[]
          }
          delete: {
            args: Prisma.ProfileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          update: {
            args: Prisma.ProfileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          deleteMany: {
            args: Prisma.ProfileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProfileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProfileUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>[]
          }
          upsert: {
            args: Prisma.ProfileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          aggregate: {
            args: Prisma.ProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProfile>
          }
          groupBy: {
            args: Prisma.ProfileGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProfileCountArgs<ExtArgs>
            result: $Utils.Optional<ProfileCountAggregateOutputType> | number
          }
        }
      }
      IncidentReport: {
        payload: Prisma.$IncidentReportPayload<ExtArgs>
        fields: Prisma.IncidentReportFieldRefs
        operations: {
          findUnique: {
            args: Prisma.IncidentReportFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentReportPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.IncidentReportFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentReportPayload>
          }
          findFirst: {
            args: Prisma.IncidentReportFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentReportPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.IncidentReportFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentReportPayload>
          }
          findMany: {
            args: Prisma.IncidentReportFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentReportPayload>[]
          }
          create: {
            args: Prisma.IncidentReportCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentReportPayload>
          }
          createMany: {
            args: Prisma.IncidentReportCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.IncidentReportCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentReportPayload>[]
          }
          delete: {
            args: Prisma.IncidentReportDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentReportPayload>
          }
          update: {
            args: Prisma.IncidentReportUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentReportPayload>
          }
          deleteMany: {
            args: Prisma.IncidentReportDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.IncidentReportUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.IncidentReportUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentReportPayload>[]
          }
          upsert: {
            args: Prisma.IncidentReportUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentReportPayload>
          }
          aggregate: {
            args: Prisma.IncidentReportAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIncidentReport>
          }
          groupBy: {
            args: Prisma.IncidentReportGroupByArgs<ExtArgs>
            result: $Utils.Optional<IncidentReportGroupByOutputType>[]
          }
          count: {
            args: Prisma.IncidentReportCountArgs<ExtArgs>
            result: $Utils.Optional<IncidentReportCountAggregateOutputType> | number
          }
        }
      }
      Message: {
        payload: Prisma.$MessagePayload<ExtArgs>
        fields: Prisma.MessageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MessageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MessageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findFirst: {
            args: Prisma.MessageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MessageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findMany: {
            args: Prisma.MessageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          create: {
            args: Prisma.MessageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          createMany: {
            args: Prisma.MessageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MessageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          delete: {
            args: Prisma.MessageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          update: {
            args: Prisma.MessageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          deleteMany: {
            args: Prisma.MessageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MessageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MessageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          upsert: {
            args: Prisma.MessageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          aggregate: {
            args: Prisma.MessageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessage>
          }
          groupBy: {
            args: Prisma.MessageGroupByArgs<ExtArgs>
            result: $Utils.Optional<MessageGroupByOutputType>[]
          }
          count: {
            args: Prisma.MessageCountArgs<ExtArgs>
            result: $Utils.Optional<MessageCountAggregateOutputType> | number
          }
        }
      }
      KeyContact: {
        payload: Prisma.$KeyContactPayload<ExtArgs>
        fields: Prisma.KeyContactFieldRefs
        operations: {
          findUnique: {
            args: Prisma.KeyContactFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KeyContactPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.KeyContactFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KeyContactPayload>
          }
          findFirst: {
            args: Prisma.KeyContactFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KeyContactPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.KeyContactFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KeyContactPayload>
          }
          findMany: {
            args: Prisma.KeyContactFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KeyContactPayload>[]
          }
          create: {
            args: Prisma.KeyContactCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KeyContactPayload>
          }
          createMany: {
            args: Prisma.KeyContactCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.KeyContactCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KeyContactPayload>[]
          }
          delete: {
            args: Prisma.KeyContactDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KeyContactPayload>
          }
          update: {
            args: Prisma.KeyContactUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KeyContactPayload>
          }
          deleteMany: {
            args: Prisma.KeyContactDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.KeyContactUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.KeyContactUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KeyContactPayload>[]
          }
          upsert: {
            args: Prisma.KeyContactUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KeyContactPayload>
          }
          aggregate: {
            args: Prisma.KeyContactAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateKeyContact>
          }
          groupBy: {
            args: Prisma.KeyContactGroupByArgs<ExtArgs>
            result: $Utils.Optional<KeyContactGroupByOutputType>[]
          }
          count: {
            args: Prisma.KeyContactCountArgs<ExtArgs>
            result: $Utils.Optional<KeyContactCountAggregateOutputType> | number
          }
        }
      }
      CareOutcome: {
        payload: Prisma.$CareOutcomePayload<ExtArgs>
        fields: Prisma.CareOutcomeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CareOutcomeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareOutcomePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CareOutcomeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareOutcomePayload>
          }
          findFirst: {
            args: Prisma.CareOutcomeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareOutcomePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CareOutcomeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareOutcomePayload>
          }
          findMany: {
            args: Prisma.CareOutcomeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareOutcomePayload>[]
          }
          create: {
            args: Prisma.CareOutcomeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareOutcomePayload>
          }
          createMany: {
            args: Prisma.CareOutcomeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CareOutcomeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareOutcomePayload>[]
          }
          delete: {
            args: Prisma.CareOutcomeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareOutcomePayload>
          }
          update: {
            args: Prisma.CareOutcomeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareOutcomePayload>
          }
          deleteMany: {
            args: Prisma.CareOutcomeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CareOutcomeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CareOutcomeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareOutcomePayload>[]
          }
          upsert: {
            args: Prisma.CareOutcomeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CareOutcomePayload>
          }
          aggregate: {
            args: Prisma.CareOutcomeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCareOutcome>
          }
          groupBy: {
            args: Prisma.CareOutcomeGroupByArgs<ExtArgs>
            result: $Utils.Optional<CareOutcomeGroupByOutputType>[]
          }
          count: {
            args: Prisma.CareOutcomeCountArgs<ExtArgs>
            result: $Utils.Optional<CareOutcomeCountAggregateOutputType> | number
          }
        }
      }
      CommunicationLog: {
        payload: Prisma.$CommunicationLogPayload<ExtArgs>
        fields: Prisma.CommunicationLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommunicationLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommunicationLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationLogPayload>
          }
          findFirst: {
            args: Prisma.CommunicationLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommunicationLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationLogPayload>
          }
          findMany: {
            args: Prisma.CommunicationLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationLogPayload>[]
          }
          create: {
            args: Prisma.CommunicationLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationLogPayload>
          }
          createMany: {
            args: Prisma.CommunicationLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CommunicationLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationLogPayload>[]
          }
          delete: {
            args: Prisma.CommunicationLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationLogPayload>
          }
          update: {
            args: Prisma.CommunicationLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationLogPayload>
          }
          deleteMany: {
            args: Prisma.CommunicationLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommunicationLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CommunicationLogUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationLogPayload>[]
          }
          upsert: {
            args: Prisma.CommunicationLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunicationLogPayload>
          }
          aggregate: {
            args: Prisma.CommunicationLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommunicationLog>
          }
          groupBy: {
            args: Prisma.CommunicationLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommunicationLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommunicationLogCountArgs<ExtArgs>
            result: $Utils.Optional<CommunicationLogCountAggregateOutputType> | number
          }
        }
      }
      RiskCategory: {
        payload: Prisma.$RiskCategoryPayload<ExtArgs>
        fields: Prisma.RiskCategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RiskCategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskCategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RiskCategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskCategoryPayload>
          }
          findFirst: {
            args: Prisma.RiskCategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskCategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RiskCategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskCategoryPayload>
          }
          findMany: {
            args: Prisma.RiskCategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskCategoryPayload>[]
          }
          create: {
            args: Prisma.RiskCategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskCategoryPayload>
          }
          createMany: {
            args: Prisma.RiskCategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RiskCategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskCategoryPayload>[]
          }
          delete: {
            args: Prisma.RiskCategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskCategoryPayload>
          }
          update: {
            args: Prisma.RiskCategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskCategoryPayload>
          }
          deleteMany: {
            args: Prisma.RiskCategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RiskCategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RiskCategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskCategoryPayload>[]
          }
          upsert: {
            args: Prisma.RiskCategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskCategoryPayload>
          }
          aggregate: {
            args: Prisma.RiskCategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRiskCategory>
          }
          groupBy: {
            args: Prisma.RiskCategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<RiskCategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.RiskCategoryCountArgs<ExtArgs>
            result: $Utils.Optional<RiskCategoryCountAggregateOutputType> | number
          }
        }
      }
      RiskAssessment: {
        payload: Prisma.$RiskAssessmentPayload<ExtArgs>
        fields: Prisma.RiskAssessmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RiskAssessmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskAssessmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RiskAssessmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskAssessmentPayload>
          }
          findFirst: {
            args: Prisma.RiskAssessmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskAssessmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RiskAssessmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskAssessmentPayload>
          }
          findMany: {
            args: Prisma.RiskAssessmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskAssessmentPayload>[]
          }
          create: {
            args: Prisma.RiskAssessmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskAssessmentPayload>
          }
          createMany: {
            args: Prisma.RiskAssessmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RiskAssessmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskAssessmentPayload>[]
          }
          delete: {
            args: Prisma.RiskAssessmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskAssessmentPayload>
          }
          update: {
            args: Prisma.RiskAssessmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskAssessmentPayload>
          }
          deleteMany: {
            args: Prisma.RiskAssessmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RiskAssessmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RiskAssessmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskAssessmentPayload>[]
          }
          upsert: {
            args: Prisma.RiskAssessmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RiskAssessmentPayload>
          }
          aggregate: {
            args: Prisma.RiskAssessmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRiskAssessment>
          }
          groupBy: {
            args: Prisma.RiskAssessmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<RiskAssessmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.RiskAssessmentCountArgs<ExtArgs>
            result: $Utils.Optional<RiskAssessmentCountAggregateOutputType> | number
          }
        }
      }
      Reminder: {
        payload: Prisma.$ReminderPayload<ExtArgs>
        fields: Prisma.ReminderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReminderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReminderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReminderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReminderPayload>
          }
          findFirst: {
            args: Prisma.ReminderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReminderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReminderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReminderPayload>
          }
          findMany: {
            args: Prisma.ReminderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReminderPayload>[]
          }
          create: {
            args: Prisma.ReminderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReminderPayload>
          }
          createMany: {
            args: Prisma.ReminderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReminderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReminderPayload>[]
          }
          delete: {
            args: Prisma.ReminderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReminderPayload>
          }
          update: {
            args: Prisma.ReminderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReminderPayload>
          }
          deleteMany: {
            args: Prisma.ReminderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReminderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReminderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReminderPayload>[]
          }
          upsert: {
            args: Prisma.ReminderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReminderPayload>
          }
          aggregate: {
            args: Prisma.ReminderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReminder>
          }
          groupBy: {
            args: Prisma.ReminderGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReminderGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReminderCountArgs<ExtArgs>
            result: $Utils.Optional<ReminderCountAggregateOutputType> | number
          }
        }
      }
      Notification: {
        payload: Prisma.$NotificationPayload<ExtArgs>
        fields: Prisma.NotificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findFirst: {
            args: Prisma.NotificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findMany: {
            args: Prisma.NotificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          create: {
            args: Prisma.NotificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          createMany: {
            args: Prisma.NotificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          delete: {
            args: Prisma.NotificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          update: {
            args: Prisma.NotificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          deleteMany: {
            args: Prisma.NotificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.NotificationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          upsert: {
            args: Prisma.NotificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.NotificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    invitation?: InvitationOmit
    agency?: AgencyOmit
    clientCareAssignment?: ClientCareAssignmentOmit
    user?: UserOmit
    communicationPreference?: CommunicationPreferenceOmit
    familyAccess?: FamilyAccessOmit
    medicationDatabaseLink?: MedicationDatabaseLinkOmit
    visitType?: VisitTypeOmit
    schedule?: ScheduleOmit
    report?: ReportOmit
    reportTask?: ReportTaskOmit
    reportAlert?: ReportAlertOmit
    bodyMapObservation?: BodyMapObservationOmit
    reportEdit?: ReportEditOmit
    medicationRecord?: MedicationRecordOmit
    medicationAdministration?: MedicationAdministrationOmit
    invoice?: InvoiceOmit
    mileageRecord?: MileageRecordOmit
    document?: DocumentOmit
    profile?: ProfileOmit
    incidentReport?: IncidentReportOmit
    message?: MessageOmit
    keyContact?: KeyContactOmit
    careOutcome?: CareOutcomeOmit
    communicationLog?: CommunicationLogOmit
    riskCategory?: RiskCategoryOmit
    riskAssessment?: RiskAssessmentOmit
    reminder?: ReminderOmit
    notification?: NotificationOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AgencyCountOutputType
   */

  export type AgencyCountOutputType = {
    users: number
    schedules: number
    invoices: number
    mileageRecords: number
    documents: number
    incidentReports: number
    medications: number
    visitTypes: number
    riskCategories: number
    Report: number
  }

  export type AgencyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | AgencyCountOutputTypeCountUsersArgs
    schedules?: boolean | AgencyCountOutputTypeCountSchedulesArgs
    invoices?: boolean | AgencyCountOutputTypeCountInvoicesArgs
    mileageRecords?: boolean | AgencyCountOutputTypeCountMileageRecordsArgs
    documents?: boolean | AgencyCountOutputTypeCountDocumentsArgs
    incidentReports?: boolean | AgencyCountOutputTypeCountIncidentReportsArgs
    medications?: boolean | AgencyCountOutputTypeCountMedicationsArgs
    visitTypes?: boolean | AgencyCountOutputTypeCountVisitTypesArgs
    riskCategories?: boolean | AgencyCountOutputTypeCountRiskCategoriesArgs
    Report?: boolean | AgencyCountOutputTypeCountReportArgs
  }

  // Custom InputTypes
  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyCountOutputType
     */
    select?: AgencyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountSchedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScheduleWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountInvoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountMileageRecordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MileageRecordWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountIncidentReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IncidentReportWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountMedicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MedicationDatabaseLinkWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountVisitTypesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VisitTypeWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountRiskCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RiskCategoryWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountReportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    sentInvitations: number
    invitedUsers: number
    careAssignments: number
    clientAssignments: number
    careWorkerSchedules: number
    clientSchedules: number
    careReports: number
    clientReports: number
    careWorkerMedications: number
    clientMedications: number
    careWorkerMileage: number
    clientMileage: number
    sentMessages: number
    receivedMessages: number
    medicationRecords: number
    mileageRecords: number
    documents: number
    incidentReports: number
    keyContacts: number
    careOutcomes: number
    Invoice: number
    Document: number
    Notification: number
    riskAssessments: number
    familyAccess: number
    communicationLogs: number
    reminders: number
    medicationAdministrations: number
    reportEdits: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sentInvitations?: boolean | UserCountOutputTypeCountSentInvitationsArgs
    invitedUsers?: boolean | UserCountOutputTypeCountInvitedUsersArgs
    careAssignments?: boolean | UserCountOutputTypeCountCareAssignmentsArgs
    clientAssignments?: boolean | UserCountOutputTypeCountClientAssignmentsArgs
    careWorkerSchedules?: boolean | UserCountOutputTypeCountCareWorkerSchedulesArgs
    clientSchedules?: boolean | UserCountOutputTypeCountClientSchedulesArgs
    careReports?: boolean | UserCountOutputTypeCountCareReportsArgs
    clientReports?: boolean | UserCountOutputTypeCountClientReportsArgs
    careWorkerMedications?: boolean | UserCountOutputTypeCountCareWorkerMedicationsArgs
    clientMedications?: boolean | UserCountOutputTypeCountClientMedicationsArgs
    careWorkerMileage?: boolean | UserCountOutputTypeCountCareWorkerMileageArgs
    clientMileage?: boolean | UserCountOutputTypeCountClientMileageArgs
    sentMessages?: boolean | UserCountOutputTypeCountSentMessagesArgs
    receivedMessages?: boolean | UserCountOutputTypeCountReceivedMessagesArgs
    medicationRecords?: boolean | UserCountOutputTypeCountMedicationRecordsArgs
    mileageRecords?: boolean | UserCountOutputTypeCountMileageRecordsArgs
    documents?: boolean | UserCountOutputTypeCountDocumentsArgs
    incidentReports?: boolean | UserCountOutputTypeCountIncidentReportsArgs
    keyContacts?: boolean | UserCountOutputTypeCountKeyContactsArgs
    careOutcomes?: boolean | UserCountOutputTypeCountCareOutcomesArgs
    Invoice?: boolean | UserCountOutputTypeCountInvoiceArgs
    Document?: boolean | UserCountOutputTypeCountDocumentArgs
    Notification?: boolean | UserCountOutputTypeCountNotificationArgs
    riskAssessments?: boolean | UserCountOutputTypeCountRiskAssessmentsArgs
    familyAccess?: boolean | UserCountOutputTypeCountFamilyAccessArgs
    communicationLogs?: boolean | UserCountOutputTypeCountCommunicationLogsArgs
    reminders?: boolean | UserCountOutputTypeCountRemindersArgs
    medicationAdministrations?: boolean | UserCountOutputTypeCountMedicationAdministrationsArgs
    reportEdits?: boolean | UserCountOutputTypeCountReportEditsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSentInvitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvitationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountInvitedUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCareAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientCareAssignmentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountClientAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientCareAssignmentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCareWorkerSchedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScheduleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountClientSchedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScheduleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCareReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountClientReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCareWorkerMedicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MedicationRecordWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountClientMedicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MedicationRecordWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCareWorkerMileageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MileageRecordWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountClientMileageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MileageRecordWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSentMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReceivedMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMedicationRecordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MedicationRecordWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMileageRecordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MileageRecordWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountIncidentReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IncidentReportWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountKeyContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KeyContactWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCareOutcomesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CareOutcomeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountInvoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDocumentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRiskAssessmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RiskAssessmentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFamilyAccessArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FamilyAccessWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCommunicationLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommunicationLogWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRemindersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReminderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMedicationAdministrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MedicationAdministrationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReportEditsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportEditWhereInput
  }


  /**
   * Count Type MedicationDatabaseLinkCountOutputType
   */

  export type MedicationDatabaseLinkCountOutputType = {
    MedicationRecord: number
  }

  export type MedicationDatabaseLinkCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    MedicationRecord?: boolean | MedicationDatabaseLinkCountOutputTypeCountMedicationRecordArgs
  }

  // Custom InputTypes
  /**
   * MedicationDatabaseLinkCountOutputType without action
   */
  export type MedicationDatabaseLinkCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationDatabaseLinkCountOutputType
     */
    select?: MedicationDatabaseLinkCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MedicationDatabaseLinkCountOutputType without action
   */
  export type MedicationDatabaseLinkCountOutputTypeCountMedicationRecordArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MedicationRecordWhereInput
  }


  /**
   * Count Type VisitTypeCountOutputType
   */

  export type VisitTypeCountOutputType = {
    schedules: number
  }

  export type VisitTypeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    schedules?: boolean | VisitTypeCountOutputTypeCountSchedulesArgs
  }

  // Custom InputTypes
  /**
   * VisitTypeCountOutputType without action
   */
  export type VisitTypeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VisitTypeCountOutputType
     */
    select?: VisitTypeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VisitTypeCountOutputType without action
   */
  export type VisitTypeCountOutputTypeCountSchedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScheduleWhereInput
  }


  /**
   * Count Type ReportCountOutputType
   */

  export type ReportCountOutputType = {
    tasksCompleted: number
    alerts: number
    bodyMapObservations: number
    medicationAdministrations: number
    editHistory: number
  }

  export type ReportCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tasksCompleted?: boolean | ReportCountOutputTypeCountTasksCompletedArgs
    alerts?: boolean | ReportCountOutputTypeCountAlertsArgs
    bodyMapObservations?: boolean | ReportCountOutputTypeCountBodyMapObservationsArgs
    medicationAdministrations?: boolean | ReportCountOutputTypeCountMedicationAdministrationsArgs
    editHistory?: boolean | ReportCountOutputTypeCountEditHistoryArgs
  }

  // Custom InputTypes
  /**
   * ReportCountOutputType without action
   */
  export type ReportCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportCountOutputType
     */
    select?: ReportCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ReportCountOutputType without action
   */
  export type ReportCountOutputTypeCountTasksCompletedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportTaskWhereInput
  }

  /**
   * ReportCountOutputType without action
   */
  export type ReportCountOutputTypeCountAlertsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportAlertWhereInput
  }

  /**
   * ReportCountOutputType without action
   */
  export type ReportCountOutputTypeCountBodyMapObservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BodyMapObservationWhereInput
  }

  /**
   * ReportCountOutputType without action
   */
  export type ReportCountOutputTypeCountMedicationAdministrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MedicationAdministrationWhereInput
  }

  /**
   * ReportCountOutputType without action
   */
  export type ReportCountOutputTypeCountEditHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportEditWhereInput
  }


  /**
   * Count Type MedicationRecordCountOutputType
   */

  export type MedicationRecordCountOutputType = {
    administrationRecords: number
  }

  export type MedicationRecordCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administrationRecords?: boolean | MedicationRecordCountOutputTypeCountAdministrationRecordsArgs
  }

  // Custom InputTypes
  /**
   * MedicationRecordCountOutputType without action
   */
  export type MedicationRecordCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecordCountOutputType
     */
    select?: MedicationRecordCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MedicationRecordCountOutputType without action
   */
  export type MedicationRecordCountOutputTypeCountAdministrationRecordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MedicationAdministrationWhereInput
  }


  /**
   * Count Type RiskCategoryCountOutputType
   */

  export type RiskCategoryCountOutputType = {
    riskAssessments: number
  }

  export type RiskCategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    riskAssessments?: boolean | RiskCategoryCountOutputTypeCountRiskAssessmentsArgs
  }

  // Custom InputTypes
  /**
   * RiskCategoryCountOutputType without action
   */
  export type RiskCategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskCategoryCountOutputType
     */
    select?: RiskCategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RiskCategoryCountOutputType without action
   */
  export type RiskCategoryCountOutputTypeCountRiskAssessmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RiskAssessmentWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Invitation
   */

  export type AggregateInvitation = {
    _count: InvitationCountAggregateOutputType | null
    _min: InvitationMinAggregateOutputType | null
    _max: InvitationMaxAggregateOutputType | null
  }

  export type InvitationMinAggregateOutputType = {
    id: string | null
    email: string | null
    token: string | null
    role: $Enums.Role | null
    subRole: $Enums.SubRole | null
    expiresAt: Date | null
    status: $Enums.InvitationStatus | null
    createdAt: Date | null
    inviterId: string | null
  }

  export type InvitationMaxAggregateOutputType = {
    id: string | null
    email: string | null
    token: string | null
    role: $Enums.Role | null
    subRole: $Enums.SubRole | null
    expiresAt: Date | null
    status: $Enums.InvitationStatus | null
    createdAt: Date | null
    inviterId: string | null
  }

  export type InvitationCountAggregateOutputType = {
    id: number
    email: number
    token: number
    role: number
    subRole: number
    expiresAt: number
    status: number
    createdAt: number
    inviterId: number
    _all: number
  }


  export type InvitationMinAggregateInputType = {
    id?: true
    email?: true
    token?: true
    role?: true
    subRole?: true
    expiresAt?: true
    status?: true
    createdAt?: true
    inviterId?: true
  }

  export type InvitationMaxAggregateInputType = {
    id?: true
    email?: true
    token?: true
    role?: true
    subRole?: true
    expiresAt?: true
    status?: true
    createdAt?: true
    inviterId?: true
  }

  export type InvitationCountAggregateInputType = {
    id?: true
    email?: true
    token?: true
    role?: true
    subRole?: true
    expiresAt?: true
    status?: true
    createdAt?: true
    inviterId?: true
    _all?: true
  }

  export type InvitationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invitation to aggregate.
     */
    where?: InvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invitations to fetch.
     */
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Invitations
    **/
    _count?: true | InvitationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvitationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvitationMaxAggregateInputType
  }

  export type GetInvitationAggregateType<T extends InvitationAggregateArgs> = {
        [P in keyof T & keyof AggregateInvitation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvitation[P]>
      : GetScalarType<T[P], AggregateInvitation[P]>
  }




  export type InvitationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvitationWhereInput
    orderBy?: InvitationOrderByWithAggregationInput | InvitationOrderByWithAggregationInput[]
    by: InvitationScalarFieldEnum[] | InvitationScalarFieldEnum
    having?: InvitationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvitationCountAggregateInputType | true
    _min?: InvitationMinAggregateInputType
    _max?: InvitationMaxAggregateInputType
  }

  export type InvitationGroupByOutputType = {
    id: string
    email: string
    token: string
    role: $Enums.Role
    subRole: $Enums.SubRole | null
    expiresAt: Date
    status: $Enums.InvitationStatus
    createdAt: Date
    inviterId: string
    _count: InvitationCountAggregateOutputType | null
    _min: InvitationMinAggregateOutputType | null
    _max: InvitationMaxAggregateOutputType | null
  }

  type GetInvitationGroupByPayload<T extends InvitationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvitationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvitationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvitationGroupByOutputType[P]>
            : GetScalarType<T[P], InvitationGroupByOutputType[P]>
        }
      >
    >


  export type InvitationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    token?: boolean
    role?: boolean
    subRole?: boolean
    expiresAt?: boolean
    status?: boolean
    createdAt?: boolean
    inviterId?: boolean
    inviter?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invitation"]>

  export type InvitationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    token?: boolean
    role?: boolean
    subRole?: boolean
    expiresAt?: boolean
    status?: boolean
    createdAt?: boolean
    inviterId?: boolean
    inviter?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invitation"]>

  export type InvitationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    token?: boolean
    role?: boolean
    subRole?: boolean
    expiresAt?: boolean
    status?: boolean
    createdAt?: boolean
    inviterId?: boolean
    inviter?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invitation"]>

  export type InvitationSelectScalar = {
    id?: boolean
    email?: boolean
    token?: boolean
    role?: boolean
    subRole?: boolean
    expiresAt?: boolean
    status?: boolean
    createdAt?: boolean
    inviterId?: boolean
  }

  export type InvitationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "token" | "role" | "subRole" | "expiresAt" | "status" | "createdAt" | "inviterId", ExtArgs["result"]["invitation"]>
  export type InvitationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inviter?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type InvitationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inviter?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type InvitationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inviter?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $InvitationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Invitation"
    objects: {
      inviter: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      token: string
      role: $Enums.Role
      subRole: $Enums.SubRole | null
      expiresAt: Date
      status: $Enums.InvitationStatus
      createdAt: Date
      inviterId: string
    }, ExtArgs["result"]["invitation"]>
    composites: {}
  }

  type InvitationGetPayload<S extends boolean | null | undefined | InvitationDefaultArgs> = $Result.GetResult<Prisma.$InvitationPayload, S>

  type InvitationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InvitationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InvitationCountAggregateInputType | true
    }

  export interface InvitationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Invitation'], meta: { name: 'Invitation' } }
    /**
     * Find zero or one Invitation that matches the filter.
     * @param {InvitationFindUniqueArgs} args - Arguments to find a Invitation
     * @example
     * // Get one Invitation
     * const invitation = await prisma.invitation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InvitationFindUniqueArgs>(args: SelectSubset<T, InvitationFindUniqueArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Invitation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InvitationFindUniqueOrThrowArgs} args - Arguments to find a Invitation
     * @example
     * // Get one Invitation
     * const invitation = await prisma.invitation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InvitationFindUniqueOrThrowArgs>(args: SelectSubset<T, InvitationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Invitation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationFindFirstArgs} args - Arguments to find a Invitation
     * @example
     * // Get one Invitation
     * const invitation = await prisma.invitation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InvitationFindFirstArgs>(args?: SelectSubset<T, InvitationFindFirstArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Invitation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationFindFirstOrThrowArgs} args - Arguments to find a Invitation
     * @example
     * // Get one Invitation
     * const invitation = await prisma.invitation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InvitationFindFirstOrThrowArgs>(args?: SelectSubset<T, InvitationFindFirstOrThrowArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Invitations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Invitations
     * const invitations = await prisma.invitation.findMany()
     * 
     * // Get first 10 Invitations
     * const invitations = await prisma.invitation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invitationWithIdOnly = await prisma.invitation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InvitationFindManyArgs>(args?: SelectSubset<T, InvitationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Invitation.
     * @param {InvitationCreateArgs} args - Arguments to create a Invitation.
     * @example
     * // Create one Invitation
     * const Invitation = await prisma.invitation.create({
     *   data: {
     *     // ... data to create a Invitation
     *   }
     * })
     * 
     */
    create<T extends InvitationCreateArgs>(args: SelectSubset<T, InvitationCreateArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Invitations.
     * @param {InvitationCreateManyArgs} args - Arguments to create many Invitations.
     * @example
     * // Create many Invitations
     * const invitation = await prisma.invitation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InvitationCreateManyArgs>(args?: SelectSubset<T, InvitationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Invitations and returns the data saved in the database.
     * @param {InvitationCreateManyAndReturnArgs} args - Arguments to create many Invitations.
     * @example
     * // Create many Invitations
     * const invitation = await prisma.invitation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Invitations and only return the `id`
     * const invitationWithIdOnly = await prisma.invitation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InvitationCreateManyAndReturnArgs>(args?: SelectSubset<T, InvitationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Invitation.
     * @param {InvitationDeleteArgs} args - Arguments to delete one Invitation.
     * @example
     * // Delete one Invitation
     * const Invitation = await prisma.invitation.delete({
     *   where: {
     *     // ... filter to delete one Invitation
     *   }
     * })
     * 
     */
    delete<T extends InvitationDeleteArgs>(args: SelectSubset<T, InvitationDeleteArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Invitation.
     * @param {InvitationUpdateArgs} args - Arguments to update one Invitation.
     * @example
     * // Update one Invitation
     * const invitation = await prisma.invitation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InvitationUpdateArgs>(args: SelectSubset<T, InvitationUpdateArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Invitations.
     * @param {InvitationDeleteManyArgs} args - Arguments to filter Invitations to delete.
     * @example
     * // Delete a few Invitations
     * const { count } = await prisma.invitation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InvitationDeleteManyArgs>(args?: SelectSubset<T, InvitationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invitations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Invitations
     * const invitation = await prisma.invitation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InvitationUpdateManyArgs>(args: SelectSubset<T, InvitationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invitations and returns the data updated in the database.
     * @param {InvitationUpdateManyAndReturnArgs} args - Arguments to update many Invitations.
     * @example
     * // Update many Invitations
     * const invitation = await prisma.invitation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Invitations and only return the `id`
     * const invitationWithIdOnly = await prisma.invitation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InvitationUpdateManyAndReturnArgs>(args: SelectSubset<T, InvitationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Invitation.
     * @param {InvitationUpsertArgs} args - Arguments to update or create a Invitation.
     * @example
     * // Update or create a Invitation
     * const invitation = await prisma.invitation.upsert({
     *   create: {
     *     // ... data to create a Invitation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Invitation we want to update
     *   }
     * })
     */
    upsert<T extends InvitationUpsertArgs>(args: SelectSubset<T, InvitationUpsertArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Invitations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationCountArgs} args - Arguments to filter Invitations to count.
     * @example
     * // Count the number of Invitations
     * const count = await prisma.invitation.count({
     *   where: {
     *     // ... the filter for the Invitations we want to count
     *   }
     * })
    **/
    count<T extends InvitationCountArgs>(
      args?: Subset<T, InvitationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvitationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Invitation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvitationAggregateArgs>(args: Subset<T, InvitationAggregateArgs>): Prisma.PrismaPromise<GetInvitationAggregateType<T>>

    /**
     * Group by Invitation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InvitationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InvitationGroupByArgs['orderBy'] }
        : { orderBy?: InvitationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InvitationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvitationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Invitation model
   */
  readonly fields: InvitationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Invitation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InvitationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    inviter<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Invitation model
   */ 
  interface InvitationFieldRefs {
    readonly id: FieldRef<"Invitation", 'String'>
    readonly email: FieldRef<"Invitation", 'String'>
    readonly token: FieldRef<"Invitation", 'String'>
    readonly role: FieldRef<"Invitation", 'Role'>
    readonly subRole: FieldRef<"Invitation", 'SubRole'>
    readonly expiresAt: FieldRef<"Invitation", 'DateTime'>
    readonly status: FieldRef<"Invitation", 'InvitationStatus'>
    readonly createdAt: FieldRef<"Invitation", 'DateTime'>
    readonly inviterId: FieldRef<"Invitation", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Invitation findUnique
   */
  export type InvitationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter, which Invitation to fetch.
     */
    where: InvitationWhereUniqueInput
  }

  /**
   * Invitation findUniqueOrThrow
   */
  export type InvitationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter, which Invitation to fetch.
     */
    where: InvitationWhereUniqueInput
  }

  /**
   * Invitation findFirst
   */
  export type InvitationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter, which Invitation to fetch.
     */
    where?: InvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invitations to fetch.
     */
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invitations.
     */
    cursor?: InvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invitations.
     */
    distinct?: InvitationScalarFieldEnum | InvitationScalarFieldEnum[]
  }

  /**
   * Invitation findFirstOrThrow
   */
  export type InvitationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter, which Invitation to fetch.
     */
    where?: InvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invitations to fetch.
     */
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invitations.
     */
    cursor?: InvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invitations.
     */
    distinct?: InvitationScalarFieldEnum | InvitationScalarFieldEnum[]
  }

  /**
   * Invitation findMany
   */
  export type InvitationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter, which Invitations to fetch.
     */
    where?: InvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invitations to fetch.
     */
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Invitations.
     */
    cursor?: InvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invitations.
     */
    skip?: number
    distinct?: InvitationScalarFieldEnum | InvitationScalarFieldEnum[]
  }

  /**
   * Invitation create
   */
  export type InvitationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * The data needed to create a Invitation.
     */
    data: XOR<InvitationCreateInput, InvitationUncheckedCreateInput>
  }

  /**
   * Invitation createMany
   */
  export type InvitationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Invitations.
     */
    data: InvitationCreateManyInput | InvitationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Invitation createManyAndReturn
   */
  export type InvitationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * The data used to create many Invitations.
     */
    data: InvitationCreateManyInput | InvitationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Invitation update
   */
  export type InvitationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * The data needed to update a Invitation.
     */
    data: XOR<InvitationUpdateInput, InvitationUncheckedUpdateInput>
    /**
     * Choose, which Invitation to update.
     */
    where: InvitationWhereUniqueInput
  }

  /**
   * Invitation updateMany
   */
  export type InvitationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Invitations.
     */
    data: XOR<InvitationUpdateManyMutationInput, InvitationUncheckedUpdateManyInput>
    /**
     * Filter which Invitations to update
     */
    where?: InvitationWhereInput
    /**
     * Limit how many Invitations to update.
     */
    limit?: number
  }

  /**
   * Invitation updateManyAndReturn
   */
  export type InvitationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * The data used to update Invitations.
     */
    data: XOR<InvitationUpdateManyMutationInput, InvitationUncheckedUpdateManyInput>
    /**
     * Filter which Invitations to update
     */
    where?: InvitationWhereInput
    /**
     * Limit how many Invitations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Invitation upsert
   */
  export type InvitationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * The filter to search for the Invitation to update in case it exists.
     */
    where: InvitationWhereUniqueInput
    /**
     * In case the Invitation found by the `where` argument doesn't exist, create a new Invitation with this data.
     */
    create: XOR<InvitationCreateInput, InvitationUncheckedCreateInput>
    /**
     * In case the Invitation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InvitationUpdateInput, InvitationUncheckedUpdateInput>
  }

  /**
   * Invitation delete
   */
  export type InvitationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter which Invitation to delete.
     */
    where: InvitationWhereUniqueInput
  }

  /**
   * Invitation deleteMany
   */
  export type InvitationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invitations to delete
     */
    where?: InvitationWhereInput
    /**
     * Limit how many Invitations to delete.
     */
    limit?: number
  }

  /**
   * Invitation without action
   */
  export type InvitationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
  }


  /**
   * Model Agency
   */

  export type AggregateAgency = {
    _count: AgencyCountAggregateOutputType | null
    _min: AgencyMinAggregateOutputType | null
    _max: AgencyMaxAggregateOutputType | null
  }

  export type AgencyMinAggregateOutputType = {
    id: string | null
    name: string | null
    isActive: boolean | null
    isSuspended: boolean | null
    hasScheduleV2: boolean | null
    hasEMAR: boolean | null
    hasFinance: boolean | null
    isWeek1And2ScheduleEnabled: boolean | null
    hasPoliciesAndProcedures: boolean | null
    isTestAccount: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AgencyMaxAggregateOutputType = {
    id: string | null
    name: string | null
    isActive: boolean | null
    isSuspended: boolean | null
    hasScheduleV2: boolean | null
    hasEMAR: boolean | null
    hasFinance: boolean | null
    isWeek1And2ScheduleEnabled: boolean | null
    hasPoliciesAndProcedures: boolean | null
    isTestAccount: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AgencyCountAggregateOutputType = {
    id: number
    name: number
    isActive: number
    isSuspended: number
    hasScheduleV2: number
    hasEMAR: number
    hasFinance: number
    isWeek1And2ScheduleEnabled: number
    hasPoliciesAndProcedures: number
    isTestAccount: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AgencyMinAggregateInputType = {
    id?: true
    name?: true
    isActive?: true
    isSuspended?: true
    hasScheduleV2?: true
    hasEMAR?: true
    hasFinance?: true
    isWeek1And2ScheduleEnabled?: true
    hasPoliciesAndProcedures?: true
    isTestAccount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AgencyMaxAggregateInputType = {
    id?: true
    name?: true
    isActive?: true
    isSuspended?: true
    hasScheduleV2?: true
    hasEMAR?: true
    hasFinance?: true
    isWeek1And2ScheduleEnabled?: true
    hasPoliciesAndProcedures?: true
    isTestAccount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AgencyCountAggregateInputType = {
    id?: true
    name?: true
    isActive?: true
    isSuspended?: true
    hasScheduleV2?: true
    hasEMAR?: true
    hasFinance?: true
    isWeek1And2ScheduleEnabled?: true
    hasPoliciesAndProcedures?: true
    isTestAccount?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AgencyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Agency to aggregate.
     */
    where?: AgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agencies to fetch.
     */
    orderBy?: AgencyOrderByWithRelationInput | AgencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Agencies
    **/
    _count?: true | AgencyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgencyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgencyMaxAggregateInputType
  }

  export type GetAgencyAggregateType<T extends AgencyAggregateArgs> = {
        [P in keyof T & keyof AggregateAgency]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgency[P]>
      : GetScalarType<T[P], AggregateAgency[P]>
  }




  export type AgencyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyWhereInput
    orderBy?: AgencyOrderByWithAggregationInput | AgencyOrderByWithAggregationInput[]
    by: AgencyScalarFieldEnum[] | AgencyScalarFieldEnum
    having?: AgencyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgencyCountAggregateInputType | true
    _min?: AgencyMinAggregateInputType
    _max?: AgencyMaxAggregateInputType
  }

  export type AgencyGroupByOutputType = {
    id: string
    name: string
    isActive: boolean
    isSuspended: boolean
    hasScheduleV2: boolean
    hasEMAR: boolean
    hasFinance: boolean
    isWeek1And2ScheduleEnabled: boolean
    hasPoliciesAndProcedures: boolean
    isTestAccount: boolean
    createdAt: Date
    updatedAt: Date
    _count: AgencyCountAggregateOutputType | null
    _min: AgencyMinAggregateOutputType | null
    _max: AgencyMaxAggregateOutputType | null
  }

  type GetAgencyGroupByPayload<T extends AgencyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgencyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgencyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgencyGroupByOutputType[P]>
            : GetScalarType<T[P], AgencyGroupByOutputType[P]>
        }
      >
    >


  export type AgencySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    users?: boolean | Agency$usersArgs<ExtArgs>
    schedules?: boolean | Agency$schedulesArgs<ExtArgs>
    invoices?: boolean | Agency$invoicesArgs<ExtArgs>
    mileageRecords?: boolean | Agency$mileageRecordsArgs<ExtArgs>
    documents?: boolean | Agency$documentsArgs<ExtArgs>
    incidentReports?: boolean | Agency$incidentReportsArgs<ExtArgs>
    medications?: boolean | Agency$medicationsArgs<ExtArgs>
    visitTypes?: boolean | Agency$visitTypesArgs<ExtArgs>
    riskCategories?: boolean | Agency$riskCategoriesArgs<ExtArgs>
    Report?: boolean | Agency$ReportArgs<ExtArgs>
    _count?: boolean | AgencyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agency"]>

  export type AgencySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["agency"]>

  export type AgencySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["agency"]>

  export type AgencySelectScalar = {
    id?: boolean
    name?: boolean
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AgencyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "isActive" | "isSuspended" | "hasScheduleV2" | "hasEMAR" | "hasFinance" | "isWeek1And2ScheduleEnabled" | "hasPoliciesAndProcedures" | "isTestAccount" | "createdAt" | "updatedAt", ExtArgs["result"]["agency"]>
  export type AgencyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Agency$usersArgs<ExtArgs>
    schedules?: boolean | Agency$schedulesArgs<ExtArgs>
    invoices?: boolean | Agency$invoicesArgs<ExtArgs>
    mileageRecords?: boolean | Agency$mileageRecordsArgs<ExtArgs>
    documents?: boolean | Agency$documentsArgs<ExtArgs>
    incidentReports?: boolean | Agency$incidentReportsArgs<ExtArgs>
    medications?: boolean | Agency$medicationsArgs<ExtArgs>
    visitTypes?: boolean | Agency$visitTypesArgs<ExtArgs>
    riskCategories?: boolean | Agency$riskCategoriesArgs<ExtArgs>
    Report?: boolean | Agency$ReportArgs<ExtArgs>
    _count?: boolean | AgencyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AgencyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type AgencyIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AgencyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Agency"
    objects: {
      users: Prisma.$UserPayload<ExtArgs>[]
      schedules: Prisma.$SchedulePayload<ExtArgs>[]
      invoices: Prisma.$InvoicePayload<ExtArgs>[]
      mileageRecords: Prisma.$MileageRecordPayload<ExtArgs>[]
      documents: Prisma.$DocumentPayload<ExtArgs>[]
      incidentReports: Prisma.$IncidentReportPayload<ExtArgs>[]
      medications: Prisma.$MedicationDatabaseLinkPayload<ExtArgs>[]
      visitTypes: Prisma.$VisitTypePayload<ExtArgs>[]
      riskCategories: Prisma.$RiskCategoryPayload<ExtArgs>[]
      Report: Prisma.$ReportPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      isActive: boolean
      isSuspended: boolean
      hasScheduleV2: boolean
      hasEMAR: boolean
      hasFinance: boolean
      isWeek1And2ScheduleEnabled: boolean
      hasPoliciesAndProcedures: boolean
      isTestAccount: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["agency"]>
    composites: {}
  }

  type AgencyGetPayload<S extends boolean | null | undefined | AgencyDefaultArgs> = $Result.GetResult<Prisma.$AgencyPayload, S>

  type AgencyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AgencyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AgencyCountAggregateInputType | true
    }

  export interface AgencyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Agency'], meta: { name: 'Agency' } }
    /**
     * Find zero or one Agency that matches the filter.
     * @param {AgencyFindUniqueArgs} args - Arguments to find a Agency
     * @example
     * // Get one Agency
     * const agency = await prisma.agency.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgencyFindUniqueArgs>(args: SelectSubset<T, AgencyFindUniqueArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Agency that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AgencyFindUniqueOrThrowArgs} args - Arguments to find a Agency
     * @example
     * // Get one Agency
     * const agency = await prisma.agency.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgencyFindUniqueOrThrowArgs>(args: SelectSubset<T, AgencyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Agency that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyFindFirstArgs} args - Arguments to find a Agency
     * @example
     * // Get one Agency
     * const agency = await prisma.agency.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgencyFindFirstArgs>(args?: SelectSubset<T, AgencyFindFirstArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Agency that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyFindFirstOrThrowArgs} args - Arguments to find a Agency
     * @example
     * // Get one Agency
     * const agency = await prisma.agency.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgencyFindFirstOrThrowArgs>(args?: SelectSubset<T, AgencyFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Agencies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Agencies
     * const agencies = await prisma.agency.findMany()
     * 
     * // Get first 10 Agencies
     * const agencies = await prisma.agency.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agencyWithIdOnly = await prisma.agency.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgencyFindManyArgs>(args?: SelectSubset<T, AgencyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Agency.
     * @param {AgencyCreateArgs} args - Arguments to create a Agency.
     * @example
     * // Create one Agency
     * const Agency = await prisma.agency.create({
     *   data: {
     *     // ... data to create a Agency
     *   }
     * })
     * 
     */
    create<T extends AgencyCreateArgs>(args: SelectSubset<T, AgencyCreateArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Agencies.
     * @param {AgencyCreateManyArgs} args - Arguments to create many Agencies.
     * @example
     * // Create many Agencies
     * const agency = await prisma.agency.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgencyCreateManyArgs>(args?: SelectSubset<T, AgencyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Agencies and returns the data saved in the database.
     * @param {AgencyCreateManyAndReturnArgs} args - Arguments to create many Agencies.
     * @example
     * // Create many Agencies
     * const agency = await prisma.agency.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Agencies and only return the `id`
     * const agencyWithIdOnly = await prisma.agency.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgencyCreateManyAndReturnArgs>(args?: SelectSubset<T, AgencyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Agency.
     * @param {AgencyDeleteArgs} args - Arguments to delete one Agency.
     * @example
     * // Delete one Agency
     * const Agency = await prisma.agency.delete({
     *   where: {
     *     // ... filter to delete one Agency
     *   }
     * })
     * 
     */
    delete<T extends AgencyDeleteArgs>(args: SelectSubset<T, AgencyDeleteArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Agency.
     * @param {AgencyUpdateArgs} args - Arguments to update one Agency.
     * @example
     * // Update one Agency
     * const agency = await prisma.agency.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgencyUpdateArgs>(args: SelectSubset<T, AgencyUpdateArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Agencies.
     * @param {AgencyDeleteManyArgs} args - Arguments to filter Agencies to delete.
     * @example
     * // Delete a few Agencies
     * const { count } = await prisma.agency.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgencyDeleteManyArgs>(args?: SelectSubset<T, AgencyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Agencies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Agencies
     * const agency = await prisma.agency.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgencyUpdateManyArgs>(args: SelectSubset<T, AgencyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Agencies and returns the data updated in the database.
     * @param {AgencyUpdateManyAndReturnArgs} args - Arguments to update many Agencies.
     * @example
     * // Update many Agencies
     * const agency = await prisma.agency.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Agencies and only return the `id`
     * const agencyWithIdOnly = await prisma.agency.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AgencyUpdateManyAndReturnArgs>(args: SelectSubset<T, AgencyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Agency.
     * @param {AgencyUpsertArgs} args - Arguments to update or create a Agency.
     * @example
     * // Update or create a Agency
     * const agency = await prisma.agency.upsert({
     *   create: {
     *     // ... data to create a Agency
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Agency we want to update
     *   }
     * })
     */
    upsert<T extends AgencyUpsertArgs>(args: SelectSubset<T, AgencyUpsertArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Agencies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyCountArgs} args - Arguments to filter Agencies to count.
     * @example
     * // Count the number of Agencies
     * const count = await prisma.agency.count({
     *   where: {
     *     // ... the filter for the Agencies we want to count
     *   }
     * })
    **/
    count<T extends AgencyCountArgs>(
      args?: Subset<T, AgencyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgencyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Agency.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgencyAggregateArgs>(args: Subset<T, AgencyAggregateArgs>): Prisma.PrismaPromise<GetAgencyAggregateType<T>>

    /**
     * Group by Agency.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgencyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgencyGroupByArgs['orderBy'] }
        : { orderBy?: AgencyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgencyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgencyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Agency model
   */
  readonly fields: AgencyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Agency.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgencyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends Agency$usersArgs<ExtArgs> = {}>(args?: Subset<T, Agency$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    schedules<T extends Agency$schedulesArgs<ExtArgs> = {}>(args?: Subset<T, Agency$schedulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SchedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    invoices<T extends Agency$invoicesArgs<ExtArgs> = {}>(args?: Subset<T, Agency$invoicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    mileageRecords<T extends Agency$mileageRecordsArgs<ExtArgs> = {}>(args?: Subset<T, Agency$mileageRecordsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MileageRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    documents<T extends Agency$documentsArgs<ExtArgs> = {}>(args?: Subset<T, Agency$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    incidentReports<T extends Agency$incidentReportsArgs<ExtArgs> = {}>(args?: Subset<T, Agency$incidentReportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IncidentReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    medications<T extends Agency$medicationsArgs<ExtArgs> = {}>(args?: Subset<T, Agency$medicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationDatabaseLinkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    visitTypes<T extends Agency$visitTypesArgs<ExtArgs> = {}>(args?: Subset<T, Agency$visitTypesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VisitTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    riskCategories<T extends Agency$riskCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, Agency$riskCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiskCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Report<T extends Agency$ReportArgs<ExtArgs> = {}>(args?: Subset<T, Agency$ReportArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Agency model
   */ 
  interface AgencyFieldRefs {
    readonly id: FieldRef<"Agency", 'String'>
    readonly name: FieldRef<"Agency", 'String'>
    readonly isActive: FieldRef<"Agency", 'Boolean'>
    readonly isSuspended: FieldRef<"Agency", 'Boolean'>
    readonly hasScheduleV2: FieldRef<"Agency", 'Boolean'>
    readonly hasEMAR: FieldRef<"Agency", 'Boolean'>
    readonly hasFinance: FieldRef<"Agency", 'Boolean'>
    readonly isWeek1And2ScheduleEnabled: FieldRef<"Agency", 'Boolean'>
    readonly hasPoliciesAndProcedures: FieldRef<"Agency", 'Boolean'>
    readonly isTestAccount: FieldRef<"Agency", 'Boolean'>
    readonly createdAt: FieldRef<"Agency", 'DateTime'>
    readonly updatedAt: FieldRef<"Agency", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Agency findUnique
   */
  export type AgencyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter, which Agency to fetch.
     */
    where: AgencyWhereUniqueInput
  }

  /**
   * Agency findUniqueOrThrow
   */
  export type AgencyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter, which Agency to fetch.
     */
    where: AgencyWhereUniqueInput
  }

  /**
   * Agency findFirst
   */
  export type AgencyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter, which Agency to fetch.
     */
    where?: AgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agencies to fetch.
     */
    orderBy?: AgencyOrderByWithRelationInput | AgencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Agencies.
     */
    cursor?: AgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Agencies.
     */
    distinct?: AgencyScalarFieldEnum | AgencyScalarFieldEnum[]
  }

  /**
   * Agency findFirstOrThrow
   */
  export type AgencyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter, which Agency to fetch.
     */
    where?: AgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agencies to fetch.
     */
    orderBy?: AgencyOrderByWithRelationInput | AgencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Agencies.
     */
    cursor?: AgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Agencies.
     */
    distinct?: AgencyScalarFieldEnum | AgencyScalarFieldEnum[]
  }

  /**
   * Agency findMany
   */
  export type AgencyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter, which Agencies to fetch.
     */
    where?: AgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agencies to fetch.
     */
    orderBy?: AgencyOrderByWithRelationInput | AgencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Agencies.
     */
    cursor?: AgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agencies.
     */
    skip?: number
    distinct?: AgencyScalarFieldEnum | AgencyScalarFieldEnum[]
  }

  /**
   * Agency create
   */
  export type AgencyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * The data needed to create a Agency.
     */
    data: XOR<AgencyCreateInput, AgencyUncheckedCreateInput>
  }

  /**
   * Agency createMany
   */
  export type AgencyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Agencies.
     */
    data: AgencyCreateManyInput | AgencyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Agency createManyAndReturn
   */
  export type AgencyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * The data used to create many Agencies.
     */
    data: AgencyCreateManyInput | AgencyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Agency update
   */
  export type AgencyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * The data needed to update a Agency.
     */
    data: XOR<AgencyUpdateInput, AgencyUncheckedUpdateInput>
    /**
     * Choose, which Agency to update.
     */
    where: AgencyWhereUniqueInput
  }

  /**
   * Agency updateMany
   */
  export type AgencyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Agencies.
     */
    data: XOR<AgencyUpdateManyMutationInput, AgencyUncheckedUpdateManyInput>
    /**
     * Filter which Agencies to update
     */
    where?: AgencyWhereInput
    /**
     * Limit how many Agencies to update.
     */
    limit?: number
  }

  /**
   * Agency updateManyAndReturn
   */
  export type AgencyUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * The data used to update Agencies.
     */
    data: XOR<AgencyUpdateManyMutationInput, AgencyUncheckedUpdateManyInput>
    /**
     * Filter which Agencies to update
     */
    where?: AgencyWhereInput
    /**
     * Limit how many Agencies to update.
     */
    limit?: number
  }

  /**
   * Agency upsert
   */
  export type AgencyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * The filter to search for the Agency to update in case it exists.
     */
    where: AgencyWhereUniqueInput
    /**
     * In case the Agency found by the `where` argument doesn't exist, create a new Agency with this data.
     */
    create: XOR<AgencyCreateInput, AgencyUncheckedCreateInput>
    /**
     * In case the Agency was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgencyUpdateInput, AgencyUncheckedUpdateInput>
  }

  /**
   * Agency delete
   */
  export type AgencyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter which Agency to delete.
     */
    where: AgencyWhereUniqueInput
  }

  /**
   * Agency deleteMany
   */
  export type AgencyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Agencies to delete
     */
    where?: AgencyWhereInput
    /**
     * Limit how many Agencies to delete.
     */
    limit?: number
  }

  /**
   * Agency.users
   */
  export type Agency$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Agency.schedules
   */
  export type Agency$schedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Schedule
     */
    select?: ScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Schedule
     */
    omit?: ScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScheduleInclude<ExtArgs> | null
    where?: ScheduleWhereInput
    orderBy?: ScheduleOrderByWithRelationInput | ScheduleOrderByWithRelationInput[]
    cursor?: ScheduleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ScheduleScalarFieldEnum | ScheduleScalarFieldEnum[]
  }

  /**
   * Agency.invoices
   */
  export type Agency$invoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    cursor?: InvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Agency.mileageRecords
   */
  export type Agency$mileageRecordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MileageRecord
     */
    select?: MileageRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MileageRecord
     */
    omit?: MileageRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MileageRecordInclude<ExtArgs> | null
    where?: MileageRecordWhereInput
    orderBy?: MileageRecordOrderByWithRelationInput | MileageRecordOrderByWithRelationInput[]
    cursor?: MileageRecordWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MileageRecordScalarFieldEnum | MileageRecordScalarFieldEnum[]
  }

  /**
   * Agency.documents
   */
  export type Agency$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    where?: DocumentWhereInput
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    cursor?: DocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Agency.incidentReports
   */
  export type Agency$incidentReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IncidentReport
     */
    select?: IncidentReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IncidentReport
     */
    omit?: IncidentReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentReportInclude<ExtArgs> | null
    where?: IncidentReportWhereInput
    orderBy?: IncidentReportOrderByWithRelationInput | IncidentReportOrderByWithRelationInput[]
    cursor?: IncidentReportWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IncidentReportScalarFieldEnum | IncidentReportScalarFieldEnum[]
  }

  /**
   * Agency.medications
   */
  export type Agency$medicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationDatabaseLink
     */
    select?: MedicationDatabaseLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationDatabaseLink
     */
    omit?: MedicationDatabaseLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationDatabaseLinkInclude<ExtArgs> | null
    where?: MedicationDatabaseLinkWhereInput
    orderBy?: MedicationDatabaseLinkOrderByWithRelationInput | MedicationDatabaseLinkOrderByWithRelationInput[]
    cursor?: MedicationDatabaseLinkWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MedicationDatabaseLinkScalarFieldEnum | MedicationDatabaseLinkScalarFieldEnum[]
  }

  /**
   * Agency.visitTypes
   */
  export type Agency$visitTypesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VisitType
     */
    select?: VisitTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VisitType
     */
    omit?: VisitTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VisitTypeInclude<ExtArgs> | null
    where?: VisitTypeWhereInput
    orderBy?: VisitTypeOrderByWithRelationInput | VisitTypeOrderByWithRelationInput[]
    cursor?: VisitTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VisitTypeScalarFieldEnum | VisitTypeScalarFieldEnum[]
  }

  /**
   * Agency.riskCategories
   */
  export type Agency$riskCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskCategory
     */
    select?: RiskCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskCategory
     */
    omit?: RiskCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskCategoryInclude<ExtArgs> | null
    where?: RiskCategoryWhereInput
    orderBy?: RiskCategoryOrderByWithRelationInput | RiskCategoryOrderByWithRelationInput[]
    cursor?: RiskCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RiskCategoryScalarFieldEnum | RiskCategoryScalarFieldEnum[]
  }

  /**
   * Agency.Report
   */
  export type Agency$ReportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    where?: ReportWhereInput
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    cursor?: ReportWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * Agency without action
   */
  export type AgencyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
  }


  /**
   * Model ClientCareAssignment
   */

  export type AggregateClientCareAssignment = {
    _count: ClientCareAssignmentCountAggregateOutputType | null
    _min: ClientCareAssignmentMinAggregateOutputType | null
    _max: ClientCareAssignmentMaxAggregateOutputType | null
  }

  export type ClientCareAssignmentMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    userId: string | null
    isDecisionMaker: boolean | null
    assignedAt: Date | null
  }

  export type ClientCareAssignmentMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    userId: string | null
    isDecisionMaker: boolean | null
    assignedAt: Date | null
  }

  export type ClientCareAssignmentCountAggregateOutputType = {
    id: number
    clientId: number
    userId: number
    isDecisionMaker: number
    assignedAt: number
    _all: number
  }


  export type ClientCareAssignmentMinAggregateInputType = {
    id?: true
    clientId?: true
    userId?: true
    isDecisionMaker?: true
    assignedAt?: true
  }

  export type ClientCareAssignmentMaxAggregateInputType = {
    id?: true
    clientId?: true
    userId?: true
    isDecisionMaker?: true
    assignedAt?: true
  }

  export type ClientCareAssignmentCountAggregateInputType = {
    id?: true
    clientId?: true
    userId?: true
    isDecisionMaker?: true
    assignedAt?: true
    _all?: true
  }

  export type ClientCareAssignmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClientCareAssignment to aggregate.
     */
    where?: ClientCareAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientCareAssignments to fetch.
     */
    orderBy?: ClientCareAssignmentOrderByWithRelationInput | ClientCareAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClientCareAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientCareAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientCareAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ClientCareAssignments
    **/
    _count?: true | ClientCareAssignmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientCareAssignmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientCareAssignmentMaxAggregateInputType
  }

  export type GetClientCareAssignmentAggregateType<T extends ClientCareAssignmentAggregateArgs> = {
        [P in keyof T & keyof AggregateClientCareAssignment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClientCareAssignment[P]>
      : GetScalarType<T[P], AggregateClientCareAssignment[P]>
  }




  export type ClientCareAssignmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientCareAssignmentWhereInput
    orderBy?: ClientCareAssignmentOrderByWithAggregationInput | ClientCareAssignmentOrderByWithAggregationInput[]
    by: ClientCareAssignmentScalarFieldEnum[] | ClientCareAssignmentScalarFieldEnum
    having?: ClientCareAssignmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientCareAssignmentCountAggregateInputType | true
    _min?: ClientCareAssignmentMinAggregateInputType
    _max?: ClientCareAssignmentMaxAggregateInputType
  }

  export type ClientCareAssignmentGroupByOutputType = {
    id: string
    clientId: string
    userId: string
    isDecisionMaker: boolean
    assignedAt: Date
    _count: ClientCareAssignmentCountAggregateOutputType | null
    _min: ClientCareAssignmentMinAggregateOutputType | null
    _max: ClientCareAssignmentMaxAggregateOutputType | null
  }

  type GetClientCareAssignmentGroupByPayload<T extends ClientCareAssignmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientCareAssignmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientCareAssignmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientCareAssignmentGroupByOutputType[P]>
            : GetScalarType<T[P], ClientCareAssignmentGroupByOutputType[P]>
        }
      >
    >


  export type ClientCareAssignmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    userId?: boolean
    isDecisionMaker?: boolean
    assignedAt?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientCareAssignment"]>

  export type ClientCareAssignmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    userId?: boolean
    isDecisionMaker?: boolean
    assignedAt?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientCareAssignment"]>

  export type ClientCareAssignmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    userId?: boolean
    isDecisionMaker?: boolean
    assignedAt?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientCareAssignment"]>

  export type ClientCareAssignmentSelectScalar = {
    id?: boolean
    clientId?: boolean
    userId?: boolean
    isDecisionMaker?: boolean
    assignedAt?: boolean
  }

  export type ClientCareAssignmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clientId" | "userId" | "isDecisionMaker" | "assignedAt", ExtArgs["result"]["clientCareAssignment"]>
  export type ClientCareAssignmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ClientCareAssignmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ClientCareAssignmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ClientCareAssignmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ClientCareAssignment"
    objects: {
      client: Prisma.$UserPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      userId: string
      isDecisionMaker: boolean
      assignedAt: Date
    }, ExtArgs["result"]["clientCareAssignment"]>
    composites: {}
  }

  type ClientCareAssignmentGetPayload<S extends boolean | null | undefined | ClientCareAssignmentDefaultArgs> = $Result.GetResult<Prisma.$ClientCareAssignmentPayload, S>

  type ClientCareAssignmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClientCareAssignmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClientCareAssignmentCountAggregateInputType | true
    }

  export interface ClientCareAssignmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ClientCareAssignment'], meta: { name: 'ClientCareAssignment' } }
    /**
     * Find zero or one ClientCareAssignment that matches the filter.
     * @param {ClientCareAssignmentFindUniqueArgs} args - Arguments to find a ClientCareAssignment
     * @example
     * // Get one ClientCareAssignment
     * const clientCareAssignment = await prisma.clientCareAssignment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClientCareAssignmentFindUniqueArgs>(args: SelectSubset<T, ClientCareAssignmentFindUniqueArgs<ExtArgs>>): Prisma__ClientCareAssignmentClient<$Result.GetResult<Prisma.$ClientCareAssignmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ClientCareAssignment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClientCareAssignmentFindUniqueOrThrowArgs} args - Arguments to find a ClientCareAssignment
     * @example
     * // Get one ClientCareAssignment
     * const clientCareAssignment = await prisma.clientCareAssignment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClientCareAssignmentFindUniqueOrThrowArgs>(args: SelectSubset<T, ClientCareAssignmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClientCareAssignmentClient<$Result.GetResult<Prisma.$ClientCareAssignmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ClientCareAssignment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCareAssignmentFindFirstArgs} args - Arguments to find a ClientCareAssignment
     * @example
     * // Get one ClientCareAssignment
     * const clientCareAssignment = await prisma.clientCareAssignment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClientCareAssignmentFindFirstArgs>(args?: SelectSubset<T, ClientCareAssignmentFindFirstArgs<ExtArgs>>): Prisma__ClientCareAssignmentClient<$Result.GetResult<Prisma.$ClientCareAssignmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ClientCareAssignment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCareAssignmentFindFirstOrThrowArgs} args - Arguments to find a ClientCareAssignment
     * @example
     * // Get one ClientCareAssignment
     * const clientCareAssignment = await prisma.clientCareAssignment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClientCareAssignmentFindFirstOrThrowArgs>(args?: SelectSubset<T, ClientCareAssignmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClientCareAssignmentClient<$Result.GetResult<Prisma.$ClientCareAssignmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ClientCareAssignments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCareAssignmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ClientCareAssignments
     * const clientCareAssignments = await prisma.clientCareAssignment.findMany()
     * 
     * // Get first 10 ClientCareAssignments
     * const clientCareAssignments = await prisma.clientCareAssignment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clientCareAssignmentWithIdOnly = await prisma.clientCareAssignment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClientCareAssignmentFindManyArgs>(args?: SelectSubset<T, ClientCareAssignmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientCareAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ClientCareAssignment.
     * @param {ClientCareAssignmentCreateArgs} args - Arguments to create a ClientCareAssignment.
     * @example
     * // Create one ClientCareAssignment
     * const ClientCareAssignment = await prisma.clientCareAssignment.create({
     *   data: {
     *     // ... data to create a ClientCareAssignment
     *   }
     * })
     * 
     */
    create<T extends ClientCareAssignmentCreateArgs>(args: SelectSubset<T, ClientCareAssignmentCreateArgs<ExtArgs>>): Prisma__ClientCareAssignmentClient<$Result.GetResult<Prisma.$ClientCareAssignmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ClientCareAssignments.
     * @param {ClientCareAssignmentCreateManyArgs} args - Arguments to create many ClientCareAssignments.
     * @example
     * // Create many ClientCareAssignments
     * const clientCareAssignment = await prisma.clientCareAssignment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClientCareAssignmentCreateManyArgs>(args?: SelectSubset<T, ClientCareAssignmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ClientCareAssignments and returns the data saved in the database.
     * @param {ClientCareAssignmentCreateManyAndReturnArgs} args - Arguments to create many ClientCareAssignments.
     * @example
     * // Create many ClientCareAssignments
     * const clientCareAssignment = await prisma.clientCareAssignment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ClientCareAssignments and only return the `id`
     * const clientCareAssignmentWithIdOnly = await prisma.clientCareAssignment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClientCareAssignmentCreateManyAndReturnArgs>(args?: SelectSubset<T, ClientCareAssignmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientCareAssignmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ClientCareAssignment.
     * @param {ClientCareAssignmentDeleteArgs} args - Arguments to delete one ClientCareAssignment.
     * @example
     * // Delete one ClientCareAssignment
     * const ClientCareAssignment = await prisma.clientCareAssignment.delete({
     *   where: {
     *     // ... filter to delete one ClientCareAssignment
     *   }
     * })
     * 
     */
    delete<T extends ClientCareAssignmentDeleteArgs>(args: SelectSubset<T, ClientCareAssignmentDeleteArgs<ExtArgs>>): Prisma__ClientCareAssignmentClient<$Result.GetResult<Prisma.$ClientCareAssignmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ClientCareAssignment.
     * @param {ClientCareAssignmentUpdateArgs} args - Arguments to update one ClientCareAssignment.
     * @example
     * // Update one ClientCareAssignment
     * const clientCareAssignment = await prisma.clientCareAssignment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClientCareAssignmentUpdateArgs>(args: SelectSubset<T, ClientCareAssignmentUpdateArgs<ExtArgs>>): Prisma__ClientCareAssignmentClient<$Result.GetResult<Prisma.$ClientCareAssignmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ClientCareAssignments.
     * @param {ClientCareAssignmentDeleteManyArgs} args - Arguments to filter ClientCareAssignments to delete.
     * @example
     * // Delete a few ClientCareAssignments
     * const { count } = await prisma.clientCareAssignment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClientCareAssignmentDeleteManyArgs>(args?: SelectSubset<T, ClientCareAssignmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClientCareAssignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCareAssignmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ClientCareAssignments
     * const clientCareAssignment = await prisma.clientCareAssignment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClientCareAssignmentUpdateManyArgs>(args: SelectSubset<T, ClientCareAssignmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClientCareAssignments and returns the data updated in the database.
     * @param {ClientCareAssignmentUpdateManyAndReturnArgs} args - Arguments to update many ClientCareAssignments.
     * @example
     * // Update many ClientCareAssignments
     * const clientCareAssignment = await prisma.clientCareAssignment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ClientCareAssignments and only return the `id`
     * const clientCareAssignmentWithIdOnly = await prisma.clientCareAssignment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClientCareAssignmentUpdateManyAndReturnArgs>(args: SelectSubset<T, ClientCareAssignmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientCareAssignmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ClientCareAssignment.
     * @param {ClientCareAssignmentUpsertArgs} args - Arguments to update or create a ClientCareAssignment.
     * @example
     * // Update or create a ClientCareAssignment
     * const clientCareAssignment = await prisma.clientCareAssignment.upsert({
     *   create: {
     *     // ... data to create a ClientCareAssignment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ClientCareAssignment we want to update
     *   }
     * })
     */
    upsert<T extends ClientCareAssignmentUpsertArgs>(args: SelectSubset<T, ClientCareAssignmentUpsertArgs<ExtArgs>>): Prisma__ClientCareAssignmentClient<$Result.GetResult<Prisma.$ClientCareAssignmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ClientCareAssignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCareAssignmentCountArgs} args - Arguments to filter ClientCareAssignments to count.
     * @example
     * // Count the number of ClientCareAssignments
     * const count = await prisma.clientCareAssignment.count({
     *   where: {
     *     // ... the filter for the ClientCareAssignments we want to count
     *   }
     * })
    **/
    count<T extends ClientCareAssignmentCountArgs>(
      args?: Subset<T, ClientCareAssignmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientCareAssignmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ClientCareAssignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCareAssignmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientCareAssignmentAggregateArgs>(args: Subset<T, ClientCareAssignmentAggregateArgs>): Prisma.PrismaPromise<GetClientCareAssignmentAggregateType<T>>

    /**
     * Group by ClientCareAssignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCareAssignmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClientCareAssignmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClientCareAssignmentGroupByArgs['orderBy'] }
        : { orderBy?: ClientCareAssignmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClientCareAssignmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientCareAssignmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ClientCareAssignment model
   */
  readonly fields: ClientCareAssignmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ClientCareAssignment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClientCareAssignmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ClientCareAssignment model
   */ 
  interface ClientCareAssignmentFieldRefs {
    readonly id: FieldRef<"ClientCareAssignment", 'String'>
    readonly clientId: FieldRef<"ClientCareAssignment", 'String'>
    readonly userId: FieldRef<"ClientCareAssignment", 'String'>
    readonly isDecisionMaker: FieldRef<"ClientCareAssignment", 'Boolean'>
    readonly assignedAt: FieldRef<"ClientCareAssignment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ClientCareAssignment findUnique
   */
  export type ClientCareAssignmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCareAssignment
     */
    select?: ClientCareAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCareAssignment
     */
    omit?: ClientCareAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCareAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which ClientCareAssignment to fetch.
     */
    where: ClientCareAssignmentWhereUniqueInput
  }

  /**
   * ClientCareAssignment findUniqueOrThrow
   */
  export type ClientCareAssignmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCareAssignment
     */
    select?: ClientCareAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCareAssignment
     */
    omit?: ClientCareAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCareAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which ClientCareAssignment to fetch.
     */
    where: ClientCareAssignmentWhereUniqueInput
  }

  /**
   * ClientCareAssignment findFirst
   */
  export type ClientCareAssignmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCareAssignment
     */
    select?: ClientCareAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCareAssignment
     */
    omit?: ClientCareAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCareAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which ClientCareAssignment to fetch.
     */
    where?: ClientCareAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientCareAssignments to fetch.
     */
    orderBy?: ClientCareAssignmentOrderByWithRelationInput | ClientCareAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClientCareAssignments.
     */
    cursor?: ClientCareAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientCareAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientCareAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClientCareAssignments.
     */
    distinct?: ClientCareAssignmentScalarFieldEnum | ClientCareAssignmentScalarFieldEnum[]
  }

  /**
   * ClientCareAssignment findFirstOrThrow
   */
  export type ClientCareAssignmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCareAssignment
     */
    select?: ClientCareAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCareAssignment
     */
    omit?: ClientCareAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCareAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which ClientCareAssignment to fetch.
     */
    where?: ClientCareAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientCareAssignments to fetch.
     */
    orderBy?: ClientCareAssignmentOrderByWithRelationInput | ClientCareAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClientCareAssignments.
     */
    cursor?: ClientCareAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientCareAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientCareAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClientCareAssignments.
     */
    distinct?: ClientCareAssignmentScalarFieldEnum | ClientCareAssignmentScalarFieldEnum[]
  }

  /**
   * ClientCareAssignment findMany
   */
  export type ClientCareAssignmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCareAssignment
     */
    select?: ClientCareAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCareAssignment
     */
    omit?: ClientCareAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCareAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which ClientCareAssignments to fetch.
     */
    where?: ClientCareAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientCareAssignments to fetch.
     */
    orderBy?: ClientCareAssignmentOrderByWithRelationInput | ClientCareAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ClientCareAssignments.
     */
    cursor?: ClientCareAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientCareAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientCareAssignments.
     */
    skip?: number
    distinct?: ClientCareAssignmentScalarFieldEnum | ClientCareAssignmentScalarFieldEnum[]
  }

  /**
   * ClientCareAssignment create
   */
  export type ClientCareAssignmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCareAssignment
     */
    select?: ClientCareAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCareAssignment
     */
    omit?: ClientCareAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCareAssignmentInclude<ExtArgs> | null
    /**
     * The data needed to create a ClientCareAssignment.
     */
    data: XOR<ClientCareAssignmentCreateInput, ClientCareAssignmentUncheckedCreateInput>
  }

  /**
   * ClientCareAssignment createMany
   */
  export type ClientCareAssignmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ClientCareAssignments.
     */
    data: ClientCareAssignmentCreateManyInput | ClientCareAssignmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ClientCareAssignment createManyAndReturn
   */
  export type ClientCareAssignmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCareAssignment
     */
    select?: ClientCareAssignmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCareAssignment
     */
    omit?: ClientCareAssignmentOmit<ExtArgs> | null
    /**
     * The data used to create many ClientCareAssignments.
     */
    data: ClientCareAssignmentCreateManyInput | ClientCareAssignmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCareAssignmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ClientCareAssignment update
   */
  export type ClientCareAssignmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCareAssignment
     */
    select?: ClientCareAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCareAssignment
     */
    omit?: ClientCareAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCareAssignmentInclude<ExtArgs> | null
    /**
     * The data needed to update a ClientCareAssignment.
     */
    data: XOR<ClientCareAssignmentUpdateInput, ClientCareAssignmentUncheckedUpdateInput>
    /**
     * Choose, which ClientCareAssignment to update.
     */
    where: ClientCareAssignmentWhereUniqueInput
  }

  /**
   * ClientCareAssignment updateMany
   */
  export type ClientCareAssignmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ClientCareAssignments.
     */
    data: XOR<ClientCareAssignmentUpdateManyMutationInput, ClientCareAssignmentUncheckedUpdateManyInput>
    /**
     * Filter which ClientCareAssignments to update
     */
    where?: ClientCareAssignmentWhereInput
    /**
     * Limit how many ClientCareAssignments to update.
     */
    limit?: number
  }

  /**
   * ClientCareAssignment updateManyAndReturn
   */
  export type ClientCareAssignmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCareAssignment
     */
    select?: ClientCareAssignmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCareAssignment
     */
    omit?: ClientCareAssignmentOmit<ExtArgs> | null
    /**
     * The data used to update ClientCareAssignments.
     */
    data: XOR<ClientCareAssignmentUpdateManyMutationInput, ClientCareAssignmentUncheckedUpdateManyInput>
    /**
     * Filter which ClientCareAssignments to update
     */
    where?: ClientCareAssignmentWhereInput
    /**
     * Limit how many ClientCareAssignments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCareAssignmentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ClientCareAssignment upsert
   */
  export type ClientCareAssignmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCareAssignment
     */
    select?: ClientCareAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCareAssignment
     */
    omit?: ClientCareAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCareAssignmentInclude<ExtArgs> | null
    /**
     * The filter to search for the ClientCareAssignment to update in case it exists.
     */
    where: ClientCareAssignmentWhereUniqueInput
    /**
     * In case the ClientCareAssignment found by the `where` argument doesn't exist, create a new ClientCareAssignment with this data.
     */
    create: XOR<ClientCareAssignmentCreateInput, ClientCareAssignmentUncheckedCreateInput>
    /**
     * In case the ClientCareAssignment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClientCareAssignmentUpdateInput, ClientCareAssignmentUncheckedUpdateInput>
  }

  /**
   * ClientCareAssignment delete
   */
  export type ClientCareAssignmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCareAssignment
     */
    select?: ClientCareAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCareAssignment
     */
    omit?: ClientCareAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCareAssignmentInclude<ExtArgs> | null
    /**
     * Filter which ClientCareAssignment to delete.
     */
    where: ClientCareAssignmentWhereUniqueInput
  }

  /**
   * ClientCareAssignment deleteMany
   */
  export type ClientCareAssignmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClientCareAssignments to delete
     */
    where?: ClientCareAssignmentWhereInput
    /**
     * Limit how many ClientCareAssignments to delete.
     */
    limit?: number
  }

  /**
   * ClientCareAssignment without action
   */
  export type ClientCareAssignmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCareAssignment
     */
    select?: ClientCareAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCareAssignment
     */
    omit?: ClientCareAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCareAssignmentInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    chargeRate: number | null
  }

  export type UserSumAggregateOutputType = {
    chargeRate: number | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    cognitoId: string | null
    email: string | null
    firstName: string | null
    lastName: string | null
    role: $Enums.Role | null
    subRole: $Enums.SubRole | null
    createdAt: Date | null
    updatedAt: Date | null
    agencyId: string | null
    invitedById: string | null
    title: string | null
    addressLine1: string | null
    addressLine2: string | null
    townOrCity: string | null
    county: string | null
    postalCode: string | null
    propertyAccess: string | null
    phoneNumber: string | null
    nhsNumber: string | null
    dnraOrder: boolean | null
    chargeRate: number | null
    mobility: string | null
    likesDislikes: string | null
    dateOfBirth: Date | null
    languages: string | null
    allergies: string | null
    interests: string | null
    history: string | null
    preferredName: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    cognitoId: string | null
    email: string | null
    firstName: string | null
    lastName: string | null
    role: $Enums.Role | null
    subRole: $Enums.SubRole | null
    createdAt: Date | null
    updatedAt: Date | null
    agencyId: string | null
    invitedById: string | null
    title: string | null
    addressLine1: string | null
    addressLine2: string | null
    townOrCity: string | null
    county: string | null
    postalCode: string | null
    propertyAccess: string | null
    phoneNumber: string | null
    nhsNumber: string | null
    dnraOrder: boolean | null
    chargeRate: number | null
    mobility: string | null
    likesDislikes: string | null
    dateOfBirth: Date | null
    languages: string | null
    allergies: string | null
    interests: string | null
    history: string | null
    preferredName: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    cognitoId: number
    email: number
    firstName: number
    lastName: number
    role: number
    subRole: number
    createdAt: number
    updatedAt: number
    agencyId: number
    invitedById: number
    title: number
    addressLine1: number
    addressLine2: number
    townOrCity: number
    county: number
    postalCode: number
    propertyAccess: number
    phoneNumber: number
    nhsNumber: number
    dnraOrder: number
    chargeRate: number
    mobility: number
    likesDislikes: number
    dateOfBirth: number
    languages: number
    allergies: number
    interests: number
    history: number
    preferredName: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    chargeRate?: true
  }

  export type UserSumAggregateInputType = {
    chargeRate?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    cognitoId?: true
    email?: true
    firstName?: true
    lastName?: true
    role?: true
    subRole?: true
    createdAt?: true
    updatedAt?: true
    agencyId?: true
    invitedById?: true
    title?: true
    addressLine1?: true
    addressLine2?: true
    townOrCity?: true
    county?: true
    postalCode?: true
    propertyAccess?: true
    phoneNumber?: true
    nhsNumber?: true
    dnraOrder?: true
    chargeRate?: true
    mobility?: true
    likesDislikes?: true
    dateOfBirth?: true
    languages?: true
    allergies?: true
    interests?: true
    history?: true
    preferredName?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    cognitoId?: true
    email?: true
    firstName?: true
    lastName?: true
    role?: true
    subRole?: true
    createdAt?: true
    updatedAt?: true
    agencyId?: true
    invitedById?: true
    title?: true
    addressLine1?: true
    addressLine2?: true
    townOrCity?: true
    county?: true
    postalCode?: true
    propertyAccess?: true
    phoneNumber?: true
    nhsNumber?: true
    dnraOrder?: true
    chargeRate?: true
    mobility?: true
    likesDislikes?: true
    dateOfBirth?: true
    languages?: true
    allergies?: true
    interests?: true
    history?: true
    preferredName?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    cognitoId?: true
    email?: true
    firstName?: true
    lastName?: true
    role?: true
    subRole?: true
    createdAt?: true
    updatedAt?: true
    agencyId?: true
    invitedById?: true
    title?: true
    addressLine1?: true
    addressLine2?: true
    townOrCity?: true
    county?: true
    postalCode?: true
    propertyAccess?: true
    phoneNumber?: true
    nhsNumber?: true
    dnraOrder?: true
    chargeRate?: true
    mobility?: true
    likesDislikes?: true
    dateOfBirth?: true
    languages?: true
    allergies?: true
    interests?: true
    history?: true
    preferredName?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole: $Enums.SubRole | null
    createdAt: Date
    updatedAt: Date
    agencyId: string | null
    invitedById: string | null
    title: string | null
    addressLine1: string | null
    addressLine2: string | null
    townOrCity: string | null
    county: string | null
    postalCode: string | null
    propertyAccess: string | null
    phoneNumber: string | null
    nhsNumber: string | null
    dnraOrder: boolean | null
    chargeRate: number | null
    mobility: string | null
    likesDislikes: string | null
    dateOfBirth: Date | null
    languages: string | null
    allergies: string | null
    interests: string | null
    history: string | null
    preferredName: string | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cognitoId?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    role?: boolean
    subRole?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agencyId?: boolean
    invitedById?: boolean
    title?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    townOrCity?: boolean
    county?: boolean
    postalCode?: boolean
    propertyAccess?: boolean
    phoneNumber?: boolean
    nhsNumber?: boolean
    dnraOrder?: boolean
    chargeRate?: boolean
    mobility?: boolean
    likesDislikes?: boolean
    dateOfBirth?: boolean
    languages?: boolean
    allergies?: boolean
    interests?: boolean
    history?: boolean
    preferredName?: boolean
    sentInvitations?: boolean | User$sentInvitationsArgs<ExtArgs>
    agency?: boolean | User$agencyArgs<ExtArgs>
    invitedBy?: boolean | User$invitedByArgs<ExtArgs>
    invitedUsers?: boolean | User$invitedUsersArgs<ExtArgs>
    communicationPreference?: boolean | User$communicationPreferenceArgs<ExtArgs>
    careAssignments?: boolean | User$careAssignmentsArgs<ExtArgs>
    clientAssignments?: boolean | User$clientAssignmentsArgs<ExtArgs>
    careWorkerSchedules?: boolean | User$careWorkerSchedulesArgs<ExtArgs>
    clientSchedules?: boolean | User$clientSchedulesArgs<ExtArgs>
    careReports?: boolean | User$careReportsArgs<ExtArgs>
    clientReports?: boolean | User$clientReportsArgs<ExtArgs>
    careWorkerMedications?: boolean | User$careWorkerMedicationsArgs<ExtArgs>
    clientMedications?: boolean | User$clientMedicationsArgs<ExtArgs>
    careWorkerMileage?: boolean | User$careWorkerMileageArgs<ExtArgs>
    clientMileage?: boolean | User$clientMileageArgs<ExtArgs>
    profile?: boolean | User$profileArgs<ExtArgs>
    sentMessages?: boolean | User$sentMessagesArgs<ExtArgs>
    receivedMessages?: boolean | User$receivedMessagesArgs<ExtArgs>
    medicationRecords?: boolean | User$medicationRecordsArgs<ExtArgs>
    mileageRecords?: boolean | User$mileageRecordsArgs<ExtArgs>
    documents?: boolean | User$documentsArgs<ExtArgs>
    incidentReports?: boolean | User$incidentReportsArgs<ExtArgs>
    keyContacts?: boolean | User$keyContactsArgs<ExtArgs>
    careOutcomes?: boolean | User$careOutcomesArgs<ExtArgs>
    Invoice?: boolean | User$InvoiceArgs<ExtArgs>
    Document?: boolean | User$DocumentArgs<ExtArgs>
    Notification?: boolean | User$NotificationArgs<ExtArgs>
    riskAssessments?: boolean | User$riskAssessmentsArgs<ExtArgs>
    familyAccess?: boolean | User$familyAccessArgs<ExtArgs>
    communicationLogs?: boolean | User$communicationLogsArgs<ExtArgs>
    reminders?: boolean | User$remindersArgs<ExtArgs>
    medicationAdministrations?: boolean | User$medicationAdministrationsArgs<ExtArgs>
    reportEdits?: boolean | User$reportEditsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cognitoId?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    role?: boolean
    subRole?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agencyId?: boolean
    invitedById?: boolean
    title?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    townOrCity?: boolean
    county?: boolean
    postalCode?: boolean
    propertyAccess?: boolean
    phoneNumber?: boolean
    nhsNumber?: boolean
    dnraOrder?: boolean
    chargeRate?: boolean
    mobility?: boolean
    likesDislikes?: boolean
    dateOfBirth?: boolean
    languages?: boolean
    allergies?: boolean
    interests?: boolean
    history?: boolean
    preferredName?: boolean
    agency?: boolean | User$agencyArgs<ExtArgs>
    invitedBy?: boolean | User$invitedByArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cognitoId?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    role?: boolean
    subRole?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agencyId?: boolean
    invitedById?: boolean
    title?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    townOrCity?: boolean
    county?: boolean
    postalCode?: boolean
    propertyAccess?: boolean
    phoneNumber?: boolean
    nhsNumber?: boolean
    dnraOrder?: boolean
    chargeRate?: boolean
    mobility?: boolean
    likesDislikes?: boolean
    dateOfBirth?: boolean
    languages?: boolean
    allergies?: boolean
    interests?: boolean
    history?: boolean
    preferredName?: boolean
    agency?: boolean | User$agencyArgs<ExtArgs>
    invitedBy?: boolean | User$invitedByArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    cognitoId?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    role?: boolean
    subRole?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agencyId?: boolean
    invitedById?: boolean
    title?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    townOrCity?: boolean
    county?: boolean
    postalCode?: boolean
    propertyAccess?: boolean
    phoneNumber?: boolean
    nhsNumber?: boolean
    dnraOrder?: boolean
    chargeRate?: boolean
    mobility?: boolean
    likesDislikes?: boolean
    dateOfBirth?: boolean
    languages?: boolean
    allergies?: boolean
    interests?: boolean
    history?: boolean
    preferredName?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cognitoId" | "email" | "firstName" | "lastName" | "role" | "subRole" | "createdAt" | "updatedAt" | "agencyId" | "invitedById" | "title" | "addressLine1" | "addressLine2" | "townOrCity" | "county" | "postalCode" | "propertyAccess" | "phoneNumber" | "nhsNumber" | "dnraOrder" | "chargeRate" | "mobility" | "likesDislikes" | "dateOfBirth" | "languages" | "allergies" | "interests" | "history" | "preferredName", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sentInvitations?: boolean | User$sentInvitationsArgs<ExtArgs>
    agency?: boolean | User$agencyArgs<ExtArgs>
    invitedBy?: boolean | User$invitedByArgs<ExtArgs>
    invitedUsers?: boolean | User$invitedUsersArgs<ExtArgs>
    communicationPreference?: boolean | User$communicationPreferenceArgs<ExtArgs>
    careAssignments?: boolean | User$careAssignmentsArgs<ExtArgs>
    clientAssignments?: boolean | User$clientAssignmentsArgs<ExtArgs>
    careWorkerSchedules?: boolean | User$careWorkerSchedulesArgs<ExtArgs>
    clientSchedules?: boolean | User$clientSchedulesArgs<ExtArgs>
    careReports?: boolean | User$careReportsArgs<ExtArgs>
    clientReports?: boolean | User$clientReportsArgs<ExtArgs>
    careWorkerMedications?: boolean | User$careWorkerMedicationsArgs<ExtArgs>
    clientMedications?: boolean | User$clientMedicationsArgs<ExtArgs>
    careWorkerMileage?: boolean | User$careWorkerMileageArgs<ExtArgs>
    clientMileage?: boolean | User$clientMileageArgs<ExtArgs>
    profile?: boolean | User$profileArgs<ExtArgs>
    sentMessages?: boolean | User$sentMessagesArgs<ExtArgs>
    receivedMessages?: boolean | User$receivedMessagesArgs<ExtArgs>
    medicationRecords?: boolean | User$medicationRecordsArgs<ExtArgs>
    mileageRecords?: boolean | User$mileageRecordsArgs<ExtArgs>
    documents?: boolean | User$documentsArgs<ExtArgs>
    incidentReports?: boolean | User$incidentReportsArgs<ExtArgs>
    keyContacts?: boolean | User$keyContactsArgs<ExtArgs>
    careOutcomes?: boolean | User$careOutcomesArgs<ExtArgs>
    Invoice?: boolean | User$InvoiceArgs<ExtArgs>
    Document?: boolean | User$DocumentArgs<ExtArgs>
    Notification?: boolean | User$NotificationArgs<ExtArgs>
    riskAssessments?: boolean | User$riskAssessmentsArgs<ExtArgs>
    familyAccess?: boolean | User$familyAccessArgs<ExtArgs>
    communicationLogs?: boolean | User$communicationLogsArgs<ExtArgs>
    reminders?: boolean | User$remindersArgs<ExtArgs>
    medicationAdministrations?: boolean | User$medicationAdministrationsArgs<ExtArgs>
    reportEdits?: boolean | User$reportEditsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | User$agencyArgs<ExtArgs>
    invitedBy?: boolean | User$invitedByArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | User$agencyArgs<ExtArgs>
    invitedBy?: boolean | User$invitedByArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      sentInvitations: Prisma.$InvitationPayload<ExtArgs>[]
      agency: Prisma.$AgencyPayload<ExtArgs> | null
      invitedBy: Prisma.$UserPayload<ExtArgs> | null
      invitedUsers: Prisma.$UserPayload<ExtArgs>[]
      communicationPreference: Prisma.$CommunicationPreferencePayload<ExtArgs> | null
      careAssignments: Prisma.$ClientCareAssignmentPayload<ExtArgs>[]
      clientAssignments: Prisma.$ClientCareAssignmentPayload<ExtArgs>[]
      careWorkerSchedules: Prisma.$SchedulePayload<ExtArgs>[]
      clientSchedules: Prisma.$SchedulePayload<ExtArgs>[]
      careReports: Prisma.$ReportPayload<ExtArgs>[]
      clientReports: Prisma.$ReportPayload<ExtArgs>[]
      careWorkerMedications: Prisma.$MedicationRecordPayload<ExtArgs>[]
      clientMedications: Prisma.$MedicationRecordPayload<ExtArgs>[]
      careWorkerMileage: Prisma.$MileageRecordPayload<ExtArgs>[]
      clientMileage: Prisma.$MileageRecordPayload<ExtArgs>[]
      profile: Prisma.$ProfilePayload<ExtArgs> | null
      sentMessages: Prisma.$MessagePayload<ExtArgs>[]
      receivedMessages: Prisma.$MessagePayload<ExtArgs>[]
      medicationRecords: Prisma.$MedicationRecordPayload<ExtArgs>[]
      mileageRecords: Prisma.$MileageRecordPayload<ExtArgs>[]
      documents: Prisma.$DocumentPayload<ExtArgs>[]
      incidentReports: Prisma.$IncidentReportPayload<ExtArgs>[]
      keyContacts: Prisma.$KeyContactPayload<ExtArgs>[]
      careOutcomes: Prisma.$CareOutcomePayload<ExtArgs>[]
      Invoice: Prisma.$InvoicePayload<ExtArgs>[]
      Document: Prisma.$DocumentPayload<ExtArgs>[]
      Notification: Prisma.$NotificationPayload<ExtArgs>[]
      riskAssessments: Prisma.$RiskAssessmentPayload<ExtArgs>[]
      familyAccess: Prisma.$FamilyAccessPayload<ExtArgs>[]
      communicationLogs: Prisma.$CommunicationLogPayload<ExtArgs>[]
      reminders: Prisma.$ReminderPayload<ExtArgs>[]
      medicationAdministrations: Prisma.$MedicationAdministrationPayload<ExtArgs>[]
      reportEdits: Prisma.$ReportEditPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      cognitoId: string
      email: string
      firstName: string
      lastName: string
      role: $Enums.Role
      subRole: $Enums.SubRole | null
      createdAt: Date
      updatedAt: Date
      agencyId: string | null
      invitedById: string | null
      title: string | null
      addressLine1: string | null
      addressLine2: string | null
      townOrCity: string | null
      county: string | null
      postalCode: string | null
      propertyAccess: string | null
      phoneNumber: string | null
      nhsNumber: string | null
      dnraOrder: boolean | null
      chargeRate: number | null
      mobility: string | null
      likesDislikes: string | null
      dateOfBirth: Date | null
      languages: string | null
      allergies: string | null
      interests: string | null
      history: string | null
      preferredName: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sentInvitations<T extends User$sentInvitationsArgs<ExtArgs> = {}>(args?: Subset<T, User$sentInvitationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    agency<T extends User$agencyArgs<ExtArgs> = {}>(args?: Subset<T, User$agencyArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    invitedBy<T extends User$invitedByArgs<ExtArgs> = {}>(args?: Subset<T, User$invitedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    invitedUsers<T extends User$invitedUsersArgs<ExtArgs> = {}>(args?: Subset<T, User$invitedUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    communicationPreference<T extends User$communicationPreferenceArgs<ExtArgs> = {}>(args?: Subset<T, User$communicationPreferenceArgs<ExtArgs>>): Prisma__CommunicationPreferenceClient<$Result.GetResult<Prisma.$CommunicationPreferencePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    careAssignments<T extends User$careAssignmentsArgs<ExtArgs> = {}>(args?: Subset<T, User$careAssignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientCareAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    clientAssignments<T extends User$clientAssignmentsArgs<ExtArgs> = {}>(args?: Subset<T, User$clientAssignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientCareAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    careWorkerSchedules<T extends User$careWorkerSchedulesArgs<ExtArgs> = {}>(args?: Subset<T, User$careWorkerSchedulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SchedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    clientSchedules<T extends User$clientSchedulesArgs<ExtArgs> = {}>(args?: Subset<T, User$clientSchedulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SchedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    careReports<T extends User$careReportsArgs<ExtArgs> = {}>(args?: Subset<T, User$careReportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    clientReports<T extends User$clientReportsArgs<ExtArgs> = {}>(args?: Subset<T, User$clientReportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    careWorkerMedications<T extends User$careWorkerMedicationsArgs<ExtArgs> = {}>(args?: Subset<T, User$careWorkerMedicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    clientMedications<T extends User$clientMedicationsArgs<ExtArgs> = {}>(args?: Subset<T, User$clientMedicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    careWorkerMileage<T extends User$careWorkerMileageArgs<ExtArgs> = {}>(args?: Subset<T, User$careWorkerMileageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MileageRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    clientMileage<T extends User$clientMileageArgs<ExtArgs> = {}>(args?: Subset<T, User$clientMileageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MileageRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    profile<T extends User$profileArgs<ExtArgs> = {}>(args?: Subset<T, User$profileArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sentMessages<T extends User$sentMessagesArgs<ExtArgs> = {}>(args?: Subset<T, User$sentMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receivedMessages<T extends User$receivedMessagesArgs<ExtArgs> = {}>(args?: Subset<T, User$receivedMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    medicationRecords<T extends User$medicationRecordsArgs<ExtArgs> = {}>(args?: Subset<T, User$medicationRecordsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    mileageRecords<T extends User$mileageRecordsArgs<ExtArgs> = {}>(args?: Subset<T, User$mileageRecordsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MileageRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    documents<T extends User$documentsArgs<ExtArgs> = {}>(args?: Subset<T, User$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    incidentReports<T extends User$incidentReportsArgs<ExtArgs> = {}>(args?: Subset<T, User$incidentReportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IncidentReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    keyContacts<T extends User$keyContactsArgs<ExtArgs> = {}>(args?: Subset<T, User$keyContactsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KeyContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    careOutcomes<T extends User$careOutcomesArgs<ExtArgs> = {}>(args?: Subset<T, User$careOutcomesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CareOutcomePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Invoice<T extends User$InvoiceArgs<ExtArgs> = {}>(args?: Subset<T, User$InvoiceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Document<T extends User$DocumentArgs<ExtArgs> = {}>(args?: Subset<T, User$DocumentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Notification<T extends User$NotificationArgs<ExtArgs> = {}>(args?: Subset<T, User$NotificationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    riskAssessments<T extends User$riskAssessmentsArgs<ExtArgs> = {}>(args?: Subset<T, User$riskAssessmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiskAssessmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    familyAccess<T extends User$familyAccessArgs<ExtArgs> = {}>(args?: Subset<T, User$familyAccessArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyAccessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    communicationLogs<T extends User$communicationLogsArgs<ExtArgs> = {}>(args?: Subset<T, User$communicationLogsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunicationLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reminders<T extends User$remindersArgs<ExtArgs> = {}>(args?: Subset<T, User$remindersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReminderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    medicationAdministrations<T extends User$medicationAdministrationsArgs<ExtArgs> = {}>(args?: Subset<T, User$medicationAdministrationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationAdministrationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reportEdits<T extends User$reportEditsArgs<ExtArgs> = {}>(args?: Subset<T, User$reportEditsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportEditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly cognitoId: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'Role'>
    readonly subRole: FieldRef<"User", 'SubRole'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly agencyId: FieldRef<"User", 'String'>
    readonly invitedById: FieldRef<"User", 'String'>
    readonly title: FieldRef<"User", 'String'>
    readonly addressLine1: FieldRef<"User", 'String'>
    readonly addressLine2: FieldRef<"User", 'String'>
    readonly townOrCity: FieldRef<"User", 'String'>
    readonly county: FieldRef<"User", 'String'>
    readonly postalCode: FieldRef<"User", 'String'>
    readonly propertyAccess: FieldRef<"User", 'String'>
    readonly phoneNumber: FieldRef<"User", 'String'>
    readonly nhsNumber: FieldRef<"User", 'String'>
    readonly dnraOrder: FieldRef<"User", 'Boolean'>
    readonly chargeRate: FieldRef<"User", 'Float'>
    readonly mobility: FieldRef<"User", 'String'>
    readonly likesDislikes: FieldRef<"User", 'String'>
    readonly dateOfBirth: FieldRef<"User", 'DateTime'>
    readonly languages: FieldRef<"User", 'String'>
    readonly allergies: FieldRef<"User", 'String'>
    readonly interests: FieldRef<"User", 'String'>
    readonly history: FieldRef<"User", 'String'>
    readonly preferredName: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.sentInvitations
   */
  export type User$sentInvitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    where?: InvitationWhereInput
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    cursor?: InvitationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvitationScalarFieldEnum | InvitationScalarFieldEnum[]
  }

  /**
   * User.agency
   */
  export type User$agencyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    where?: AgencyWhereInput
  }

  /**
   * User.invitedBy
   */
  export type User$invitedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.invitedUsers
   */
  export type User$invitedUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.communicationPreference
   */
  export type User$communicationPreferenceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationPreference
     */
    select?: CommunicationPreferenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationPreference
     */
    omit?: CommunicationPreferenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationPreferenceInclude<ExtArgs> | null
    where?: CommunicationPreferenceWhereInput
  }

  /**
   * User.careAssignments
   */
  export type User$careAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCareAssignment
     */
    select?: ClientCareAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCareAssignment
     */
    omit?: ClientCareAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCareAssignmentInclude<ExtArgs> | null
    where?: ClientCareAssignmentWhereInput
    orderBy?: ClientCareAssignmentOrderByWithRelationInput | ClientCareAssignmentOrderByWithRelationInput[]
    cursor?: ClientCareAssignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientCareAssignmentScalarFieldEnum | ClientCareAssignmentScalarFieldEnum[]
  }

  /**
   * User.clientAssignments
   */
  export type User$clientAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCareAssignment
     */
    select?: ClientCareAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCareAssignment
     */
    omit?: ClientCareAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCareAssignmentInclude<ExtArgs> | null
    where?: ClientCareAssignmentWhereInput
    orderBy?: ClientCareAssignmentOrderByWithRelationInput | ClientCareAssignmentOrderByWithRelationInput[]
    cursor?: ClientCareAssignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientCareAssignmentScalarFieldEnum | ClientCareAssignmentScalarFieldEnum[]
  }

  /**
   * User.careWorkerSchedules
   */
  export type User$careWorkerSchedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Schedule
     */
    select?: ScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Schedule
     */
    omit?: ScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScheduleInclude<ExtArgs> | null
    where?: ScheduleWhereInput
    orderBy?: ScheduleOrderByWithRelationInput | ScheduleOrderByWithRelationInput[]
    cursor?: ScheduleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ScheduleScalarFieldEnum | ScheduleScalarFieldEnum[]
  }

  /**
   * User.clientSchedules
   */
  export type User$clientSchedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Schedule
     */
    select?: ScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Schedule
     */
    omit?: ScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScheduleInclude<ExtArgs> | null
    where?: ScheduleWhereInput
    orderBy?: ScheduleOrderByWithRelationInput | ScheduleOrderByWithRelationInput[]
    cursor?: ScheduleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ScheduleScalarFieldEnum | ScheduleScalarFieldEnum[]
  }

  /**
   * User.careReports
   */
  export type User$careReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    where?: ReportWhereInput
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    cursor?: ReportWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * User.clientReports
   */
  export type User$clientReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    where?: ReportWhereInput
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    cursor?: ReportWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * User.careWorkerMedications
   */
  export type User$careWorkerMedicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecord
     */
    select?: MedicationRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationRecord
     */
    omit?: MedicationRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationRecordInclude<ExtArgs> | null
    where?: MedicationRecordWhereInput
    orderBy?: MedicationRecordOrderByWithRelationInput | MedicationRecordOrderByWithRelationInput[]
    cursor?: MedicationRecordWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MedicationRecordScalarFieldEnum | MedicationRecordScalarFieldEnum[]
  }

  /**
   * User.clientMedications
   */
  export type User$clientMedicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecord
     */
    select?: MedicationRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationRecord
     */
    omit?: MedicationRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationRecordInclude<ExtArgs> | null
    where?: MedicationRecordWhereInput
    orderBy?: MedicationRecordOrderByWithRelationInput | MedicationRecordOrderByWithRelationInput[]
    cursor?: MedicationRecordWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MedicationRecordScalarFieldEnum | MedicationRecordScalarFieldEnum[]
  }

  /**
   * User.careWorkerMileage
   */
  export type User$careWorkerMileageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MileageRecord
     */
    select?: MileageRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MileageRecord
     */
    omit?: MileageRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MileageRecordInclude<ExtArgs> | null
    where?: MileageRecordWhereInput
    orderBy?: MileageRecordOrderByWithRelationInput | MileageRecordOrderByWithRelationInput[]
    cursor?: MileageRecordWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MileageRecordScalarFieldEnum | MileageRecordScalarFieldEnum[]
  }

  /**
   * User.clientMileage
   */
  export type User$clientMileageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MileageRecord
     */
    select?: MileageRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MileageRecord
     */
    omit?: MileageRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MileageRecordInclude<ExtArgs> | null
    where?: MileageRecordWhereInput
    orderBy?: MileageRecordOrderByWithRelationInput | MileageRecordOrderByWithRelationInput[]
    cursor?: MileageRecordWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MileageRecordScalarFieldEnum | MileageRecordScalarFieldEnum[]
  }

  /**
   * User.profile
   */
  export type User$profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
  }

  /**
   * User.sentMessages
   */
  export type User$sentMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * User.receivedMessages
   */
  export type User$receivedMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * User.medicationRecords
   */
  export type User$medicationRecordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecord
     */
    select?: MedicationRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationRecord
     */
    omit?: MedicationRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationRecordInclude<ExtArgs> | null
    where?: MedicationRecordWhereInput
    orderBy?: MedicationRecordOrderByWithRelationInput | MedicationRecordOrderByWithRelationInput[]
    cursor?: MedicationRecordWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MedicationRecordScalarFieldEnum | MedicationRecordScalarFieldEnum[]
  }

  /**
   * User.mileageRecords
   */
  export type User$mileageRecordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MileageRecord
     */
    select?: MileageRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MileageRecord
     */
    omit?: MileageRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MileageRecordInclude<ExtArgs> | null
    where?: MileageRecordWhereInput
    orderBy?: MileageRecordOrderByWithRelationInput | MileageRecordOrderByWithRelationInput[]
    cursor?: MileageRecordWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MileageRecordScalarFieldEnum | MileageRecordScalarFieldEnum[]
  }

  /**
   * User.documents
   */
  export type User$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    where?: DocumentWhereInput
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    cursor?: DocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * User.incidentReports
   */
  export type User$incidentReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IncidentReport
     */
    select?: IncidentReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IncidentReport
     */
    omit?: IncidentReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentReportInclude<ExtArgs> | null
    where?: IncidentReportWhereInput
    orderBy?: IncidentReportOrderByWithRelationInput | IncidentReportOrderByWithRelationInput[]
    cursor?: IncidentReportWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IncidentReportScalarFieldEnum | IncidentReportScalarFieldEnum[]
  }

  /**
   * User.keyContacts
   */
  export type User$keyContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KeyContact
     */
    select?: KeyContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KeyContact
     */
    omit?: KeyContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KeyContactInclude<ExtArgs> | null
    where?: KeyContactWhereInput
    orderBy?: KeyContactOrderByWithRelationInput | KeyContactOrderByWithRelationInput[]
    cursor?: KeyContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KeyContactScalarFieldEnum | KeyContactScalarFieldEnum[]
  }

  /**
   * User.careOutcomes
   */
  export type User$careOutcomesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CareOutcome
     */
    select?: CareOutcomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CareOutcome
     */
    omit?: CareOutcomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CareOutcomeInclude<ExtArgs> | null
    where?: CareOutcomeWhereInput
    orderBy?: CareOutcomeOrderByWithRelationInput | CareOutcomeOrderByWithRelationInput[]
    cursor?: CareOutcomeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CareOutcomeScalarFieldEnum | CareOutcomeScalarFieldEnum[]
  }

  /**
   * User.Invoice
   */
  export type User$InvoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    cursor?: InvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * User.Document
   */
  export type User$DocumentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    where?: DocumentWhereInput
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    cursor?: DocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * User.Notification
   */
  export type User$NotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.riskAssessments
   */
  export type User$riskAssessmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskAssessment
     */
    select?: RiskAssessmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskAssessment
     */
    omit?: RiskAssessmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskAssessmentInclude<ExtArgs> | null
    where?: RiskAssessmentWhereInput
    orderBy?: RiskAssessmentOrderByWithRelationInput | RiskAssessmentOrderByWithRelationInput[]
    cursor?: RiskAssessmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RiskAssessmentScalarFieldEnum | RiskAssessmentScalarFieldEnum[]
  }

  /**
   * User.familyAccess
   */
  export type User$familyAccessArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyAccess
     */
    select?: FamilyAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FamilyAccess
     */
    omit?: FamilyAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyAccessInclude<ExtArgs> | null
    where?: FamilyAccessWhereInput
    orderBy?: FamilyAccessOrderByWithRelationInput | FamilyAccessOrderByWithRelationInput[]
    cursor?: FamilyAccessWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FamilyAccessScalarFieldEnum | FamilyAccessScalarFieldEnum[]
  }

  /**
   * User.communicationLogs
   */
  export type User$communicationLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationLog
     */
    select?: CommunicationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationLog
     */
    omit?: CommunicationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationLogInclude<ExtArgs> | null
    where?: CommunicationLogWhereInput
    orderBy?: CommunicationLogOrderByWithRelationInput | CommunicationLogOrderByWithRelationInput[]
    cursor?: CommunicationLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommunicationLogScalarFieldEnum | CommunicationLogScalarFieldEnum[]
  }

  /**
   * User.reminders
   */
  export type User$remindersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reminder
     */
    select?: ReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reminder
     */
    omit?: ReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReminderInclude<ExtArgs> | null
    where?: ReminderWhereInput
    orderBy?: ReminderOrderByWithRelationInput | ReminderOrderByWithRelationInput[]
    cursor?: ReminderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReminderScalarFieldEnum | ReminderScalarFieldEnum[]
  }

  /**
   * User.medicationAdministrations
   */
  export type User$medicationAdministrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationAdministration
     */
    select?: MedicationAdministrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationAdministration
     */
    omit?: MedicationAdministrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationAdministrationInclude<ExtArgs> | null
    where?: MedicationAdministrationWhereInput
    orderBy?: MedicationAdministrationOrderByWithRelationInput | MedicationAdministrationOrderByWithRelationInput[]
    cursor?: MedicationAdministrationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MedicationAdministrationScalarFieldEnum | MedicationAdministrationScalarFieldEnum[]
  }

  /**
   * User.reportEdits
   */
  export type User$reportEditsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportEdit
     */
    select?: ReportEditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportEdit
     */
    omit?: ReportEditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportEditInclude<ExtArgs> | null
    where?: ReportEditWhereInput
    orderBy?: ReportEditOrderByWithRelationInput | ReportEditOrderByWithRelationInput[]
    cursor?: ReportEditWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportEditScalarFieldEnum | ReportEditScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model CommunicationPreference
   */

  export type AggregateCommunicationPreference = {
    _count: CommunicationPreferenceCountAggregateOutputType | null
    _min: CommunicationPreferenceMinAggregateOutputType | null
    _max: CommunicationPreferenceMaxAggregateOutputType | null
  }

  export type CommunicationPreferenceMinAggregateOutputType = {
    id: string | null
    userId: string | null
    email: boolean | null
    sms: boolean | null
    phone: boolean | null
    notes: string | null
  }

  export type CommunicationPreferenceMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    email: boolean | null
    sms: boolean | null
    phone: boolean | null
    notes: string | null
  }

  export type CommunicationPreferenceCountAggregateOutputType = {
    id: number
    userId: number
    email: number
    sms: number
    phone: number
    notes: number
    _all: number
  }


  export type CommunicationPreferenceMinAggregateInputType = {
    id?: true
    userId?: true
    email?: true
    sms?: true
    phone?: true
    notes?: true
  }

  export type CommunicationPreferenceMaxAggregateInputType = {
    id?: true
    userId?: true
    email?: true
    sms?: true
    phone?: true
    notes?: true
  }

  export type CommunicationPreferenceCountAggregateInputType = {
    id?: true
    userId?: true
    email?: true
    sms?: true
    phone?: true
    notes?: true
    _all?: true
  }

  export type CommunicationPreferenceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CommunicationPreference to aggregate.
     */
    where?: CommunicationPreferenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommunicationPreferences to fetch.
     */
    orderBy?: CommunicationPreferenceOrderByWithRelationInput | CommunicationPreferenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommunicationPreferenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommunicationPreferences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommunicationPreferences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CommunicationPreferences
    **/
    _count?: true | CommunicationPreferenceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommunicationPreferenceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommunicationPreferenceMaxAggregateInputType
  }

  export type GetCommunicationPreferenceAggregateType<T extends CommunicationPreferenceAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunicationPreference]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunicationPreference[P]>
      : GetScalarType<T[P], AggregateCommunicationPreference[P]>
  }




  export type CommunicationPreferenceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommunicationPreferenceWhereInput
    orderBy?: CommunicationPreferenceOrderByWithAggregationInput | CommunicationPreferenceOrderByWithAggregationInput[]
    by: CommunicationPreferenceScalarFieldEnum[] | CommunicationPreferenceScalarFieldEnum
    having?: CommunicationPreferenceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommunicationPreferenceCountAggregateInputType | true
    _min?: CommunicationPreferenceMinAggregateInputType
    _max?: CommunicationPreferenceMaxAggregateInputType
  }

  export type CommunicationPreferenceGroupByOutputType = {
    id: string
    userId: string
    email: boolean
    sms: boolean
    phone: boolean
    notes: string | null
    _count: CommunicationPreferenceCountAggregateOutputType | null
    _min: CommunicationPreferenceMinAggregateOutputType | null
    _max: CommunicationPreferenceMaxAggregateOutputType | null
  }

  type GetCommunicationPreferenceGroupByPayload<T extends CommunicationPreferenceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommunicationPreferenceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommunicationPreferenceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommunicationPreferenceGroupByOutputType[P]>
            : GetScalarType<T[P], CommunicationPreferenceGroupByOutputType[P]>
        }
      >
    >


  export type CommunicationPreferenceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    email?: boolean
    sms?: boolean
    phone?: boolean
    notes?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["communicationPreference"]>

  export type CommunicationPreferenceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    email?: boolean
    sms?: boolean
    phone?: boolean
    notes?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["communicationPreference"]>

  export type CommunicationPreferenceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    email?: boolean
    sms?: boolean
    phone?: boolean
    notes?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["communicationPreference"]>

  export type CommunicationPreferenceSelectScalar = {
    id?: boolean
    userId?: boolean
    email?: boolean
    sms?: boolean
    phone?: boolean
    notes?: boolean
  }

  export type CommunicationPreferenceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "email" | "sms" | "phone" | "notes", ExtArgs["result"]["communicationPreference"]>
  export type CommunicationPreferenceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CommunicationPreferenceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CommunicationPreferenceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $CommunicationPreferencePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CommunicationPreference"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      email: boolean
      sms: boolean
      phone: boolean
      notes: string | null
    }, ExtArgs["result"]["communicationPreference"]>
    composites: {}
  }

  type CommunicationPreferenceGetPayload<S extends boolean | null | undefined | CommunicationPreferenceDefaultArgs> = $Result.GetResult<Prisma.$CommunicationPreferencePayload, S>

  type CommunicationPreferenceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CommunicationPreferenceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommunicationPreferenceCountAggregateInputType | true
    }

  export interface CommunicationPreferenceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CommunicationPreference'], meta: { name: 'CommunicationPreference' } }
    /**
     * Find zero or one CommunicationPreference that matches the filter.
     * @param {CommunicationPreferenceFindUniqueArgs} args - Arguments to find a CommunicationPreference
     * @example
     * // Get one CommunicationPreference
     * const communicationPreference = await prisma.communicationPreference.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommunicationPreferenceFindUniqueArgs>(args: SelectSubset<T, CommunicationPreferenceFindUniqueArgs<ExtArgs>>): Prisma__CommunicationPreferenceClient<$Result.GetResult<Prisma.$CommunicationPreferencePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CommunicationPreference that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CommunicationPreferenceFindUniqueOrThrowArgs} args - Arguments to find a CommunicationPreference
     * @example
     * // Get one CommunicationPreference
     * const communicationPreference = await prisma.communicationPreference.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommunicationPreferenceFindUniqueOrThrowArgs>(args: SelectSubset<T, CommunicationPreferenceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommunicationPreferenceClient<$Result.GetResult<Prisma.$CommunicationPreferencePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CommunicationPreference that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationPreferenceFindFirstArgs} args - Arguments to find a CommunicationPreference
     * @example
     * // Get one CommunicationPreference
     * const communicationPreference = await prisma.communicationPreference.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommunicationPreferenceFindFirstArgs>(args?: SelectSubset<T, CommunicationPreferenceFindFirstArgs<ExtArgs>>): Prisma__CommunicationPreferenceClient<$Result.GetResult<Prisma.$CommunicationPreferencePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CommunicationPreference that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationPreferenceFindFirstOrThrowArgs} args - Arguments to find a CommunicationPreference
     * @example
     * // Get one CommunicationPreference
     * const communicationPreference = await prisma.communicationPreference.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommunicationPreferenceFindFirstOrThrowArgs>(args?: SelectSubset<T, CommunicationPreferenceFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommunicationPreferenceClient<$Result.GetResult<Prisma.$CommunicationPreferencePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CommunicationPreferences that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationPreferenceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CommunicationPreferences
     * const communicationPreferences = await prisma.communicationPreference.findMany()
     * 
     * // Get first 10 CommunicationPreferences
     * const communicationPreferences = await prisma.communicationPreference.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const communicationPreferenceWithIdOnly = await prisma.communicationPreference.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CommunicationPreferenceFindManyArgs>(args?: SelectSubset<T, CommunicationPreferenceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunicationPreferencePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CommunicationPreference.
     * @param {CommunicationPreferenceCreateArgs} args - Arguments to create a CommunicationPreference.
     * @example
     * // Create one CommunicationPreference
     * const CommunicationPreference = await prisma.communicationPreference.create({
     *   data: {
     *     // ... data to create a CommunicationPreference
     *   }
     * })
     * 
     */
    create<T extends CommunicationPreferenceCreateArgs>(args: SelectSubset<T, CommunicationPreferenceCreateArgs<ExtArgs>>): Prisma__CommunicationPreferenceClient<$Result.GetResult<Prisma.$CommunicationPreferencePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CommunicationPreferences.
     * @param {CommunicationPreferenceCreateManyArgs} args - Arguments to create many CommunicationPreferences.
     * @example
     * // Create many CommunicationPreferences
     * const communicationPreference = await prisma.communicationPreference.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommunicationPreferenceCreateManyArgs>(args?: SelectSubset<T, CommunicationPreferenceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CommunicationPreferences and returns the data saved in the database.
     * @param {CommunicationPreferenceCreateManyAndReturnArgs} args - Arguments to create many CommunicationPreferences.
     * @example
     * // Create many CommunicationPreferences
     * const communicationPreference = await prisma.communicationPreference.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CommunicationPreferences and only return the `id`
     * const communicationPreferenceWithIdOnly = await prisma.communicationPreference.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CommunicationPreferenceCreateManyAndReturnArgs>(args?: SelectSubset<T, CommunicationPreferenceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunicationPreferencePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CommunicationPreference.
     * @param {CommunicationPreferenceDeleteArgs} args - Arguments to delete one CommunicationPreference.
     * @example
     * // Delete one CommunicationPreference
     * const CommunicationPreference = await prisma.communicationPreference.delete({
     *   where: {
     *     // ... filter to delete one CommunicationPreference
     *   }
     * })
     * 
     */
    delete<T extends CommunicationPreferenceDeleteArgs>(args: SelectSubset<T, CommunicationPreferenceDeleteArgs<ExtArgs>>): Prisma__CommunicationPreferenceClient<$Result.GetResult<Prisma.$CommunicationPreferencePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CommunicationPreference.
     * @param {CommunicationPreferenceUpdateArgs} args - Arguments to update one CommunicationPreference.
     * @example
     * // Update one CommunicationPreference
     * const communicationPreference = await prisma.communicationPreference.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommunicationPreferenceUpdateArgs>(args: SelectSubset<T, CommunicationPreferenceUpdateArgs<ExtArgs>>): Prisma__CommunicationPreferenceClient<$Result.GetResult<Prisma.$CommunicationPreferencePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CommunicationPreferences.
     * @param {CommunicationPreferenceDeleteManyArgs} args - Arguments to filter CommunicationPreferences to delete.
     * @example
     * // Delete a few CommunicationPreferences
     * const { count } = await prisma.communicationPreference.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommunicationPreferenceDeleteManyArgs>(args?: SelectSubset<T, CommunicationPreferenceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CommunicationPreferences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationPreferenceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CommunicationPreferences
     * const communicationPreference = await prisma.communicationPreference.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommunicationPreferenceUpdateManyArgs>(args: SelectSubset<T, CommunicationPreferenceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CommunicationPreferences and returns the data updated in the database.
     * @param {CommunicationPreferenceUpdateManyAndReturnArgs} args - Arguments to update many CommunicationPreferences.
     * @example
     * // Update many CommunicationPreferences
     * const communicationPreference = await prisma.communicationPreference.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CommunicationPreferences and only return the `id`
     * const communicationPreferenceWithIdOnly = await prisma.communicationPreference.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CommunicationPreferenceUpdateManyAndReturnArgs>(args: SelectSubset<T, CommunicationPreferenceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunicationPreferencePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CommunicationPreference.
     * @param {CommunicationPreferenceUpsertArgs} args - Arguments to update or create a CommunicationPreference.
     * @example
     * // Update or create a CommunicationPreference
     * const communicationPreference = await prisma.communicationPreference.upsert({
     *   create: {
     *     // ... data to create a CommunicationPreference
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CommunicationPreference we want to update
     *   }
     * })
     */
    upsert<T extends CommunicationPreferenceUpsertArgs>(args: SelectSubset<T, CommunicationPreferenceUpsertArgs<ExtArgs>>): Prisma__CommunicationPreferenceClient<$Result.GetResult<Prisma.$CommunicationPreferencePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CommunicationPreferences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationPreferenceCountArgs} args - Arguments to filter CommunicationPreferences to count.
     * @example
     * // Count the number of CommunicationPreferences
     * const count = await prisma.communicationPreference.count({
     *   where: {
     *     // ... the filter for the CommunicationPreferences we want to count
     *   }
     * })
    **/
    count<T extends CommunicationPreferenceCountArgs>(
      args?: Subset<T, CommunicationPreferenceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommunicationPreferenceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CommunicationPreference.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationPreferenceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommunicationPreferenceAggregateArgs>(args: Subset<T, CommunicationPreferenceAggregateArgs>): Prisma.PrismaPromise<GetCommunicationPreferenceAggregateType<T>>

    /**
     * Group by CommunicationPreference.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationPreferenceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommunicationPreferenceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommunicationPreferenceGroupByArgs['orderBy'] }
        : { orderBy?: CommunicationPreferenceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommunicationPreferenceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunicationPreferenceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CommunicationPreference model
   */
  readonly fields: CommunicationPreferenceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CommunicationPreference.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommunicationPreferenceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CommunicationPreference model
   */ 
  interface CommunicationPreferenceFieldRefs {
    readonly id: FieldRef<"CommunicationPreference", 'String'>
    readonly userId: FieldRef<"CommunicationPreference", 'String'>
    readonly email: FieldRef<"CommunicationPreference", 'Boolean'>
    readonly sms: FieldRef<"CommunicationPreference", 'Boolean'>
    readonly phone: FieldRef<"CommunicationPreference", 'Boolean'>
    readonly notes: FieldRef<"CommunicationPreference", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CommunicationPreference findUnique
   */
  export type CommunicationPreferenceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationPreference
     */
    select?: CommunicationPreferenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationPreference
     */
    omit?: CommunicationPreferenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationPreferenceInclude<ExtArgs> | null
    /**
     * Filter, which CommunicationPreference to fetch.
     */
    where: CommunicationPreferenceWhereUniqueInput
  }

  /**
   * CommunicationPreference findUniqueOrThrow
   */
  export type CommunicationPreferenceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationPreference
     */
    select?: CommunicationPreferenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationPreference
     */
    omit?: CommunicationPreferenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationPreferenceInclude<ExtArgs> | null
    /**
     * Filter, which CommunicationPreference to fetch.
     */
    where: CommunicationPreferenceWhereUniqueInput
  }

  /**
   * CommunicationPreference findFirst
   */
  export type CommunicationPreferenceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationPreference
     */
    select?: CommunicationPreferenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationPreference
     */
    omit?: CommunicationPreferenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationPreferenceInclude<ExtArgs> | null
    /**
     * Filter, which CommunicationPreference to fetch.
     */
    where?: CommunicationPreferenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommunicationPreferences to fetch.
     */
    orderBy?: CommunicationPreferenceOrderByWithRelationInput | CommunicationPreferenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CommunicationPreferences.
     */
    cursor?: CommunicationPreferenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommunicationPreferences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommunicationPreferences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CommunicationPreferences.
     */
    distinct?: CommunicationPreferenceScalarFieldEnum | CommunicationPreferenceScalarFieldEnum[]
  }

  /**
   * CommunicationPreference findFirstOrThrow
   */
  export type CommunicationPreferenceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationPreference
     */
    select?: CommunicationPreferenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationPreference
     */
    omit?: CommunicationPreferenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationPreferenceInclude<ExtArgs> | null
    /**
     * Filter, which CommunicationPreference to fetch.
     */
    where?: CommunicationPreferenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommunicationPreferences to fetch.
     */
    orderBy?: CommunicationPreferenceOrderByWithRelationInput | CommunicationPreferenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CommunicationPreferences.
     */
    cursor?: CommunicationPreferenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommunicationPreferences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommunicationPreferences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CommunicationPreferences.
     */
    distinct?: CommunicationPreferenceScalarFieldEnum | CommunicationPreferenceScalarFieldEnum[]
  }

  /**
   * CommunicationPreference findMany
   */
  export type CommunicationPreferenceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationPreference
     */
    select?: CommunicationPreferenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationPreference
     */
    omit?: CommunicationPreferenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationPreferenceInclude<ExtArgs> | null
    /**
     * Filter, which CommunicationPreferences to fetch.
     */
    where?: CommunicationPreferenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommunicationPreferences to fetch.
     */
    orderBy?: CommunicationPreferenceOrderByWithRelationInput | CommunicationPreferenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CommunicationPreferences.
     */
    cursor?: CommunicationPreferenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommunicationPreferences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommunicationPreferences.
     */
    skip?: number
    distinct?: CommunicationPreferenceScalarFieldEnum | CommunicationPreferenceScalarFieldEnum[]
  }

  /**
   * CommunicationPreference create
   */
  export type CommunicationPreferenceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationPreference
     */
    select?: CommunicationPreferenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationPreference
     */
    omit?: CommunicationPreferenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationPreferenceInclude<ExtArgs> | null
    /**
     * The data needed to create a CommunicationPreference.
     */
    data: XOR<CommunicationPreferenceCreateInput, CommunicationPreferenceUncheckedCreateInput>
  }

  /**
   * CommunicationPreference createMany
   */
  export type CommunicationPreferenceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CommunicationPreferences.
     */
    data: CommunicationPreferenceCreateManyInput | CommunicationPreferenceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CommunicationPreference createManyAndReturn
   */
  export type CommunicationPreferenceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationPreference
     */
    select?: CommunicationPreferenceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationPreference
     */
    omit?: CommunicationPreferenceOmit<ExtArgs> | null
    /**
     * The data used to create many CommunicationPreferences.
     */
    data: CommunicationPreferenceCreateManyInput | CommunicationPreferenceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationPreferenceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CommunicationPreference update
   */
  export type CommunicationPreferenceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationPreference
     */
    select?: CommunicationPreferenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationPreference
     */
    omit?: CommunicationPreferenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationPreferenceInclude<ExtArgs> | null
    /**
     * The data needed to update a CommunicationPreference.
     */
    data: XOR<CommunicationPreferenceUpdateInput, CommunicationPreferenceUncheckedUpdateInput>
    /**
     * Choose, which CommunicationPreference to update.
     */
    where: CommunicationPreferenceWhereUniqueInput
  }

  /**
   * CommunicationPreference updateMany
   */
  export type CommunicationPreferenceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CommunicationPreferences.
     */
    data: XOR<CommunicationPreferenceUpdateManyMutationInput, CommunicationPreferenceUncheckedUpdateManyInput>
    /**
     * Filter which CommunicationPreferences to update
     */
    where?: CommunicationPreferenceWhereInput
    /**
     * Limit how many CommunicationPreferences to update.
     */
    limit?: number
  }

  /**
   * CommunicationPreference updateManyAndReturn
   */
  export type CommunicationPreferenceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationPreference
     */
    select?: CommunicationPreferenceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationPreference
     */
    omit?: CommunicationPreferenceOmit<ExtArgs> | null
    /**
     * The data used to update CommunicationPreferences.
     */
    data: XOR<CommunicationPreferenceUpdateManyMutationInput, CommunicationPreferenceUncheckedUpdateManyInput>
    /**
     * Filter which CommunicationPreferences to update
     */
    where?: CommunicationPreferenceWhereInput
    /**
     * Limit how many CommunicationPreferences to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationPreferenceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CommunicationPreference upsert
   */
  export type CommunicationPreferenceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationPreference
     */
    select?: CommunicationPreferenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationPreference
     */
    omit?: CommunicationPreferenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationPreferenceInclude<ExtArgs> | null
    /**
     * The filter to search for the CommunicationPreference to update in case it exists.
     */
    where: CommunicationPreferenceWhereUniqueInput
    /**
     * In case the CommunicationPreference found by the `where` argument doesn't exist, create a new CommunicationPreference with this data.
     */
    create: XOR<CommunicationPreferenceCreateInput, CommunicationPreferenceUncheckedCreateInput>
    /**
     * In case the CommunicationPreference was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommunicationPreferenceUpdateInput, CommunicationPreferenceUncheckedUpdateInput>
  }

  /**
   * CommunicationPreference delete
   */
  export type CommunicationPreferenceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationPreference
     */
    select?: CommunicationPreferenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationPreference
     */
    omit?: CommunicationPreferenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationPreferenceInclude<ExtArgs> | null
    /**
     * Filter which CommunicationPreference to delete.
     */
    where: CommunicationPreferenceWhereUniqueInput
  }

  /**
   * CommunicationPreference deleteMany
   */
  export type CommunicationPreferenceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CommunicationPreferences to delete
     */
    where?: CommunicationPreferenceWhereInput
    /**
     * Limit how many CommunicationPreferences to delete.
     */
    limit?: number
  }

  /**
   * CommunicationPreference without action
   */
  export type CommunicationPreferenceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationPreference
     */
    select?: CommunicationPreferenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationPreference
     */
    omit?: CommunicationPreferenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationPreferenceInclude<ExtArgs> | null
  }


  /**
   * Model FamilyAccess
   */

  export type AggregateFamilyAccess = {
    _count: FamilyAccessCountAggregateOutputType | null
    _min: FamilyAccessMinAggregateOutputType | null
    _max: FamilyAccessMaxAggregateOutputType | null
  }

  export type FamilyAccessMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    name: string | null
    relation: string | null
    phone: string | null
    email: string | null
  }

  export type FamilyAccessMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    name: string | null
    relation: string | null
    phone: string | null
    email: string | null
  }

  export type FamilyAccessCountAggregateOutputType = {
    id: number
    clientId: number
    name: number
    relation: number
    phone: number
    email: number
    _all: number
  }


  export type FamilyAccessMinAggregateInputType = {
    id?: true
    clientId?: true
    name?: true
    relation?: true
    phone?: true
    email?: true
  }

  export type FamilyAccessMaxAggregateInputType = {
    id?: true
    clientId?: true
    name?: true
    relation?: true
    phone?: true
    email?: true
  }

  export type FamilyAccessCountAggregateInputType = {
    id?: true
    clientId?: true
    name?: true
    relation?: true
    phone?: true
    email?: true
    _all?: true
  }

  export type FamilyAccessAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FamilyAccess to aggregate.
     */
    where?: FamilyAccessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyAccesses to fetch.
     */
    orderBy?: FamilyAccessOrderByWithRelationInput | FamilyAccessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FamilyAccessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyAccesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyAccesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FamilyAccesses
    **/
    _count?: true | FamilyAccessCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FamilyAccessMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FamilyAccessMaxAggregateInputType
  }

  export type GetFamilyAccessAggregateType<T extends FamilyAccessAggregateArgs> = {
        [P in keyof T & keyof AggregateFamilyAccess]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFamilyAccess[P]>
      : GetScalarType<T[P], AggregateFamilyAccess[P]>
  }




  export type FamilyAccessGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FamilyAccessWhereInput
    orderBy?: FamilyAccessOrderByWithAggregationInput | FamilyAccessOrderByWithAggregationInput[]
    by: FamilyAccessScalarFieldEnum[] | FamilyAccessScalarFieldEnum
    having?: FamilyAccessScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FamilyAccessCountAggregateInputType | true
    _min?: FamilyAccessMinAggregateInputType
    _max?: FamilyAccessMaxAggregateInputType
  }

  export type FamilyAccessGroupByOutputType = {
    id: string
    clientId: string
    name: string
    relation: string
    phone: string
    email: string | null
    _count: FamilyAccessCountAggregateOutputType | null
    _min: FamilyAccessMinAggregateOutputType | null
    _max: FamilyAccessMaxAggregateOutputType | null
  }

  type GetFamilyAccessGroupByPayload<T extends FamilyAccessGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FamilyAccessGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FamilyAccessGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FamilyAccessGroupByOutputType[P]>
            : GetScalarType<T[P], FamilyAccessGroupByOutputType[P]>
        }
      >
    >


  export type FamilyAccessSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    name?: boolean
    relation?: boolean
    phone?: boolean
    email?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["familyAccess"]>

  export type FamilyAccessSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    name?: boolean
    relation?: boolean
    phone?: boolean
    email?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["familyAccess"]>

  export type FamilyAccessSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    name?: boolean
    relation?: boolean
    phone?: boolean
    email?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["familyAccess"]>

  export type FamilyAccessSelectScalar = {
    id?: boolean
    clientId?: boolean
    name?: boolean
    relation?: boolean
    phone?: boolean
    email?: boolean
  }

  export type FamilyAccessOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clientId" | "name" | "relation" | "phone" | "email", ExtArgs["result"]["familyAccess"]>
  export type FamilyAccessInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type FamilyAccessIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type FamilyAccessIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $FamilyAccessPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FamilyAccess"
    objects: {
      client: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      name: string
      relation: string
      phone: string
      email: string | null
    }, ExtArgs["result"]["familyAccess"]>
    composites: {}
  }

  type FamilyAccessGetPayload<S extends boolean | null | undefined | FamilyAccessDefaultArgs> = $Result.GetResult<Prisma.$FamilyAccessPayload, S>

  type FamilyAccessCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FamilyAccessFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FamilyAccessCountAggregateInputType | true
    }

  export interface FamilyAccessDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FamilyAccess'], meta: { name: 'FamilyAccess' } }
    /**
     * Find zero or one FamilyAccess that matches the filter.
     * @param {FamilyAccessFindUniqueArgs} args - Arguments to find a FamilyAccess
     * @example
     * // Get one FamilyAccess
     * const familyAccess = await prisma.familyAccess.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FamilyAccessFindUniqueArgs>(args: SelectSubset<T, FamilyAccessFindUniqueArgs<ExtArgs>>): Prisma__FamilyAccessClient<$Result.GetResult<Prisma.$FamilyAccessPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FamilyAccess that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FamilyAccessFindUniqueOrThrowArgs} args - Arguments to find a FamilyAccess
     * @example
     * // Get one FamilyAccess
     * const familyAccess = await prisma.familyAccess.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FamilyAccessFindUniqueOrThrowArgs>(args: SelectSubset<T, FamilyAccessFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FamilyAccessClient<$Result.GetResult<Prisma.$FamilyAccessPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FamilyAccess that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyAccessFindFirstArgs} args - Arguments to find a FamilyAccess
     * @example
     * // Get one FamilyAccess
     * const familyAccess = await prisma.familyAccess.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FamilyAccessFindFirstArgs>(args?: SelectSubset<T, FamilyAccessFindFirstArgs<ExtArgs>>): Prisma__FamilyAccessClient<$Result.GetResult<Prisma.$FamilyAccessPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FamilyAccess that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyAccessFindFirstOrThrowArgs} args - Arguments to find a FamilyAccess
     * @example
     * // Get one FamilyAccess
     * const familyAccess = await prisma.familyAccess.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FamilyAccessFindFirstOrThrowArgs>(args?: SelectSubset<T, FamilyAccessFindFirstOrThrowArgs<ExtArgs>>): Prisma__FamilyAccessClient<$Result.GetResult<Prisma.$FamilyAccessPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FamilyAccesses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyAccessFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FamilyAccesses
     * const familyAccesses = await prisma.familyAccess.findMany()
     * 
     * // Get first 10 FamilyAccesses
     * const familyAccesses = await prisma.familyAccess.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const familyAccessWithIdOnly = await prisma.familyAccess.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FamilyAccessFindManyArgs>(args?: SelectSubset<T, FamilyAccessFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyAccessPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FamilyAccess.
     * @param {FamilyAccessCreateArgs} args - Arguments to create a FamilyAccess.
     * @example
     * // Create one FamilyAccess
     * const FamilyAccess = await prisma.familyAccess.create({
     *   data: {
     *     // ... data to create a FamilyAccess
     *   }
     * })
     * 
     */
    create<T extends FamilyAccessCreateArgs>(args: SelectSubset<T, FamilyAccessCreateArgs<ExtArgs>>): Prisma__FamilyAccessClient<$Result.GetResult<Prisma.$FamilyAccessPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FamilyAccesses.
     * @param {FamilyAccessCreateManyArgs} args - Arguments to create many FamilyAccesses.
     * @example
     * // Create many FamilyAccesses
     * const familyAccess = await prisma.familyAccess.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FamilyAccessCreateManyArgs>(args?: SelectSubset<T, FamilyAccessCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FamilyAccesses and returns the data saved in the database.
     * @param {FamilyAccessCreateManyAndReturnArgs} args - Arguments to create many FamilyAccesses.
     * @example
     * // Create many FamilyAccesses
     * const familyAccess = await prisma.familyAccess.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FamilyAccesses and only return the `id`
     * const familyAccessWithIdOnly = await prisma.familyAccess.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FamilyAccessCreateManyAndReturnArgs>(args?: SelectSubset<T, FamilyAccessCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyAccessPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FamilyAccess.
     * @param {FamilyAccessDeleteArgs} args - Arguments to delete one FamilyAccess.
     * @example
     * // Delete one FamilyAccess
     * const FamilyAccess = await prisma.familyAccess.delete({
     *   where: {
     *     // ... filter to delete one FamilyAccess
     *   }
     * })
     * 
     */
    delete<T extends FamilyAccessDeleteArgs>(args: SelectSubset<T, FamilyAccessDeleteArgs<ExtArgs>>): Prisma__FamilyAccessClient<$Result.GetResult<Prisma.$FamilyAccessPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FamilyAccess.
     * @param {FamilyAccessUpdateArgs} args - Arguments to update one FamilyAccess.
     * @example
     * // Update one FamilyAccess
     * const familyAccess = await prisma.familyAccess.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FamilyAccessUpdateArgs>(args: SelectSubset<T, FamilyAccessUpdateArgs<ExtArgs>>): Prisma__FamilyAccessClient<$Result.GetResult<Prisma.$FamilyAccessPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FamilyAccesses.
     * @param {FamilyAccessDeleteManyArgs} args - Arguments to filter FamilyAccesses to delete.
     * @example
     * // Delete a few FamilyAccesses
     * const { count } = await prisma.familyAccess.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FamilyAccessDeleteManyArgs>(args?: SelectSubset<T, FamilyAccessDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FamilyAccesses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyAccessUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FamilyAccesses
     * const familyAccess = await prisma.familyAccess.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FamilyAccessUpdateManyArgs>(args: SelectSubset<T, FamilyAccessUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FamilyAccesses and returns the data updated in the database.
     * @param {FamilyAccessUpdateManyAndReturnArgs} args - Arguments to update many FamilyAccesses.
     * @example
     * // Update many FamilyAccesses
     * const familyAccess = await prisma.familyAccess.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FamilyAccesses and only return the `id`
     * const familyAccessWithIdOnly = await prisma.familyAccess.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FamilyAccessUpdateManyAndReturnArgs>(args: SelectSubset<T, FamilyAccessUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyAccessPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FamilyAccess.
     * @param {FamilyAccessUpsertArgs} args - Arguments to update or create a FamilyAccess.
     * @example
     * // Update or create a FamilyAccess
     * const familyAccess = await prisma.familyAccess.upsert({
     *   create: {
     *     // ... data to create a FamilyAccess
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FamilyAccess we want to update
     *   }
     * })
     */
    upsert<T extends FamilyAccessUpsertArgs>(args: SelectSubset<T, FamilyAccessUpsertArgs<ExtArgs>>): Prisma__FamilyAccessClient<$Result.GetResult<Prisma.$FamilyAccessPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FamilyAccesses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyAccessCountArgs} args - Arguments to filter FamilyAccesses to count.
     * @example
     * // Count the number of FamilyAccesses
     * const count = await prisma.familyAccess.count({
     *   where: {
     *     // ... the filter for the FamilyAccesses we want to count
     *   }
     * })
    **/
    count<T extends FamilyAccessCountArgs>(
      args?: Subset<T, FamilyAccessCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FamilyAccessCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FamilyAccess.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyAccessAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FamilyAccessAggregateArgs>(args: Subset<T, FamilyAccessAggregateArgs>): Prisma.PrismaPromise<GetFamilyAccessAggregateType<T>>

    /**
     * Group by FamilyAccess.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyAccessGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FamilyAccessGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FamilyAccessGroupByArgs['orderBy'] }
        : { orderBy?: FamilyAccessGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FamilyAccessGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFamilyAccessGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FamilyAccess model
   */
  readonly fields: FamilyAccessFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FamilyAccess.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FamilyAccessClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FamilyAccess model
   */ 
  interface FamilyAccessFieldRefs {
    readonly id: FieldRef<"FamilyAccess", 'String'>
    readonly clientId: FieldRef<"FamilyAccess", 'String'>
    readonly name: FieldRef<"FamilyAccess", 'String'>
    readonly relation: FieldRef<"FamilyAccess", 'String'>
    readonly phone: FieldRef<"FamilyAccess", 'String'>
    readonly email: FieldRef<"FamilyAccess", 'String'>
  }
    

  // Custom InputTypes
  /**
   * FamilyAccess findUnique
   */
  export type FamilyAccessFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyAccess
     */
    select?: FamilyAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FamilyAccess
     */
    omit?: FamilyAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyAccessInclude<ExtArgs> | null
    /**
     * Filter, which FamilyAccess to fetch.
     */
    where: FamilyAccessWhereUniqueInput
  }

  /**
   * FamilyAccess findUniqueOrThrow
   */
  export type FamilyAccessFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyAccess
     */
    select?: FamilyAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FamilyAccess
     */
    omit?: FamilyAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyAccessInclude<ExtArgs> | null
    /**
     * Filter, which FamilyAccess to fetch.
     */
    where: FamilyAccessWhereUniqueInput
  }

  /**
   * FamilyAccess findFirst
   */
  export type FamilyAccessFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyAccess
     */
    select?: FamilyAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FamilyAccess
     */
    omit?: FamilyAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyAccessInclude<ExtArgs> | null
    /**
     * Filter, which FamilyAccess to fetch.
     */
    where?: FamilyAccessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyAccesses to fetch.
     */
    orderBy?: FamilyAccessOrderByWithRelationInput | FamilyAccessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FamilyAccesses.
     */
    cursor?: FamilyAccessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyAccesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyAccesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FamilyAccesses.
     */
    distinct?: FamilyAccessScalarFieldEnum | FamilyAccessScalarFieldEnum[]
  }

  /**
   * FamilyAccess findFirstOrThrow
   */
  export type FamilyAccessFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyAccess
     */
    select?: FamilyAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FamilyAccess
     */
    omit?: FamilyAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyAccessInclude<ExtArgs> | null
    /**
     * Filter, which FamilyAccess to fetch.
     */
    where?: FamilyAccessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyAccesses to fetch.
     */
    orderBy?: FamilyAccessOrderByWithRelationInput | FamilyAccessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FamilyAccesses.
     */
    cursor?: FamilyAccessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyAccesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyAccesses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FamilyAccesses.
     */
    distinct?: FamilyAccessScalarFieldEnum | FamilyAccessScalarFieldEnum[]
  }

  /**
   * FamilyAccess findMany
   */
  export type FamilyAccessFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyAccess
     */
    select?: FamilyAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FamilyAccess
     */
    omit?: FamilyAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyAccessInclude<ExtArgs> | null
    /**
     * Filter, which FamilyAccesses to fetch.
     */
    where?: FamilyAccessWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyAccesses to fetch.
     */
    orderBy?: FamilyAccessOrderByWithRelationInput | FamilyAccessOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FamilyAccesses.
     */
    cursor?: FamilyAccessWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyAccesses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyAccesses.
     */
    skip?: number
    distinct?: FamilyAccessScalarFieldEnum | FamilyAccessScalarFieldEnum[]
  }

  /**
   * FamilyAccess create
   */
  export type FamilyAccessCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyAccess
     */
    select?: FamilyAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FamilyAccess
     */
    omit?: FamilyAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyAccessInclude<ExtArgs> | null
    /**
     * The data needed to create a FamilyAccess.
     */
    data: XOR<FamilyAccessCreateInput, FamilyAccessUncheckedCreateInput>
  }

  /**
   * FamilyAccess createMany
   */
  export type FamilyAccessCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FamilyAccesses.
     */
    data: FamilyAccessCreateManyInput | FamilyAccessCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FamilyAccess createManyAndReturn
   */
  export type FamilyAccessCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyAccess
     */
    select?: FamilyAccessSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FamilyAccess
     */
    omit?: FamilyAccessOmit<ExtArgs> | null
    /**
     * The data used to create many FamilyAccesses.
     */
    data: FamilyAccessCreateManyInput | FamilyAccessCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyAccessIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FamilyAccess update
   */
  export type FamilyAccessUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyAccess
     */
    select?: FamilyAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FamilyAccess
     */
    omit?: FamilyAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyAccessInclude<ExtArgs> | null
    /**
     * The data needed to update a FamilyAccess.
     */
    data: XOR<FamilyAccessUpdateInput, FamilyAccessUncheckedUpdateInput>
    /**
     * Choose, which FamilyAccess to update.
     */
    where: FamilyAccessWhereUniqueInput
  }

  /**
   * FamilyAccess updateMany
   */
  export type FamilyAccessUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FamilyAccesses.
     */
    data: XOR<FamilyAccessUpdateManyMutationInput, FamilyAccessUncheckedUpdateManyInput>
    /**
     * Filter which FamilyAccesses to update
     */
    where?: FamilyAccessWhereInput
    /**
     * Limit how many FamilyAccesses to update.
     */
    limit?: number
  }

  /**
   * FamilyAccess updateManyAndReturn
   */
  export type FamilyAccessUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyAccess
     */
    select?: FamilyAccessSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FamilyAccess
     */
    omit?: FamilyAccessOmit<ExtArgs> | null
    /**
     * The data used to update FamilyAccesses.
     */
    data: XOR<FamilyAccessUpdateManyMutationInput, FamilyAccessUncheckedUpdateManyInput>
    /**
     * Filter which FamilyAccesses to update
     */
    where?: FamilyAccessWhereInput
    /**
     * Limit how many FamilyAccesses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyAccessIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FamilyAccess upsert
   */
  export type FamilyAccessUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyAccess
     */
    select?: FamilyAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FamilyAccess
     */
    omit?: FamilyAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyAccessInclude<ExtArgs> | null
    /**
     * The filter to search for the FamilyAccess to update in case it exists.
     */
    where: FamilyAccessWhereUniqueInput
    /**
     * In case the FamilyAccess found by the `where` argument doesn't exist, create a new FamilyAccess with this data.
     */
    create: XOR<FamilyAccessCreateInput, FamilyAccessUncheckedCreateInput>
    /**
     * In case the FamilyAccess was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FamilyAccessUpdateInput, FamilyAccessUncheckedUpdateInput>
  }

  /**
   * FamilyAccess delete
   */
  export type FamilyAccessDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyAccess
     */
    select?: FamilyAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FamilyAccess
     */
    omit?: FamilyAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyAccessInclude<ExtArgs> | null
    /**
     * Filter which FamilyAccess to delete.
     */
    where: FamilyAccessWhereUniqueInput
  }

  /**
   * FamilyAccess deleteMany
   */
  export type FamilyAccessDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FamilyAccesses to delete
     */
    where?: FamilyAccessWhereInput
    /**
     * Limit how many FamilyAccesses to delete.
     */
    limit?: number
  }

  /**
   * FamilyAccess without action
   */
  export type FamilyAccessDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyAccess
     */
    select?: FamilyAccessSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FamilyAccess
     */
    omit?: FamilyAccessOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyAccessInclude<ExtArgs> | null
  }


  /**
   * Model MedicationDatabaseLink
   */

  export type AggregateMedicationDatabaseLink = {
    _count: MedicationDatabaseLinkCountAggregateOutputType | null
    _min: MedicationDatabaseLinkMinAggregateOutputType | null
    _max: MedicationDatabaseLinkMaxAggregateOutputType | null
  }

  export type MedicationDatabaseLinkMinAggregateOutputType = {
    id: string | null
    name: string | null
    isSpecialist: boolean | null
    url: string | null
    source: string | null
    agencyId: string | null
  }

  export type MedicationDatabaseLinkMaxAggregateOutputType = {
    id: string | null
    name: string | null
    isSpecialist: boolean | null
    url: string | null
    source: string | null
    agencyId: string | null
  }

  export type MedicationDatabaseLinkCountAggregateOutputType = {
    id: number
    name: number
    isSpecialist: number
    url: number
    source: number
    agencyId: number
    _all: number
  }


  export type MedicationDatabaseLinkMinAggregateInputType = {
    id?: true
    name?: true
    isSpecialist?: true
    url?: true
    source?: true
    agencyId?: true
  }

  export type MedicationDatabaseLinkMaxAggregateInputType = {
    id?: true
    name?: true
    isSpecialist?: true
    url?: true
    source?: true
    agencyId?: true
  }

  export type MedicationDatabaseLinkCountAggregateInputType = {
    id?: true
    name?: true
    isSpecialist?: true
    url?: true
    source?: true
    agencyId?: true
    _all?: true
  }

  export type MedicationDatabaseLinkAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MedicationDatabaseLink to aggregate.
     */
    where?: MedicationDatabaseLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MedicationDatabaseLinks to fetch.
     */
    orderBy?: MedicationDatabaseLinkOrderByWithRelationInput | MedicationDatabaseLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MedicationDatabaseLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MedicationDatabaseLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MedicationDatabaseLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MedicationDatabaseLinks
    **/
    _count?: true | MedicationDatabaseLinkCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MedicationDatabaseLinkMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MedicationDatabaseLinkMaxAggregateInputType
  }

  export type GetMedicationDatabaseLinkAggregateType<T extends MedicationDatabaseLinkAggregateArgs> = {
        [P in keyof T & keyof AggregateMedicationDatabaseLink]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMedicationDatabaseLink[P]>
      : GetScalarType<T[P], AggregateMedicationDatabaseLink[P]>
  }




  export type MedicationDatabaseLinkGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MedicationDatabaseLinkWhereInput
    orderBy?: MedicationDatabaseLinkOrderByWithAggregationInput | MedicationDatabaseLinkOrderByWithAggregationInput[]
    by: MedicationDatabaseLinkScalarFieldEnum[] | MedicationDatabaseLinkScalarFieldEnum
    having?: MedicationDatabaseLinkScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MedicationDatabaseLinkCountAggregateInputType | true
    _min?: MedicationDatabaseLinkMinAggregateInputType
    _max?: MedicationDatabaseLinkMaxAggregateInputType
  }

  export type MedicationDatabaseLinkGroupByOutputType = {
    id: string
    name: string
    isSpecialist: boolean
    url: string
    source: string
    agencyId: string
    _count: MedicationDatabaseLinkCountAggregateOutputType | null
    _min: MedicationDatabaseLinkMinAggregateOutputType | null
    _max: MedicationDatabaseLinkMaxAggregateOutputType | null
  }

  type GetMedicationDatabaseLinkGroupByPayload<T extends MedicationDatabaseLinkGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MedicationDatabaseLinkGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MedicationDatabaseLinkGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MedicationDatabaseLinkGroupByOutputType[P]>
            : GetScalarType<T[P], MedicationDatabaseLinkGroupByOutputType[P]>
        }
      >
    >


  export type MedicationDatabaseLinkSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    isSpecialist?: boolean
    url?: boolean
    source?: boolean
    agencyId?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    MedicationRecord?: boolean | MedicationDatabaseLink$MedicationRecordArgs<ExtArgs>
    _count?: boolean | MedicationDatabaseLinkCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["medicationDatabaseLink"]>

  export type MedicationDatabaseLinkSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    isSpecialist?: boolean
    url?: boolean
    source?: boolean
    agencyId?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["medicationDatabaseLink"]>

  export type MedicationDatabaseLinkSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    isSpecialist?: boolean
    url?: boolean
    source?: boolean
    agencyId?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["medicationDatabaseLink"]>

  export type MedicationDatabaseLinkSelectScalar = {
    id?: boolean
    name?: boolean
    isSpecialist?: boolean
    url?: boolean
    source?: boolean
    agencyId?: boolean
  }

  export type MedicationDatabaseLinkOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "isSpecialist" | "url" | "source" | "agencyId", ExtArgs["result"]["medicationDatabaseLink"]>
  export type MedicationDatabaseLinkInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    MedicationRecord?: boolean | MedicationDatabaseLink$MedicationRecordArgs<ExtArgs>
    _count?: boolean | MedicationDatabaseLinkCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MedicationDatabaseLinkIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }
  export type MedicationDatabaseLinkIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }

  export type $MedicationDatabaseLinkPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MedicationDatabaseLink"
    objects: {
      agency: Prisma.$AgencyPayload<ExtArgs>
      MedicationRecord: Prisma.$MedicationRecordPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      isSpecialist: boolean
      url: string
      source: string
      agencyId: string
    }, ExtArgs["result"]["medicationDatabaseLink"]>
    composites: {}
  }

  type MedicationDatabaseLinkGetPayload<S extends boolean | null | undefined | MedicationDatabaseLinkDefaultArgs> = $Result.GetResult<Prisma.$MedicationDatabaseLinkPayload, S>

  type MedicationDatabaseLinkCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MedicationDatabaseLinkFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MedicationDatabaseLinkCountAggregateInputType | true
    }

  export interface MedicationDatabaseLinkDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MedicationDatabaseLink'], meta: { name: 'MedicationDatabaseLink' } }
    /**
     * Find zero or one MedicationDatabaseLink that matches the filter.
     * @param {MedicationDatabaseLinkFindUniqueArgs} args - Arguments to find a MedicationDatabaseLink
     * @example
     * // Get one MedicationDatabaseLink
     * const medicationDatabaseLink = await prisma.medicationDatabaseLink.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MedicationDatabaseLinkFindUniqueArgs>(args: SelectSubset<T, MedicationDatabaseLinkFindUniqueArgs<ExtArgs>>): Prisma__MedicationDatabaseLinkClient<$Result.GetResult<Prisma.$MedicationDatabaseLinkPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MedicationDatabaseLink that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MedicationDatabaseLinkFindUniqueOrThrowArgs} args - Arguments to find a MedicationDatabaseLink
     * @example
     * // Get one MedicationDatabaseLink
     * const medicationDatabaseLink = await prisma.medicationDatabaseLink.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MedicationDatabaseLinkFindUniqueOrThrowArgs>(args: SelectSubset<T, MedicationDatabaseLinkFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MedicationDatabaseLinkClient<$Result.GetResult<Prisma.$MedicationDatabaseLinkPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MedicationDatabaseLink that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationDatabaseLinkFindFirstArgs} args - Arguments to find a MedicationDatabaseLink
     * @example
     * // Get one MedicationDatabaseLink
     * const medicationDatabaseLink = await prisma.medicationDatabaseLink.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MedicationDatabaseLinkFindFirstArgs>(args?: SelectSubset<T, MedicationDatabaseLinkFindFirstArgs<ExtArgs>>): Prisma__MedicationDatabaseLinkClient<$Result.GetResult<Prisma.$MedicationDatabaseLinkPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MedicationDatabaseLink that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationDatabaseLinkFindFirstOrThrowArgs} args - Arguments to find a MedicationDatabaseLink
     * @example
     * // Get one MedicationDatabaseLink
     * const medicationDatabaseLink = await prisma.medicationDatabaseLink.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MedicationDatabaseLinkFindFirstOrThrowArgs>(args?: SelectSubset<T, MedicationDatabaseLinkFindFirstOrThrowArgs<ExtArgs>>): Prisma__MedicationDatabaseLinkClient<$Result.GetResult<Prisma.$MedicationDatabaseLinkPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MedicationDatabaseLinks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationDatabaseLinkFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MedicationDatabaseLinks
     * const medicationDatabaseLinks = await prisma.medicationDatabaseLink.findMany()
     * 
     * // Get first 10 MedicationDatabaseLinks
     * const medicationDatabaseLinks = await prisma.medicationDatabaseLink.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const medicationDatabaseLinkWithIdOnly = await prisma.medicationDatabaseLink.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MedicationDatabaseLinkFindManyArgs>(args?: SelectSubset<T, MedicationDatabaseLinkFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationDatabaseLinkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MedicationDatabaseLink.
     * @param {MedicationDatabaseLinkCreateArgs} args - Arguments to create a MedicationDatabaseLink.
     * @example
     * // Create one MedicationDatabaseLink
     * const MedicationDatabaseLink = await prisma.medicationDatabaseLink.create({
     *   data: {
     *     // ... data to create a MedicationDatabaseLink
     *   }
     * })
     * 
     */
    create<T extends MedicationDatabaseLinkCreateArgs>(args: SelectSubset<T, MedicationDatabaseLinkCreateArgs<ExtArgs>>): Prisma__MedicationDatabaseLinkClient<$Result.GetResult<Prisma.$MedicationDatabaseLinkPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MedicationDatabaseLinks.
     * @param {MedicationDatabaseLinkCreateManyArgs} args - Arguments to create many MedicationDatabaseLinks.
     * @example
     * // Create many MedicationDatabaseLinks
     * const medicationDatabaseLink = await prisma.medicationDatabaseLink.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MedicationDatabaseLinkCreateManyArgs>(args?: SelectSubset<T, MedicationDatabaseLinkCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MedicationDatabaseLinks and returns the data saved in the database.
     * @param {MedicationDatabaseLinkCreateManyAndReturnArgs} args - Arguments to create many MedicationDatabaseLinks.
     * @example
     * // Create many MedicationDatabaseLinks
     * const medicationDatabaseLink = await prisma.medicationDatabaseLink.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MedicationDatabaseLinks and only return the `id`
     * const medicationDatabaseLinkWithIdOnly = await prisma.medicationDatabaseLink.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MedicationDatabaseLinkCreateManyAndReturnArgs>(args?: SelectSubset<T, MedicationDatabaseLinkCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationDatabaseLinkPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MedicationDatabaseLink.
     * @param {MedicationDatabaseLinkDeleteArgs} args - Arguments to delete one MedicationDatabaseLink.
     * @example
     * // Delete one MedicationDatabaseLink
     * const MedicationDatabaseLink = await prisma.medicationDatabaseLink.delete({
     *   where: {
     *     // ... filter to delete one MedicationDatabaseLink
     *   }
     * })
     * 
     */
    delete<T extends MedicationDatabaseLinkDeleteArgs>(args: SelectSubset<T, MedicationDatabaseLinkDeleteArgs<ExtArgs>>): Prisma__MedicationDatabaseLinkClient<$Result.GetResult<Prisma.$MedicationDatabaseLinkPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MedicationDatabaseLink.
     * @param {MedicationDatabaseLinkUpdateArgs} args - Arguments to update one MedicationDatabaseLink.
     * @example
     * // Update one MedicationDatabaseLink
     * const medicationDatabaseLink = await prisma.medicationDatabaseLink.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MedicationDatabaseLinkUpdateArgs>(args: SelectSubset<T, MedicationDatabaseLinkUpdateArgs<ExtArgs>>): Prisma__MedicationDatabaseLinkClient<$Result.GetResult<Prisma.$MedicationDatabaseLinkPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MedicationDatabaseLinks.
     * @param {MedicationDatabaseLinkDeleteManyArgs} args - Arguments to filter MedicationDatabaseLinks to delete.
     * @example
     * // Delete a few MedicationDatabaseLinks
     * const { count } = await prisma.medicationDatabaseLink.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MedicationDatabaseLinkDeleteManyArgs>(args?: SelectSubset<T, MedicationDatabaseLinkDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MedicationDatabaseLinks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationDatabaseLinkUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MedicationDatabaseLinks
     * const medicationDatabaseLink = await prisma.medicationDatabaseLink.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MedicationDatabaseLinkUpdateManyArgs>(args: SelectSubset<T, MedicationDatabaseLinkUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MedicationDatabaseLinks and returns the data updated in the database.
     * @param {MedicationDatabaseLinkUpdateManyAndReturnArgs} args - Arguments to update many MedicationDatabaseLinks.
     * @example
     * // Update many MedicationDatabaseLinks
     * const medicationDatabaseLink = await prisma.medicationDatabaseLink.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MedicationDatabaseLinks and only return the `id`
     * const medicationDatabaseLinkWithIdOnly = await prisma.medicationDatabaseLink.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MedicationDatabaseLinkUpdateManyAndReturnArgs>(args: SelectSubset<T, MedicationDatabaseLinkUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationDatabaseLinkPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MedicationDatabaseLink.
     * @param {MedicationDatabaseLinkUpsertArgs} args - Arguments to update or create a MedicationDatabaseLink.
     * @example
     * // Update or create a MedicationDatabaseLink
     * const medicationDatabaseLink = await prisma.medicationDatabaseLink.upsert({
     *   create: {
     *     // ... data to create a MedicationDatabaseLink
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MedicationDatabaseLink we want to update
     *   }
     * })
     */
    upsert<T extends MedicationDatabaseLinkUpsertArgs>(args: SelectSubset<T, MedicationDatabaseLinkUpsertArgs<ExtArgs>>): Prisma__MedicationDatabaseLinkClient<$Result.GetResult<Prisma.$MedicationDatabaseLinkPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MedicationDatabaseLinks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationDatabaseLinkCountArgs} args - Arguments to filter MedicationDatabaseLinks to count.
     * @example
     * // Count the number of MedicationDatabaseLinks
     * const count = await prisma.medicationDatabaseLink.count({
     *   where: {
     *     // ... the filter for the MedicationDatabaseLinks we want to count
     *   }
     * })
    **/
    count<T extends MedicationDatabaseLinkCountArgs>(
      args?: Subset<T, MedicationDatabaseLinkCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MedicationDatabaseLinkCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MedicationDatabaseLink.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationDatabaseLinkAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MedicationDatabaseLinkAggregateArgs>(args: Subset<T, MedicationDatabaseLinkAggregateArgs>): Prisma.PrismaPromise<GetMedicationDatabaseLinkAggregateType<T>>

    /**
     * Group by MedicationDatabaseLink.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationDatabaseLinkGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MedicationDatabaseLinkGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MedicationDatabaseLinkGroupByArgs['orderBy'] }
        : { orderBy?: MedicationDatabaseLinkGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MedicationDatabaseLinkGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMedicationDatabaseLinkGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MedicationDatabaseLink model
   */
  readonly fields: MedicationDatabaseLinkFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MedicationDatabaseLink.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MedicationDatabaseLinkClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agency<T extends AgencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyDefaultArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    MedicationRecord<T extends MedicationDatabaseLink$MedicationRecordArgs<ExtArgs> = {}>(args?: Subset<T, MedicationDatabaseLink$MedicationRecordArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MedicationDatabaseLink model
   */ 
  interface MedicationDatabaseLinkFieldRefs {
    readonly id: FieldRef<"MedicationDatabaseLink", 'String'>
    readonly name: FieldRef<"MedicationDatabaseLink", 'String'>
    readonly isSpecialist: FieldRef<"MedicationDatabaseLink", 'Boolean'>
    readonly url: FieldRef<"MedicationDatabaseLink", 'String'>
    readonly source: FieldRef<"MedicationDatabaseLink", 'String'>
    readonly agencyId: FieldRef<"MedicationDatabaseLink", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MedicationDatabaseLink findUnique
   */
  export type MedicationDatabaseLinkFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationDatabaseLink
     */
    select?: MedicationDatabaseLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationDatabaseLink
     */
    omit?: MedicationDatabaseLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationDatabaseLinkInclude<ExtArgs> | null
    /**
     * Filter, which MedicationDatabaseLink to fetch.
     */
    where: MedicationDatabaseLinkWhereUniqueInput
  }

  /**
   * MedicationDatabaseLink findUniqueOrThrow
   */
  export type MedicationDatabaseLinkFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationDatabaseLink
     */
    select?: MedicationDatabaseLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationDatabaseLink
     */
    omit?: MedicationDatabaseLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationDatabaseLinkInclude<ExtArgs> | null
    /**
     * Filter, which MedicationDatabaseLink to fetch.
     */
    where: MedicationDatabaseLinkWhereUniqueInput
  }

  /**
   * MedicationDatabaseLink findFirst
   */
  export type MedicationDatabaseLinkFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationDatabaseLink
     */
    select?: MedicationDatabaseLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationDatabaseLink
     */
    omit?: MedicationDatabaseLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationDatabaseLinkInclude<ExtArgs> | null
    /**
     * Filter, which MedicationDatabaseLink to fetch.
     */
    where?: MedicationDatabaseLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MedicationDatabaseLinks to fetch.
     */
    orderBy?: MedicationDatabaseLinkOrderByWithRelationInput | MedicationDatabaseLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MedicationDatabaseLinks.
     */
    cursor?: MedicationDatabaseLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MedicationDatabaseLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MedicationDatabaseLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MedicationDatabaseLinks.
     */
    distinct?: MedicationDatabaseLinkScalarFieldEnum | MedicationDatabaseLinkScalarFieldEnum[]
  }

  /**
   * MedicationDatabaseLink findFirstOrThrow
   */
  export type MedicationDatabaseLinkFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationDatabaseLink
     */
    select?: MedicationDatabaseLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationDatabaseLink
     */
    omit?: MedicationDatabaseLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationDatabaseLinkInclude<ExtArgs> | null
    /**
     * Filter, which MedicationDatabaseLink to fetch.
     */
    where?: MedicationDatabaseLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MedicationDatabaseLinks to fetch.
     */
    orderBy?: MedicationDatabaseLinkOrderByWithRelationInput | MedicationDatabaseLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MedicationDatabaseLinks.
     */
    cursor?: MedicationDatabaseLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MedicationDatabaseLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MedicationDatabaseLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MedicationDatabaseLinks.
     */
    distinct?: MedicationDatabaseLinkScalarFieldEnum | MedicationDatabaseLinkScalarFieldEnum[]
  }

  /**
   * MedicationDatabaseLink findMany
   */
  export type MedicationDatabaseLinkFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationDatabaseLink
     */
    select?: MedicationDatabaseLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationDatabaseLink
     */
    omit?: MedicationDatabaseLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationDatabaseLinkInclude<ExtArgs> | null
    /**
     * Filter, which MedicationDatabaseLinks to fetch.
     */
    where?: MedicationDatabaseLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MedicationDatabaseLinks to fetch.
     */
    orderBy?: MedicationDatabaseLinkOrderByWithRelationInput | MedicationDatabaseLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MedicationDatabaseLinks.
     */
    cursor?: MedicationDatabaseLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MedicationDatabaseLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MedicationDatabaseLinks.
     */
    skip?: number
    distinct?: MedicationDatabaseLinkScalarFieldEnum | MedicationDatabaseLinkScalarFieldEnum[]
  }

  /**
   * MedicationDatabaseLink create
   */
  export type MedicationDatabaseLinkCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationDatabaseLink
     */
    select?: MedicationDatabaseLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationDatabaseLink
     */
    omit?: MedicationDatabaseLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationDatabaseLinkInclude<ExtArgs> | null
    /**
     * The data needed to create a MedicationDatabaseLink.
     */
    data: XOR<MedicationDatabaseLinkCreateInput, MedicationDatabaseLinkUncheckedCreateInput>
  }

  /**
   * MedicationDatabaseLink createMany
   */
  export type MedicationDatabaseLinkCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MedicationDatabaseLinks.
     */
    data: MedicationDatabaseLinkCreateManyInput | MedicationDatabaseLinkCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MedicationDatabaseLink createManyAndReturn
   */
  export type MedicationDatabaseLinkCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationDatabaseLink
     */
    select?: MedicationDatabaseLinkSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationDatabaseLink
     */
    omit?: MedicationDatabaseLinkOmit<ExtArgs> | null
    /**
     * The data used to create many MedicationDatabaseLinks.
     */
    data: MedicationDatabaseLinkCreateManyInput | MedicationDatabaseLinkCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationDatabaseLinkIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MedicationDatabaseLink update
   */
  export type MedicationDatabaseLinkUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationDatabaseLink
     */
    select?: MedicationDatabaseLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationDatabaseLink
     */
    omit?: MedicationDatabaseLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationDatabaseLinkInclude<ExtArgs> | null
    /**
     * The data needed to update a MedicationDatabaseLink.
     */
    data: XOR<MedicationDatabaseLinkUpdateInput, MedicationDatabaseLinkUncheckedUpdateInput>
    /**
     * Choose, which MedicationDatabaseLink to update.
     */
    where: MedicationDatabaseLinkWhereUniqueInput
  }

  /**
   * MedicationDatabaseLink updateMany
   */
  export type MedicationDatabaseLinkUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MedicationDatabaseLinks.
     */
    data: XOR<MedicationDatabaseLinkUpdateManyMutationInput, MedicationDatabaseLinkUncheckedUpdateManyInput>
    /**
     * Filter which MedicationDatabaseLinks to update
     */
    where?: MedicationDatabaseLinkWhereInput
    /**
     * Limit how many MedicationDatabaseLinks to update.
     */
    limit?: number
  }

  /**
   * MedicationDatabaseLink updateManyAndReturn
   */
  export type MedicationDatabaseLinkUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationDatabaseLink
     */
    select?: MedicationDatabaseLinkSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationDatabaseLink
     */
    omit?: MedicationDatabaseLinkOmit<ExtArgs> | null
    /**
     * The data used to update MedicationDatabaseLinks.
     */
    data: XOR<MedicationDatabaseLinkUpdateManyMutationInput, MedicationDatabaseLinkUncheckedUpdateManyInput>
    /**
     * Filter which MedicationDatabaseLinks to update
     */
    where?: MedicationDatabaseLinkWhereInput
    /**
     * Limit how many MedicationDatabaseLinks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationDatabaseLinkIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MedicationDatabaseLink upsert
   */
  export type MedicationDatabaseLinkUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationDatabaseLink
     */
    select?: MedicationDatabaseLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationDatabaseLink
     */
    omit?: MedicationDatabaseLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationDatabaseLinkInclude<ExtArgs> | null
    /**
     * The filter to search for the MedicationDatabaseLink to update in case it exists.
     */
    where: MedicationDatabaseLinkWhereUniqueInput
    /**
     * In case the MedicationDatabaseLink found by the `where` argument doesn't exist, create a new MedicationDatabaseLink with this data.
     */
    create: XOR<MedicationDatabaseLinkCreateInput, MedicationDatabaseLinkUncheckedCreateInput>
    /**
     * In case the MedicationDatabaseLink was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MedicationDatabaseLinkUpdateInput, MedicationDatabaseLinkUncheckedUpdateInput>
  }

  /**
   * MedicationDatabaseLink delete
   */
  export type MedicationDatabaseLinkDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationDatabaseLink
     */
    select?: MedicationDatabaseLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationDatabaseLink
     */
    omit?: MedicationDatabaseLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationDatabaseLinkInclude<ExtArgs> | null
    /**
     * Filter which MedicationDatabaseLink to delete.
     */
    where: MedicationDatabaseLinkWhereUniqueInput
  }

  /**
   * MedicationDatabaseLink deleteMany
   */
  export type MedicationDatabaseLinkDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MedicationDatabaseLinks to delete
     */
    where?: MedicationDatabaseLinkWhereInput
    /**
     * Limit how many MedicationDatabaseLinks to delete.
     */
    limit?: number
  }

  /**
   * MedicationDatabaseLink.MedicationRecord
   */
  export type MedicationDatabaseLink$MedicationRecordArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecord
     */
    select?: MedicationRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationRecord
     */
    omit?: MedicationRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationRecordInclude<ExtArgs> | null
    where?: MedicationRecordWhereInput
    orderBy?: MedicationRecordOrderByWithRelationInput | MedicationRecordOrderByWithRelationInput[]
    cursor?: MedicationRecordWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MedicationRecordScalarFieldEnum | MedicationRecordScalarFieldEnum[]
  }

  /**
   * MedicationDatabaseLink without action
   */
  export type MedicationDatabaseLinkDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationDatabaseLink
     */
    select?: MedicationDatabaseLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationDatabaseLink
     */
    omit?: MedicationDatabaseLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationDatabaseLinkInclude<ExtArgs> | null
  }


  /**
   * Model VisitType
   */

  export type AggregateVisitType = {
    _count: VisitTypeCountAggregateOutputType | null
    _min: VisitTypeMinAggregateOutputType | null
    _max: VisitTypeMaxAggregateOutputType | null
  }

  export type VisitTypeMinAggregateOutputType = {
    id: string | null
    agencyId: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VisitTypeMaxAggregateOutputType = {
    id: string | null
    agencyId: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VisitTypeCountAggregateOutputType = {
    id: number
    agencyId: number
    name: number
    description: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type VisitTypeMinAggregateInputType = {
    id?: true
    agencyId?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VisitTypeMaxAggregateInputType = {
    id?: true
    agencyId?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VisitTypeCountAggregateInputType = {
    id?: true
    agencyId?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type VisitTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VisitType to aggregate.
     */
    where?: VisitTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VisitTypes to fetch.
     */
    orderBy?: VisitTypeOrderByWithRelationInput | VisitTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VisitTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VisitTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VisitTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VisitTypes
    **/
    _count?: true | VisitTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VisitTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VisitTypeMaxAggregateInputType
  }

  export type GetVisitTypeAggregateType<T extends VisitTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateVisitType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVisitType[P]>
      : GetScalarType<T[P], AggregateVisitType[P]>
  }




  export type VisitTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VisitTypeWhereInput
    orderBy?: VisitTypeOrderByWithAggregationInput | VisitTypeOrderByWithAggregationInput[]
    by: VisitTypeScalarFieldEnum[] | VisitTypeScalarFieldEnum
    having?: VisitTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VisitTypeCountAggregateInputType | true
    _min?: VisitTypeMinAggregateInputType
    _max?: VisitTypeMaxAggregateInputType
  }

  export type VisitTypeGroupByOutputType = {
    id: string
    agencyId: string
    name: string
    description: string | null
    createdAt: Date
    updatedAt: Date
    _count: VisitTypeCountAggregateOutputType | null
    _min: VisitTypeMinAggregateOutputType | null
    _max: VisitTypeMaxAggregateOutputType | null
  }

  type GetVisitTypeGroupByPayload<T extends VisitTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VisitTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VisitTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VisitTypeGroupByOutputType[P]>
            : GetScalarType<T[P], VisitTypeGroupByOutputType[P]>
        }
      >
    >


  export type VisitTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    schedules?: boolean | VisitType$schedulesArgs<ExtArgs>
    _count?: boolean | VisitTypeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["visitType"]>

  export type VisitTypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["visitType"]>

  export type VisitTypeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["visitType"]>

  export type VisitTypeSelectScalar = {
    id?: boolean
    agencyId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type VisitTypeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "agencyId" | "name" | "description" | "createdAt" | "updatedAt", ExtArgs["result"]["visitType"]>
  export type VisitTypeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    schedules?: boolean | VisitType$schedulesArgs<ExtArgs>
    _count?: boolean | VisitTypeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VisitTypeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }
  export type VisitTypeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }

  export type $VisitTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VisitType"
    objects: {
      agency: Prisma.$AgencyPayload<ExtArgs>
      schedules: Prisma.$SchedulePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      agencyId: string
      name: string
      description: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["visitType"]>
    composites: {}
  }

  type VisitTypeGetPayload<S extends boolean | null | undefined | VisitTypeDefaultArgs> = $Result.GetResult<Prisma.$VisitTypePayload, S>

  type VisitTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VisitTypeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VisitTypeCountAggregateInputType | true
    }

  export interface VisitTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VisitType'], meta: { name: 'VisitType' } }
    /**
     * Find zero or one VisitType that matches the filter.
     * @param {VisitTypeFindUniqueArgs} args - Arguments to find a VisitType
     * @example
     * // Get one VisitType
     * const visitType = await prisma.visitType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VisitTypeFindUniqueArgs>(args: SelectSubset<T, VisitTypeFindUniqueArgs<ExtArgs>>): Prisma__VisitTypeClient<$Result.GetResult<Prisma.$VisitTypePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VisitType that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VisitTypeFindUniqueOrThrowArgs} args - Arguments to find a VisitType
     * @example
     * // Get one VisitType
     * const visitType = await prisma.visitType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VisitTypeFindUniqueOrThrowArgs>(args: SelectSubset<T, VisitTypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VisitTypeClient<$Result.GetResult<Prisma.$VisitTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VisitType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VisitTypeFindFirstArgs} args - Arguments to find a VisitType
     * @example
     * // Get one VisitType
     * const visitType = await prisma.visitType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VisitTypeFindFirstArgs>(args?: SelectSubset<T, VisitTypeFindFirstArgs<ExtArgs>>): Prisma__VisitTypeClient<$Result.GetResult<Prisma.$VisitTypePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VisitType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VisitTypeFindFirstOrThrowArgs} args - Arguments to find a VisitType
     * @example
     * // Get one VisitType
     * const visitType = await prisma.visitType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VisitTypeFindFirstOrThrowArgs>(args?: SelectSubset<T, VisitTypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__VisitTypeClient<$Result.GetResult<Prisma.$VisitTypePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VisitTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VisitTypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VisitTypes
     * const visitTypes = await prisma.visitType.findMany()
     * 
     * // Get first 10 VisitTypes
     * const visitTypes = await prisma.visitType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const visitTypeWithIdOnly = await prisma.visitType.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VisitTypeFindManyArgs>(args?: SelectSubset<T, VisitTypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VisitTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VisitType.
     * @param {VisitTypeCreateArgs} args - Arguments to create a VisitType.
     * @example
     * // Create one VisitType
     * const VisitType = await prisma.visitType.create({
     *   data: {
     *     // ... data to create a VisitType
     *   }
     * })
     * 
     */
    create<T extends VisitTypeCreateArgs>(args: SelectSubset<T, VisitTypeCreateArgs<ExtArgs>>): Prisma__VisitTypeClient<$Result.GetResult<Prisma.$VisitTypePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VisitTypes.
     * @param {VisitTypeCreateManyArgs} args - Arguments to create many VisitTypes.
     * @example
     * // Create many VisitTypes
     * const visitType = await prisma.visitType.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VisitTypeCreateManyArgs>(args?: SelectSubset<T, VisitTypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VisitTypes and returns the data saved in the database.
     * @param {VisitTypeCreateManyAndReturnArgs} args - Arguments to create many VisitTypes.
     * @example
     * // Create many VisitTypes
     * const visitType = await prisma.visitType.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VisitTypes and only return the `id`
     * const visitTypeWithIdOnly = await prisma.visitType.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VisitTypeCreateManyAndReturnArgs>(args?: SelectSubset<T, VisitTypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VisitTypePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a VisitType.
     * @param {VisitTypeDeleteArgs} args - Arguments to delete one VisitType.
     * @example
     * // Delete one VisitType
     * const VisitType = await prisma.visitType.delete({
     *   where: {
     *     // ... filter to delete one VisitType
     *   }
     * })
     * 
     */
    delete<T extends VisitTypeDeleteArgs>(args: SelectSubset<T, VisitTypeDeleteArgs<ExtArgs>>): Prisma__VisitTypeClient<$Result.GetResult<Prisma.$VisitTypePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VisitType.
     * @param {VisitTypeUpdateArgs} args - Arguments to update one VisitType.
     * @example
     * // Update one VisitType
     * const visitType = await prisma.visitType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VisitTypeUpdateArgs>(args: SelectSubset<T, VisitTypeUpdateArgs<ExtArgs>>): Prisma__VisitTypeClient<$Result.GetResult<Prisma.$VisitTypePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VisitTypes.
     * @param {VisitTypeDeleteManyArgs} args - Arguments to filter VisitTypes to delete.
     * @example
     * // Delete a few VisitTypes
     * const { count } = await prisma.visitType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VisitTypeDeleteManyArgs>(args?: SelectSubset<T, VisitTypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VisitTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VisitTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VisitTypes
     * const visitType = await prisma.visitType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VisitTypeUpdateManyArgs>(args: SelectSubset<T, VisitTypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VisitTypes and returns the data updated in the database.
     * @param {VisitTypeUpdateManyAndReturnArgs} args - Arguments to update many VisitTypes.
     * @example
     * // Update many VisitTypes
     * const visitType = await prisma.visitType.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more VisitTypes and only return the `id`
     * const visitTypeWithIdOnly = await prisma.visitType.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VisitTypeUpdateManyAndReturnArgs>(args: SelectSubset<T, VisitTypeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VisitTypePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one VisitType.
     * @param {VisitTypeUpsertArgs} args - Arguments to update or create a VisitType.
     * @example
     * // Update or create a VisitType
     * const visitType = await prisma.visitType.upsert({
     *   create: {
     *     // ... data to create a VisitType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VisitType we want to update
     *   }
     * })
     */
    upsert<T extends VisitTypeUpsertArgs>(args: SelectSubset<T, VisitTypeUpsertArgs<ExtArgs>>): Prisma__VisitTypeClient<$Result.GetResult<Prisma.$VisitTypePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VisitTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VisitTypeCountArgs} args - Arguments to filter VisitTypes to count.
     * @example
     * // Count the number of VisitTypes
     * const count = await prisma.visitType.count({
     *   where: {
     *     // ... the filter for the VisitTypes we want to count
     *   }
     * })
    **/
    count<T extends VisitTypeCountArgs>(
      args?: Subset<T, VisitTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VisitTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VisitType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VisitTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VisitTypeAggregateArgs>(args: Subset<T, VisitTypeAggregateArgs>): Prisma.PrismaPromise<GetVisitTypeAggregateType<T>>

    /**
     * Group by VisitType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VisitTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VisitTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VisitTypeGroupByArgs['orderBy'] }
        : { orderBy?: VisitTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VisitTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVisitTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VisitType model
   */
  readonly fields: VisitTypeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VisitType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VisitTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agency<T extends AgencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyDefaultArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    schedules<T extends VisitType$schedulesArgs<ExtArgs> = {}>(args?: Subset<T, VisitType$schedulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SchedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VisitType model
   */ 
  interface VisitTypeFieldRefs {
    readonly id: FieldRef<"VisitType", 'String'>
    readonly agencyId: FieldRef<"VisitType", 'String'>
    readonly name: FieldRef<"VisitType", 'String'>
    readonly description: FieldRef<"VisitType", 'String'>
    readonly createdAt: FieldRef<"VisitType", 'DateTime'>
    readonly updatedAt: FieldRef<"VisitType", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VisitType findUnique
   */
  export type VisitTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VisitType
     */
    select?: VisitTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VisitType
     */
    omit?: VisitTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VisitTypeInclude<ExtArgs> | null
    /**
     * Filter, which VisitType to fetch.
     */
    where: VisitTypeWhereUniqueInput
  }

  /**
   * VisitType findUniqueOrThrow
   */
  export type VisitTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VisitType
     */
    select?: VisitTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VisitType
     */
    omit?: VisitTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VisitTypeInclude<ExtArgs> | null
    /**
     * Filter, which VisitType to fetch.
     */
    where: VisitTypeWhereUniqueInput
  }

  /**
   * VisitType findFirst
   */
  export type VisitTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VisitType
     */
    select?: VisitTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VisitType
     */
    omit?: VisitTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VisitTypeInclude<ExtArgs> | null
    /**
     * Filter, which VisitType to fetch.
     */
    where?: VisitTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VisitTypes to fetch.
     */
    orderBy?: VisitTypeOrderByWithRelationInput | VisitTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VisitTypes.
     */
    cursor?: VisitTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VisitTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VisitTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VisitTypes.
     */
    distinct?: VisitTypeScalarFieldEnum | VisitTypeScalarFieldEnum[]
  }

  /**
   * VisitType findFirstOrThrow
   */
  export type VisitTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VisitType
     */
    select?: VisitTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VisitType
     */
    omit?: VisitTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VisitTypeInclude<ExtArgs> | null
    /**
     * Filter, which VisitType to fetch.
     */
    where?: VisitTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VisitTypes to fetch.
     */
    orderBy?: VisitTypeOrderByWithRelationInput | VisitTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VisitTypes.
     */
    cursor?: VisitTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VisitTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VisitTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VisitTypes.
     */
    distinct?: VisitTypeScalarFieldEnum | VisitTypeScalarFieldEnum[]
  }

  /**
   * VisitType findMany
   */
  export type VisitTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VisitType
     */
    select?: VisitTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VisitType
     */
    omit?: VisitTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VisitTypeInclude<ExtArgs> | null
    /**
     * Filter, which VisitTypes to fetch.
     */
    where?: VisitTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VisitTypes to fetch.
     */
    orderBy?: VisitTypeOrderByWithRelationInput | VisitTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VisitTypes.
     */
    cursor?: VisitTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VisitTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VisitTypes.
     */
    skip?: number
    distinct?: VisitTypeScalarFieldEnum | VisitTypeScalarFieldEnum[]
  }

  /**
   * VisitType create
   */
  export type VisitTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VisitType
     */
    select?: VisitTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VisitType
     */
    omit?: VisitTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VisitTypeInclude<ExtArgs> | null
    /**
     * The data needed to create a VisitType.
     */
    data: XOR<VisitTypeCreateInput, VisitTypeUncheckedCreateInput>
  }

  /**
   * VisitType createMany
   */
  export type VisitTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VisitTypes.
     */
    data: VisitTypeCreateManyInput | VisitTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VisitType createManyAndReturn
   */
  export type VisitTypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VisitType
     */
    select?: VisitTypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VisitType
     */
    omit?: VisitTypeOmit<ExtArgs> | null
    /**
     * The data used to create many VisitTypes.
     */
    data: VisitTypeCreateManyInput | VisitTypeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VisitTypeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * VisitType update
   */
  export type VisitTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VisitType
     */
    select?: VisitTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VisitType
     */
    omit?: VisitTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VisitTypeInclude<ExtArgs> | null
    /**
     * The data needed to update a VisitType.
     */
    data: XOR<VisitTypeUpdateInput, VisitTypeUncheckedUpdateInput>
    /**
     * Choose, which VisitType to update.
     */
    where: VisitTypeWhereUniqueInput
  }

  /**
   * VisitType updateMany
   */
  export type VisitTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VisitTypes.
     */
    data: XOR<VisitTypeUpdateManyMutationInput, VisitTypeUncheckedUpdateManyInput>
    /**
     * Filter which VisitTypes to update
     */
    where?: VisitTypeWhereInput
    /**
     * Limit how many VisitTypes to update.
     */
    limit?: number
  }

  /**
   * VisitType updateManyAndReturn
   */
  export type VisitTypeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VisitType
     */
    select?: VisitTypeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VisitType
     */
    omit?: VisitTypeOmit<ExtArgs> | null
    /**
     * The data used to update VisitTypes.
     */
    data: XOR<VisitTypeUpdateManyMutationInput, VisitTypeUncheckedUpdateManyInput>
    /**
     * Filter which VisitTypes to update
     */
    where?: VisitTypeWhereInput
    /**
     * Limit how many VisitTypes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VisitTypeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * VisitType upsert
   */
  export type VisitTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VisitType
     */
    select?: VisitTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VisitType
     */
    omit?: VisitTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VisitTypeInclude<ExtArgs> | null
    /**
     * The filter to search for the VisitType to update in case it exists.
     */
    where: VisitTypeWhereUniqueInput
    /**
     * In case the VisitType found by the `where` argument doesn't exist, create a new VisitType with this data.
     */
    create: XOR<VisitTypeCreateInput, VisitTypeUncheckedCreateInput>
    /**
     * In case the VisitType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VisitTypeUpdateInput, VisitTypeUncheckedUpdateInput>
  }

  /**
   * VisitType delete
   */
  export type VisitTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VisitType
     */
    select?: VisitTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VisitType
     */
    omit?: VisitTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VisitTypeInclude<ExtArgs> | null
    /**
     * Filter which VisitType to delete.
     */
    where: VisitTypeWhereUniqueInput
  }

  /**
   * VisitType deleteMany
   */
  export type VisitTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VisitTypes to delete
     */
    where?: VisitTypeWhereInput
    /**
     * Limit how many VisitTypes to delete.
     */
    limit?: number
  }

  /**
   * VisitType.schedules
   */
  export type VisitType$schedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Schedule
     */
    select?: ScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Schedule
     */
    omit?: ScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScheduleInclude<ExtArgs> | null
    where?: ScheduleWhereInput
    orderBy?: ScheduleOrderByWithRelationInput | ScheduleOrderByWithRelationInput[]
    cursor?: ScheduleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ScheduleScalarFieldEnum | ScheduleScalarFieldEnum[]
  }

  /**
   * VisitType without action
   */
  export type VisitTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VisitType
     */
    select?: VisitTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VisitType
     */
    omit?: VisitTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VisitTypeInclude<ExtArgs> | null
  }


  /**
   * Model Schedule
   */

  export type AggregateSchedule = {
    _count: ScheduleCountAggregateOutputType | null
    _avg: ScheduleAvgAggregateOutputType | null
    _sum: ScheduleSumAggregateOutputType | null
    _min: ScheduleMinAggregateOutputType | null
    _max: ScheduleMaxAggregateOutputType | null
  }

  export type ScheduleAvgAggregateOutputType = {
    chargeRate: number | null
  }

  export type ScheduleSumAggregateOutputType = {
    chargeRate: number | null
  }

  export type ScheduleMinAggregateOutputType = {
    id: string | null
    agencyId: string | null
    clientId: string | null
    userId: string | null
    date: Date | null
    startTime: string | null
    endTime: string | null
    status: string | null
    type: $Enums.ScheduleType | null
    notes: string | null
    chargeRate: number | null
    createdAt: Date | null
    updatedAt: Date | null
    visitTypeId: string | null
  }

  export type ScheduleMaxAggregateOutputType = {
    id: string | null
    agencyId: string | null
    clientId: string | null
    userId: string | null
    date: Date | null
    startTime: string | null
    endTime: string | null
    status: string | null
    type: $Enums.ScheduleType | null
    notes: string | null
    chargeRate: number | null
    createdAt: Date | null
    updatedAt: Date | null
    visitTypeId: string | null
  }

  export type ScheduleCountAggregateOutputType = {
    id: number
    agencyId: number
    clientId: number
    userId: number
    date: number
    startTime: number
    endTime: number
    status: number
    type: number
    notes: number
    chargeRate: number
    createdAt: number
    updatedAt: number
    visitTypeId: number
    _all: number
  }


  export type ScheduleAvgAggregateInputType = {
    chargeRate?: true
  }

  export type ScheduleSumAggregateInputType = {
    chargeRate?: true
  }

  export type ScheduleMinAggregateInputType = {
    id?: true
    agencyId?: true
    clientId?: true
    userId?: true
    date?: true
    startTime?: true
    endTime?: true
    status?: true
    type?: true
    notes?: true
    chargeRate?: true
    createdAt?: true
    updatedAt?: true
    visitTypeId?: true
  }

  export type ScheduleMaxAggregateInputType = {
    id?: true
    agencyId?: true
    clientId?: true
    userId?: true
    date?: true
    startTime?: true
    endTime?: true
    status?: true
    type?: true
    notes?: true
    chargeRate?: true
    createdAt?: true
    updatedAt?: true
    visitTypeId?: true
  }

  export type ScheduleCountAggregateInputType = {
    id?: true
    agencyId?: true
    clientId?: true
    userId?: true
    date?: true
    startTime?: true
    endTime?: true
    status?: true
    type?: true
    notes?: true
    chargeRate?: true
    createdAt?: true
    updatedAt?: true
    visitTypeId?: true
    _all?: true
  }

  export type ScheduleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Schedule to aggregate.
     */
    where?: ScheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Schedules to fetch.
     */
    orderBy?: ScheduleOrderByWithRelationInput | ScheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ScheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Schedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Schedules
    **/
    _count?: true | ScheduleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ScheduleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ScheduleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ScheduleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ScheduleMaxAggregateInputType
  }

  export type GetScheduleAggregateType<T extends ScheduleAggregateArgs> = {
        [P in keyof T & keyof AggregateSchedule]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSchedule[P]>
      : GetScalarType<T[P], AggregateSchedule[P]>
  }




  export type ScheduleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScheduleWhereInput
    orderBy?: ScheduleOrderByWithAggregationInput | ScheduleOrderByWithAggregationInput[]
    by: ScheduleScalarFieldEnum[] | ScheduleScalarFieldEnum
    having?: ScheduleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ScheduleCountAggregateInputType | true
    _avg?: ScheduleAvgAggregateInputType
    _sum?: ScheduleSumAggregateInputType
    _min?: ScheduleMinAggregateInputType
    _max?: ScheduleMaxAggregateInputType
  }

  export type ScheduleGroupByOutputType = {
    id: string
    agencyId: string
    clientId: string
    userId: string
    date: Date
    startTime: string
    endTime: string
    status: string
    type: $Enums.ScheduleType
    notes: string | null
    chargeRate: number | null
    createdAt: Date
    updatedAt: Date
    visitTypeId: string | null
    _count: ScheduleCountAggregateOutputType | null
    _avg: ScheduleAvgAggregateOutputType | null
    _sum: ScheduleSumAggregateOutputType | null
    _min: ScheduleMinAggregateOutputType | null
    _max: ScheduleMaxAggregateOutputType | null
  }

  type GetScheduleGroupByPayload<T extends ScheduleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ScheduleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ScheduleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ScheduleGroupByOutputType[P]>
            : GetScalarType<T[P], ScheduleGroupByOutputType[P]>
        }
      >
    >


  export type ScheduleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    clientId?: boolean
    userId?: boolean
    date?: boolean
    startTime?: boolean
    endTime?: boolean
    status?: boolean
    type?: boolean
    notes?: boolean
    chargeRate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    visitTypeId?: boolean
    visitType?: boolean | Schedule$visitTypeArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["schedule"]>

  export type ScheduleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    clientId?: boolean
    userId?: boolean
    date?: boolean
    startTime?: boolean
    endTime?: boolean
    status?: boolean
    type?: boolean
    notes?: boolean
    chargeRate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    visitTypeId?: boolean
    visitType?: boolean | Schedule$visitTypeArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["schedule"]>

  export type ScheduleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    clientId?: boolean
    userId?: boolean
    date?: boolean
    startTime?: boolean
    endTime?: boolean
    status?: boolean
    type?: boolean
    notes?: boolean
    chargeRate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    visitTypeId?: boolean
    visitType?: boolean | Schedule$visitTypeArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["schedule"]>

  export type ScheduleSelectScalar = {
    id?: boolean
    agencyId?: boolean
    clientId?: boolean
    userId?: boolean
    date?: boolean
    startTime?: boolean
    endTime?: boolean
    status?: boolean
    type?: boolean
    notes?: boolean
    chargeRate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    visitTypeId?: boolean
  }

  export type ScheduleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "agencyId" | "clientId" | "userId" | "date" | "startTime" | "endTime" | "status" | "type" | "notes" | "chargeRate" | "createdAt" | "updatedAt" | "visitTypeId", ExtArgs["result"]["schedule"]>
  export type ScheduleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    visitType?: boolean | Schedule$visitTypeArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ScheduleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    visitType?: boolean | Schedule$visitTypeArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ScheduleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    visitType?: boolean | Schedule$visitTypeArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SchedulePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Schedule"
    objects: {
      visitType: Prisma.$VisitTypePayload<ExtArgs> | null
      agency: Prisma.$AgencyPayload<ExtArgs>
      client: Prisma.$UserPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      agencyId: string
      clientId: string
      userId: string
      date: Date
      startTime: string
      endTime: string
      status: string
      type: $Enums.ScheduleType
      notes: string | null
      chargeRate: number | null
      createdAt: Date
      updatedAt: Date
      visitTypeId: string | null
    }, ExtArgs["result"]["schedule"]>
    composites: {}
  }

  type ScheduleGetPayload<S extends boolean | null | undefined | ScheduleDefaultArgs> = $Result.GetResult<Prisma.$SchedulePayload, S>

  type ScheduleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ScheduleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ScheduleCountAggregateInputType | true
    }

  export interface ScheduleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Schedule'], meta: { name: 'Schedule' } }
    /**
     * Find zero or one Schedule that matches the filter.
     * @param {ScheduleFindUniqueArgs} args - Arguments to find a Schedule
     * @example
     * // Get one Schedule
     * const schedule = await prisma.schedule.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ScheduleFindUniqueArgs>(args: SelectSubset<T, ScheduleFindUniqueArgs<ExtArgs>>): Prisma__ScheduleClient<$Result.GetResult<Prisma.$SchedulePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Schedule that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ScheduleFindUniqueOrThrowArgs} args - Arguments to find a Schedule
     * @example
     * // Get one Schedule
     * const schedule = await prisma.schedule.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ScheduleFindUniqueOrThrowArgs>(args: SelectSubset<T, ScheduleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ScheduleClient<$Result.GetResult<Prisma.$SchedulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Schedule that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduleFindFirstArgs} args - Arguments to find a Schedule
     * @example
     * // Get one Schedule
     * const schedule = await prisma.schedule.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ScheduleFindFirstArgs>(args?: SelectSubset<T, ScheduleFindFirstArgs<ExtArgs>>): Prisma__ScheduleClient<$Result.GetResult<Prisma.$SchedulePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Schedule that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduleFindFirstOrThrowArgs} args - Arguments to find a Schedule
     * @example
     * // Get one Schedule
     * const schedule = await prisma.schedule.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ScheduleFindFirstOrThrowArgs>(args?: SelectSubset<T, ScheduleFindFirstOrThrowArgs<ExtArgs>>): Prisma__ScheduleClient<$Result.GetResult<Prisma.$SchedulePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Schedules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Schedules
     * const schedules = await prisma.schedule.findMany()
     * 
     * // Get first 10 Schedules
     * const schedules = await prisma.schedule.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const scheduleWithIdOnly = await prisma.schedule.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ScheduleFindManyArgs>(args?: SelectSubset<T, ScheduleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SchedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Schedule.
     * @param {ScheduleCreateArgs} args - Arguments to create a Schedule.
     * @example
     * // Create one Schedule
     * const Schedule = await prisma.schedule.create({
     *   data: {
     *     // ... data to create a Schedule
     *   }
     * })
     * 
     */
    create<T extends ScheduleCreateArgs>(args: SelectSubset<T, ScheduleCreateArgs<ExtArgs>>): Prisma__ScheduleClient<$Result.GetResult<Prisma.$SchedulePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Schedules.
     * @param {ScheduleCreateManyArgs} args - Arguments to create many Schedules.
     * @example
     * // Create many Schedules
     * const schedule = await prisma.schedule.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ScheduleCreateManyArgs>(args?: SelectSubset<T, ScheduleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Schedules and returns the data saved in the database.
     * @param {ScheduleCreateManyAndReturnArgs} args - Arguments to create many Schedules.
     * @example
     * // Create many Schedules
     * const schedule = await prisma.schedule.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Schedules and only return the `id`
     * const scheduleWithIdOnly = await prisma.schedule.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ScheduleCreateManyAndReturnArgs>(args?: SelectSubset<T, ScheduleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SchedulePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Schedule.
     * @param {ScheduleDeleteArgs} args - Arguments to delete one Schedule.
     * @example
     * // Delete one Schedule
     * const Schedule = await prisma.schedule.delete({
     *   where: {
     *     // ... filter to delete one Schedule
     *   }
     * })
     * 
     */
    delete<T extends ScheduleDeleteArgs>(args: SelectSubset<T, ScheduleDeleteArgs<ExtArgs>>): Prisma__ScheduleClient<$Result.GetResult<Prisma.$SchedulePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Schedule.
     * @param {ScheduleUpdateArgs} args - Arguments to update one Schedule.
     * @example
     * // Update one Schedule
     * const schedule = await prisma.schedule.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ScheduleUpdateArgs>(args: SelectSubset<T, ScheduleUpdateArgs<ExtArgs>>): Prisma__ScheduleClient<$Result.GetResult<Prisma.$SchedulePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Schedules.
     * @param {ScheduleDeleteManyArgs} args - Arguments to filter Schedules to delete.
     * @example
     * // Delete a few Schedules
     * const { count } = await prisma.schedule.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ScheduleDeleteManyArgs>(args?: SelectSubset<T, ScheduleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Schedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Schedules
     * const schedule = await prisma.schedule.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ScheduleUpdateManyArgs>(args: SelectSubset<T, ScheduleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Schedules and returns the data updated in the database.
     * @param {ScheduleUpdateManyAndReturnArgs} args - Arguments to update many Schedules.
     * @example
     * // Update many Schedules
     * const schedule = await prisma.schedule.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Schedules and only return the `id`
     * const scheduleWithIdOnly = await prisma.schedule.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ScheduleUpdateManyAndReturnArgs>(args: SelectSubset<T, ScheduleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SchedulePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Schedule.
     * @param {ScheduleUpsertArgs} args - Arguments to update or create a Schedule.
     * @example
     * // Update or create a Schedule
     * const schedule = await prisma.schedule.upsert({
     *   create: {
     *     // ... data to create a Schedule
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Schedule we want to update
     *   }
     * })
     */
    upsert<T extends ScheduleUpsertArgs>(args: SelectSubset<T, ScheduleUpsertArgs<ExtArgs>>): Prisma__ScheduleClient<$Result.GetResult<Prisma.$SchedulePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Schedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduleCountArgs} args - Arguments to filter Schedules to count.
     * @example
     * // Count the number of Schedules
     * const count = await prisma.schedule.count({
     *   where: {
     *     // ... the filter for the Schedules we want to count
     *   }
     * })
    **/
    count<T extends ScheduleCountArgs>(
      args?: Subset<T, ScheduleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ScheduleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Schedule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ScheduleAggregateArgs>(args: Subset<T, ScheduleAggregateArgs>): Prisma.PrismaPromise<GetScheduleAggregateType<T>>

    /**
     * Group by Schedule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScheduleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ScheduleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ScheduleGroupByArgs['orderBy'] }
        : { orderBy?: ScheduleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ScheduleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetScheduleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Schedule model
   */
  readonly fields: ScheduleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Schedule.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ScheduleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    visitType<T extends Schedule$visitTypeArgs<ExtArgs> = {}>(args?: Subset<T, Schedule$visitTypeArgs<ExtArgs>>): Prisma__VisitTypeClient<$Result.GetResult<Prisma.$VisitTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    agency<T extends AgencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyDefaultArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    client<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Schedule model
   */ 
  interface ScheduleFieldRefs {
    readonly id: FieldRef<"Schedule", 'String'>
    readonly agencyId: FieldRef<"Schedule", 'String'>
    readonly clientId: FieldRef<"Schedule", 'String'>
    readonly userId: FieldRef<"Schedule", 'String'>
    readonly date: FieldRef<"Schedule", 'DateTime'>
    readonly startTime: FieldRef<"Schedule", 'String'>
    readonly endTime: FieldRef<"Schedule", 'String'>
    readonly status: FieldRef<"Schedule", 'String'>
    readonly type: FieldRef<"Schedule", 'ScheduleType'>
    readonly notes: FieldRef<"Schedule", 'String'>
    readonly chargeRate: FieldRef<"Schedule", 'Float'>
    readonly createdAt: FieldRef<"Schedule", 'DateTime'>
    readonly updatedAt: FieldRef<"Schedule", 'DateTime'>
    readonly visitTypeId: FieldRef<"Schedule", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Schedule findUnique
   */
  export type ScheduleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Schedule
     */
    select?: ScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Schedule
     */
    omit?: ScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScheduleInclude<ExtArgs> | null
    /**
     * Filter, which Schedule to fetch.
     */
    where: ScheduleWhereUniqueInput
  }

  /**
   * Schedule findUniqueOrThrow
   */
  export type ScheduleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Schedule
     */
    select?: ScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Schedule
     */
    omit?: ScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScheduleInclude<ExtArgs> | null
    /**
     * Filter, which Schedule to fetch.
     */
    where: ScheduleWhereUniqueInput
  }

  /**
   * Schedule findFirst
   */
  export type ScheduleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Schedule
     */
    select?: ScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Schedule
     */
    omit?: ScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScheduleInclude<ExtArgs> | null
    /**
     * Filter, which Schedule to fetch.
     */
    where?: ScheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Schedules to fetch.
     */
    orderBy?: ScheduleOrderByWithRelationInput | ScheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Schedules.
     */
    cursor?: ScheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Schedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Schedules.
     */
    distinct?: ScheduleScalarFieldEnum | ScheduleScalarFieldEnum[]
  }

  /**
   * Schedule findFirstOrThrow
   */
  export type ScheduleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Schedule
     */
    select?: ScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Schedule
     */
    omit?: ScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScheduleInclude<ExtArgs> | null
    /**
     * Filter, which Schedule to fetch.
     */
    where?: ScheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Schedules to fetch.
     */
    orderBy?: ScheduleOrderByWithRelationInput | ScheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Schedules.
     */
    cursor?: ScheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Schedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Schedules.
     */
    distinct?: ScheduleScalarFieldEnum | ScheduleScalarFieldEnum[]
  }

  /**
   * Schedule findMany
   */
  export type ScheduleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Schedule
     */
    select?: ScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Schedule
     */
    omit?: ScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScheduleInclude<ExtArgs> | null
    /**
     * Filter, which Schedules to fetch.
     */
    where?: ScheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Schedules to fetch.
     */
    orderBy?: ScheduleOrderByWithRelationInput | ScheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Schedules.
     */
    cursor?: ScheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Schedules.
     */
    skip?: number
    distinct?: ScheduleScalarFieldEnum | ScheduleScalarFieldEnum[]
  }

  /**
   * Schedule create
   */
  export type ScheduleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Schedule
     */
    select?: ScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Schedule
     */
    omit?: ScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScheduleInclude<ExtArgs> | null
    /**
     * The data needed to create a Schedule.
     */
    data: XOR<ScheduleCreateInput, ScheduleUncheckedCreateInput>
  }

  /**
   * Schedule createMany
   */
  export type ScheduleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Schedules.
     */
    data: ScheduleCreateManyInput | ScheduleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Schedule createManyAndReturn
   */
  export type ScheduleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Schedule
     */
    select?: ScheduleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Schedule
     */
    omit?: ScheduleOmit<ExtArgs> | null
    /**
     * The data used to create many Schedules.
     */
    data: ScheduleCreateManyInput | ScheduleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScheduleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Schedule update
   */
  export type ScheduleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Schedule
     */
    select?: ScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Schedule
     */
    omit?: ScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScheduleInclude<ExtArgs> | null
    /**
     * The data needed to update a Schedule.
     */
    data: XOR<ScheduleUpdateInput, ScheduleUncheckedUpdateInput>
    /**
     * Choose, which Schedule to update.
     */
    where: ScheduleWhereUniqueInput
  }

  /**
   * Schedule updateMany
   */
  export type ScheduleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Schedules.
     */
    data: XOR<ScheduleUpdateManyMutationInput, ScheduleUncheckedUpdateManyInput>
    /**
     * Filter which Schedules to update
     */
    where?: ScheduleWhereInput
    /**
     * Limit how many Schedules to update.
     */
    limit?: number
  }

  /**
   * Schedule updateManyAndReturn
   */
  export type ScheduleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Schedule
     */
    select?: ScheduleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Schedule
     */
    omit?: ScheduleOmit<ExtArgs> | null
    /**
     * The data used to update Schedules.
     */
    data: XOR<ScheduleUpdateManyMutationInput, ScheduleUncheckedUpdateManyInput>
    /**
     * Filter which Schedules to update
     */
    where?: ScheduleWhereInput
    /**
     * Limit how many Schedules to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScheduleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Schedule upsert
   */
  export type ScheduleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Schedule
     */
    select?: ScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Schedule
     */
    omit?: ScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScheduleInclude<ExtArgs> | null
    /**
     * The filter to search for the Schedule to update in case it exists.
     */
    where: ScheduleWhereUniqueInput
    /**
     * In case the Schedule found by the `where` argument doesn't exist, create a new Schedule with this data.
     */
    create: XOR<ScheduleCreateInput, ScheduleUncheckedCreateInput>
    /**
     * In case the Schedule was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ScheduleUpdateInput, ScheduleUncheckedUpdateInput>
  }

  /**
   * Schedule delete
   */
  export type ScheduleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Schedule
     */
    select?: ScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Schedule
     */
    omit?: ScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScheduleInclude<ExtArgs> | null
    /**
     * Filter which Schedule to delete.
     */
    where: ScheduleWhereUniqueInput
  }

  /**
   * Schedule deleteMany
   */
  export type ScheduleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Schedules to delete
     */
    where?: ScheduleWhereInput
    /**
     * Limit how many Schedules to delete.
     */
    limit?: number
  }

  /**
   * Schedule.visitType
   */
  export type Schedule$visitTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VisitType
     */
    select?: VisitTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VisitType
     */
    omit?: VisitTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VisitTypeInclude<ExtArgs> | null
    where?: VisitTypeWhereInput
  }

  /**
   * Schedule without action
   */
  export type ScheduleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Schedule
     */
    select?: ScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Schedule
     */
    omit?: ScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScheduleInclude<ExtArgs> | null
  }


  /**
   * Model Report
   */

  export type AggregateReport = {
    _count: ReportCountAggregateOutputType | null
    _avg: ReportAvgAggregateOutputType | null
    _sum: ReportSumAggregateOutputType | null
    _min: ReportMinAggregateOutputType | null
    _max: ReportMaxAggregateOutputType | null
  }

  export type ReportAvgAggregateOutputType = {
    checkInDistance: number | null
    checkOutDistance: number | null
  }

  export type ReportSumAggregateOutputType = {
    checkInDistance: number | null
    checkOutDistance: number | null
  }

  export type ReportMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    agencyId: string | null
    userId: string | null
    condition: string | null
    summary: string | null
    checkInTime: Date | null
    checkOutTime: Date | null
    createdAt: Date | null
    checkInDistance: number | null
    checkOutDistance: number | null
    checkInLocation: string | null
    checkOutLocation: string | null
    hasSignature: boolean | null
    signatureImageUrl: string | null
    status: $Enums.ReportStatus | null
    lastEditedAt: Date | null
    lastEditedBy: string | null
    lastEditReason: string | null
  }

  export type ReportMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    agencyId: string | null
    userId: string | null
    condition: string | null
    summary: string | null
    checkInTime: Date | null
    checkOutTime: Date | null
    createdAt: Date | null
    checkInDistance: number | null
    checkOutDistance: number | null
    checkInLocation: string | null
    checkOutLocation: string | null
    hasSignature: boolean | null
    signatureImageUrl: string | null
    status: $Enums.ReportStatus | null
    lastEditedAt: Date | null
    lastEditedBy: string | null
    lastEditReason: string | null
  }

  export type ReportCountAggregateOutputType = {
    id: number
    clientId: number
    agencyId: number
    userId: number
    condition: number
    summary: number
    checkInTime: number
    checkOutTime: number
    createdAt: number
    checkInDistance: number
    checkOutDistance: number
    checkInLocation: number
    checkOutLocation: number
    hasSignature: number
    signatureImageUrl: number
    status: number
    lastEditedAt: number
    lastEditedBy: number
    lastEditReason: number
    _all: number
  }


  export type ReportAvgAggregateInputType = {
    checkInDistance?: true
    checkOutDistance?: true
  }

  export type ReportSumAggregateInputType = {
    checkInDistance?: true
    checkOutDistance?: true
  }

  export type ReportMinAggregateInputType = {
    id?: true
    clientId?: true
    agencyId?: true
    userId?: true
    condition?: true
    summary?: true
    checkInTime?: true
    checkOutTime?: true
    createdAt?: true
    checkInDistance?: true
    checkOutDistance?: true
    checkInLocation?: true
    checkOutLocation?: true
    hasSignature?: true
    signatureImageUrl?: true
    status?: true
    lastEditedAt?: true
    lastEditedBy?: true
    lastEditReason?: true
  }

  export type ReportMaxAggregateInputType = {
    id?: true
    clientId?: true
    agencyId?: true
    userId?: true
    condition?: true
    summary?: true
    checkInTime?: true
    checkOutTime?: true
    createdAt?: true
    checkInDistance?: true
    checkOutDistance?: true
    checkInLocation?: true
    checkOutLocation?: true
    hasSignature?: true
    signatureImageUrl?: true
    status?: true
    lastEditedAt?: true
    lastEditedBy?: true
    lastEditReason?: true
  }

  export type ReportCountAggregateInputType = {
    id?: true
    clientId?: true
    agencyId?: true
    userId?: true
    condition?: true
    summary?: true
    checkInTime?: true
    checkOutTime?: true
    createdAt?: true
    checkInDistance?: true
    checkOutDistance?: true
    checkInLocation?: true
    checkOutLocation?: true
    hasSignature?: true
    signatureImageUrl?: true
    status?: true
    lastEditedAt?: true
    lastEditedBy?: true
    lastEditReason?: true
    _all?: true
  }

  export type ReportAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Report to aggregate.
     */
    where?: ReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reports to fetch.
     */
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reports
    **/
    _count?: true | ReportCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReportAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReportSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReportMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReportMaxAggregateInputType
  }

  export type GetReportAggregateType<T extends ReportAggregateArgs> = {
        [P in keyof T & keyof AggregateReport]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReport[P]>
      : GetScalarType<T[P], AggregateReport[P]>
  }




  export type ReportGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportWhereInput
    orderBy?: ReportOrderByWithAggregationInput | ReportOrderByWithAggregationInput[]
    by: ReportScalarFieldEnum[] | ReportScalarFieldEnum
    having?: ReportScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReportCountAggregateInputType | true
    _avg?: ReportAvgAggregateInputType
    _sum?: ReportSumAggregateInputType
    _min?: ReportMinAggregateInputType
    _max?: ReportMaxAggregateInputType
  }

  export type ReportGroupByOutputType = {
    id: string
    clientId: string
    agencyId: string
    userId: string
    condition: string
    summary: string
    checkInTime: Date
    checkOutTime: Date | null
    createdAt: Date
    checkInDistance: number | null
    checkOutDistance: number | null
    checkInLocation: string | null
    checkOutLocation: string | null
    hasSignature: boolean
    signatureImageUrl: string | null
    status: $Enums.ReportStatus
    lastEditedAt: Date | null
    lastEditedBy: string | null
    lastEditReason: string | null
    _count: ReportCountAggregateOutputType | null
    _avg: ReportAvgAggregateOutputType | null
    _sum: ReportSumAggregateOutputType | null
    _min: ReportMinAggregateOutputType | null
    _max: ReportMaxAggregateOutputType | null
  }

  type GetReportGroupByPayload<T extends ReportGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReportGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReportGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReportGroupByOutputType[P]>
            : GetScalarType<T[P], ReportGroupByOutputType[P]>
        }
      >
    >


  export type ReportSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    agencyId?: boolean
    userId?: boolean
    condition?: boolean
    summary?: boolean
    checkInTime?: boolean
    checkOutTime?: boolean
    createdAt?: boolean
    checkInDistance?: boolean
    checkOutDistance?: boolean
    checkInLocation?: boolean
    checkOutLocation?: boolean
    hasSignature?: boolean
    signatureImageUrl?: boolean
    status?: boolean
    lastEditedAt?: boolean
    lastEditedBy?: boolean
    lastEditReason?: boolean
    tasksCompleted?: boolean | Report$tasksCompletedArgs<ExtArgs>
    alerts?: boolean | Report$alertsArgs<ExtArgs>
    bodyMapObservations?: boolean | Report$bodyMapObservationsArgs<ExtArgs>
    medicationAdministrations?: boolean | Report$medicationAdministrationsArgs<ExtArgs>
    editHistory?: boolean | Report$editHistoryArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    caregiver?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    _count?: boolean | ReportCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["report"]>

  export type ReportSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    agencyId?: boolean
    userId?: boolean
    condition?: boolean
    summary?: boolean
    checkInTime?: boolean
    checkOutTime?: boolean
    createdAt?: boolean
    checkInDistance?: boolean
    checkOutDistance?: boolean
    checkInLocation?: boolean
    checkOutLocation?: boolean
    hasSignature?: boolean
    signatureImageUrl?: boolean
    status?: boolean
    lastEditedAt?: boolean
    lastEditedBy?: boolean
    lastEditReason?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
    caregiver?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["report"]>

  export type ReportSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    agencyId?: boolean
    userId?: boolean
    condition?: boolean
    summary?: boolean
    checkInTime?: boolean
    checkOutTime?: boolean
    createdAt?: boolean
    checkInDistance?: boolean
    checkOutDistance?: boolean
    checkInLocation?: boolean
    checkOutLocation?: boolean
    hasSignature?: boolean
    signatureImageUrl?: boolean
    status?: boolean
    lastEditedAt?: boolean
    lastEditedBy?: boolean
    lastEditReason?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
    caregiver?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["report"]>

  export type ReportSelectScalar = {
    id?: boolean
    clientId?: boolean
    agencyId?: boolean
    userId?: boolean
    condition?: boolean
    summary?: boolean
    checkInTime?: boolean
    checkOutTime?: boolean
    createdAt?: boolean
    checkInDistance?: boolean
    checkOutDistance?: boolean
    checkInLocation?: boolean
    checkOutLocation?: boolean
    hasSignature?: boolean
    signatureImageUrl?: boolean
    status?: boolean
    lastEditedAt?: boolean
    lastEditedBy?: boolean
    lastEditReason?: boolean
  }

  export type ReportOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clientId" | "agencyId" | "userId" | "condition" | "summary" | "checkInTime" | "checkOutTime" | "createdAt" | "checkInDistance" | "checkOutDistance" | "checkInLocation" | "checkOutLocation" | "hasSignature" | "signatureImageUrl" | "status" | "lastEditedAt" | "lastEditedBy" | "lastEditReason", ExtArgs["result"]["report"]>
  export type ReportInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tasksCompleted?: boolean | Report$tasksCompletedArgs<ExtArgs>
    alerts?: boolean | Report$alertsArgs<ExtArgs>
    bodyMapObservations?: boolean | Report$bodyMapObservationsArgs<ExtArgs>
    medicationAdministrations?: boolean | Report$medicationAdministrationsArgs<ExtArgs>
    editHistory?: boolean | Report$editHistoryArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    caregiver?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    _count?: boolean | ReportCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ReportIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
    caregiver?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }
  export type ReportIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
    caregiver?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }

  export type $ReportPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Report"
    objects: {
      tasksCompleted: Prisma.$ReportTaskPayload<ExtArgs>[]
      alerts: Prisma.$ReportAlertPayload<ExtArgs>[]
      bodyMapObservations: Prisma.$BodyMapObservationPayload<ExtArgs>[]
      medicationAdministrations: Prisma.$MedicationAdministrationPayload<ExtArgs>[]
      editHistory: Prisma.$ReportEditPayload<ExtArgs>[]
      client: Prisma.$UserPayload<ExtArgs>
      caregiver: Prisma.$UserPayload<ExtArgs>
      agency: Prisma.$AgencyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      agencyId: string
      userId: string
      condition: string
      summary: string
      checkInTime: Date
      checkOutTime: Date | null
      createdAt: Date
      checkInDistance: number | null
      checkOutDistance: number | null
      checkInLocation: string | null
      checkOutLocation: string | null
      hasSignature: boolean
      signatureImageUrl: string | null
      status: $Enums.ReportStatus
      lastEditedAt: Date | null
      lastEditedBy: string | null
      lastEditReason: string | null
    }, ExtArgs["result"]["report"]>
    composites: {}
  }

  type ReportGetPayload<S extends boolean | null | undefined | ReportDefaultArgs> = $Result.GetResult<Prisma.$ReportPayload, S>

  type ReportCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReportFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReportCountAggregateInputType | true
    }

  export interface ReportDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Report'], meta: { name: 'Report' } }
    /**
     * Find zero or one Report that matches the filter.
     * @param {ReportFindUniqueArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReportFindUniqueArgs>(args: SelectSubset<T, ReportFindUniqueArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Report that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReportFindUniqueOrThrowArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReportFindUniqueOrThrowArgs>(args: SelectSubset<T, ReportFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Report that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportFindFirstArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReportFindFirstArgs>(args?: SelectSubset<T, ReportFindFirstArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Report that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportFindFirstOrThrowArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReportFindFirstOrThrowArgs>(args?: SelectSubset<T, ReportFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reports
     * const reports = await prisma.report.findMany()
     * 
     * // Get first 10 Reports
     * const reports = await prisma.report.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reportWithIdOnly = await prisma.report.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReportFindManyArgs>(args?: SelectSubset<T, ReportFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Report.
     * @param {ReportCreateArgs} args - Arguments to create a Report.
     * @example
     * // Create one Report
     * const Report = await prisma.report.create({
     *   data: {
     *     // ... data to create a Report
     *   }
     * })
     * 
     */
    create<T extends ReportCreateArgs>(args: SelectSubset<T, ReportCreateArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reports.
     * @param {ReportCreateManyArgs} args - Arguments to create many Reports.
     * @example
     * // Create many Reports
     * const report = await prisma.report.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReportCreateManyArgs>(args?: SelectSubset<T, ReportCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reports and returns the data saved in the database.
     * @param {ReportCreateManyAndReturnArgs} args - Arguments to create many Reports.
     * @example
     * // Create many Reports
     * const report = await prisma.report.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reports and only return the `id`
     * const reportWithIdOnly = await prisma.report.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReportCreateManyAndReturnArgs>(args?: SelectSubset<T, ReportCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Report.
     * @param {ReportDeleteArgs} args - Arguments to delete one Report.
     * @example
     * // Delete one Report
     * const Report = await prisma.report.delete({
     *   where: {
     *     // ... filter to delete one Report
     *   }
     * })
     * 
     */
    delete<T extends ReportDeleteArgs>(args: SelectSubset<T, ReportDeleteArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Report.
     * @param {ReportUpdateArgs} args - Arguments to update one Report.
     * @example
     * // Update one Report
     * const report = await prisma.report.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReportUpdateArgs>(args: SelectSubset<T, ReportUpdateArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reports.
     * @param {ReportDeleteManyArgs} args - Arguments to filter Reports to delete.
     * @example
     * // Delete a few Reports
     * const { count } = await prisma.report.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReportDeleteManyArgs>(args?: SelectSubset<T, ReportDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reports
     * const report = await prisma.report.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReportUpdateManyArgs>(args: SelectSubset<T, ReportUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reports and returns the data updated in the database.
     * @param {ReportUpdateManyAndReturnArgs} args - Arguments to update many Reports.
     * @example
     * // Update many Reports
     * const report = await prisma.report.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reports and only return the `id`
     * const reportWithIdOnly = await prisma.report.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReportUpdateManyAndReturnArgs>(args: SelectSubset<T, ReportUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Report.
     * @param {ReportUpsertArgs} args - Arguments to update or create a Report.
     * @example
     * // Update or create a Report
     * const report = await prisma.report.upsert({
     *   create: {
     *     // ... data to create a Report
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Report we want to update
     *   }
     * })
     */
    upsert<T extends ReportUpsertArgs>(args: SelectSubset<T, ReportUpsertArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportCountArgs} args - Arguments to filter Reports to count.
     * @example
     * // Count the number of Reports
     * const count = await prisma.report.count({
     *   where: {
     *     // ... the filter for the Reports we want to count
     *   }
     * })
    **/
    count<T extends ReportCountArgs>(
      args?: Subset<T, ReportCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReportCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Report.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReportAggregateArgs>(args: Subset<T, ReportAggregateArgs>): Prisma.PrismaPromise<GetReportAggregateType<T>>

    /**
     * Group by Report.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReportGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReportGroupByArgs['orderBy'] }
        : { orderBy?: ReportGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReportGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Report model
   */
  readonly fields: ReportFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Report.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReportClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tasksCompleted<T extends Report$tasksCompletedArgs<ExtArgs> = {}>(args?: Subset<T, Report$tasksCompletedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportTaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    alerts<T extends Report$alertsArgs<ExtArgs> = {}>(args?: Subset<T, Report$alertsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportAlertPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    bodyMapObservations<T extends Report$bodyMapObservationsArgs<ExtArgs> = {}>(args?: Subset<T, Report$bodyMapObservationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BodyMapObservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    medicationAdministrations<T extends Report$medicationAdministrationsArgs<ExtArgs> = {}>(args?: Subset<T, Report$medicationAdministrationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationAdministrationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    editHistory<T extends Report$editHistoryArgs<ExtArgs> = {}>(args?: Subset<T, Report$editHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportEditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    client<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    caregiver<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    agency<T extends AgencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyDefaultArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Report model
   */ 
  interface ReportFieldRefs {
    readonly id: FieldRef<"Report", 'String'>
    readonly clientId: FieldRef<"Report", 'String'>
    readonly agencyId: FieldRef<"Report", 'String'>
    readonly userId: FieldRef<"Report", 'String'>
    readonly condition: FieldRef<"Report", 'String'>
    readonly summary: FieldRef<"Report", 'String'>
    readonly checkInTime: FieldRef<"Report", 'DateTime'>
    readonly checkOutTime: FieldRef<"Report", 'DateTime'>
    readonly createdAt: FieldRef<"Report", 'DateTime'>
    readonly checkInDistance: FieldRef<"Report", 'Float'>
    readonly checkOutDistance: FieldRef<"Report", 'Float'>
    readonly checkInLocation: FieldRef<"Report", 'String'>
    readonly checkOutLocation: FieldRef<"Report", 'String'>
    readonly hasSignature: FieldRef<"Report", 'Boolean'>
    readonly signatureImageUrl: FieldRef<"Report", 'String'>
    readonly status: FieldRef<"Report", 'ReportStatus'>
    readonly lastEditedAt: FieldRef<"Report", 'DateTime'>
    readonly lastEditedBy: FieldRef<"Report", 'String'>
    readonly lastEditReason: FieldRef<"Report", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Report findUnique
   */
  export type ReportFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Report to fetch.
     */
    where: ReportWhereUniqueInput
  }

  /**
   * Report findUniqueOrThrow
   */
  export type ReportFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Report to fetch.
     */
    where: ReportWhereUniqueInput
  }

  /**
   * Report findFirst
   */
  export type ReportFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Report to fetch.
     */
    where?: ReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reports to fetch.
     */
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reports.
     */
    cursor?: ReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reports.
     */
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * Report findFirstOrThrow
   */
  export type ReportFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Report to fetch.
     */
    where?: ReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reports to fetch.
     */
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reports.
     */
    cursor?: ReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reports.
     */
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * Report findMany
   */
  export type ReportFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Reports to fetch.
     */
    where?: ReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reports to fetch.
     */
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reports.
     */
    cursor?: ReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reports.
     */
    skip?: number
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * Report create
   */
  export type ReportCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * The data needed to create a Report.
     */
    data: XOR<ReportCreateInput, ReportUncheckedCreateInput>
  }

  /**
   * Report createMany
   */
  export type ReportCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reports.
     */
    data: ReportCreateManyInput | ReportCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Report createManyAndReturn
   */
  export type ReportCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * The data used to create many Reports.
     */
    data: ReportCreateManyInput | ReportCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Report update
   */
  export type ReportUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * The data needed to update a Report.
     */
    data: XOR<ReportUpdateInput, ReportUncheckedUpdateInput>
    /**
     * Choose, which Report to update.
     */
    where: ReportWhereUniqueInput
  }

  /**
   * Report updateMany
   */
  export type ReportUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reports.
     */
    data: XOR<ReportUpdateManyMutationInput, ReportUncheckedUpdateManyInput>
    /**
     * Filter which Reports to update
     */
    where?: ReportWhereInput
    /**
     * Limit how many Reports to update.
     */
    limit?: number
  }

  /**
   * Report updateManyAndReturn
   */
  export type ReportUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * The data used to update Reports.
     */
    data: XOR<ReportUpdateManyMutationInput, ReportUncheckedUpdateManyInput>
    /**
     * Filter which Reports to update
     */
    where?: ReportWhereInput
    /**
     * Limit how many Reports to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Report upsert
   */
  export type ReportUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * The filter to search for the Report to update in case it exists.
     */
    where: ReportWhereUniqueInput
    /**
     * In case the Report found by the `where` argument doesn't exist, create a new Report with this data.
     */
    create: XOR<ReportCreateInput, ReportUncheckedCreateInput>
    /**
     * In case the Report was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReportUpdateInput, ReportUncheckedUpdateInput>
  }

  /**
   * Report delete
   */
  export type ReportDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter which Report to delete.
     */
    where: ReportWhereUniqueInput
  }

  /**
   * Report deleteMany
   */
  export type ReportDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reports to delete
     */
    where?: ReportWhereInput
    /**
     * Limit how many Reports to delete.
     */
    limit?: number
  }

  /**
   * Report.tasksCompleted
   */
  export type Report$tasksCompletedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportTask
     */
    select?: ReportTaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportTask
     */
    omit?: ReportTaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportTaskInclude<ExtArgs> | null
    where?: ReportTaskWhereInput
    orderBy?: ReportTaskOrderByWithRelationInput | ReportTaskOrderByWithRelationInput[]
    cursor?: ReportTaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportTaskScalarFieldEnum | ReportTaskScalarFieldEnum[]
  }

  /**
   * Report.alerts
   */
  export type Report$alertsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportAlert
     */
    select?: ReportAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportAlert
     */
    omit?: ReportAlertOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportAlertInclude<ExtArgs> | null
    where?: ReportAlertWhereInput
    orderBy?: ReportAlertOrderByWithRelationInput | ReportAlertOrderByWithRelationInput[]
    cursor?: ReportAlertWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportAlertScalarFieldEnum | ReportAlertScalarFieldEnum[]
  }

  /**
   * Report.bodyMapObservations
   */
  export type Report$bodyMapObservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BodyMapObservation
     */
    select?: BodyMapObservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BodyMapObservation
     */
    omit?: BodyMapObservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BodyMapObservationInclude<ExtArgs> | null
    where?: BodyMapObservationWhereInput
    orderBy?: BodyMapObservationOrderByWithRelationInput | BodyMapObservationOrderByWithRelationInput[]
    cursor?: BodyMapObservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BodyMapObservationScalarFieldEnum | BodyMapObservationScalarFieldEnum[]
  }

  /**
   * Report.medicationAdministrations
   */
  export type Report$medicationAdministrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationAdministration
     */
    select?: MedicationAdministrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationAdministration
     */
    omit?: MedicationAdministrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationAdministrationInclude<ExtArgs> | null
    where?: MedicationAdministrationWhereInput
    orderBy?: MedicationAdministrationOrderByWithRelationInput | MedicationAdministrationOrderByWithRelationInput[]
    cursor?: MedicationAdministrationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MedicationAdministrationScalarFieldEnum | MedicationAdministrationScalarFieldEnum[]
  }

  /**
   * Report.editHistory
   */
  export type Report$editHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportEdit
     */
    select?: ReportEditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportEdit
     */
    omit?: ReportEditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportEditInclude<ExtArgs> | null
    where?: ReportEditWhereInput
    orderBy?: ReportEditOrderByWithRelationInput | ReportEditOrderByWithRelationInput[]
    cursor?: ReportEditWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportEditScalarFieldEnum | ReportEditScalarFieldEnum[]
  }

  /**
   * Report without action
   */
  export type ReportDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
  }


  /**
   * Model ReportTask
   */

  export type AggregateReportTask = {
    _count: ReportTaskCountAggregateOutputType | null
    _min: ReportTaskMinAggregateOutputType | null
    _max: ReportTaskMaxAggregateOutputType | null
  }

  export type ReportTaskMinAggregateOutputType = {
    id: string | null
    reportId: string | null
    taskName: string | null
    completed: boolean | null
    notes: string | null
    taskIcon: string | null
    taskType: string | null
    completedAt: Date | null
  }

  export type ReportTaskMaxAggregateOutputType = {
    id: string | null
    reportId: string | null
    taskName: string | null
    completed: boolean | null
    notes: string | null
    taskIcon: string | null
    taskType: string | null
    completedAt: Date | null
  }

  export type ReportTaskCountAggregateOutputType = {
    id: number
    reportId: number
    taskName: number
    completed: number
    notes: number
    taskIcon: number
    taskType: number
    completedAt: number
    _all: number
  }


  export type ReportTaskMinAggregateInputType = {
    id?: true
    reportId?: true
    taskName?: true
    completed?: true
    notes?: true
    taskIcon?: true
    taskType?: true
    completedAt?: true
  }

  export type ReportTaskMaxAggregateInputType = {
    id?: true
    reportId?: true
    taskName?: true
    completed?: true
    notes?: true
    taskIcon?: true
    taskType?: true
    completedAt?: true
  }

  export type ReportTaskCountAggregateInputType = {
    id?: true
    reportId?: true
    taskName?: true
    completed?: true
    notes?: true
    taskIcon?: true
    taskType?: true
    completedAt?: true
    _all?: true
  }

  export type ReportTaskAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReportTask to aggregate.
     */
    where?: ReportTaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReportTasks to fetch.
     */
    orderBy?: ReportTaskOrderByWithRelationInput | ReportTaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReportTaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReportTasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReportTasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReportTasks
    **/
    _count?: true | ReportTaskCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReportTaskMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReportTaskMaxAggregateInputType
  }

  export type GetReportTaskAggregateType<T extends ReportTaskAggregateArgs> = {
        [P in keyof T & keyof AggregateReportTask]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReportTask[P]>
      : GetScalarType<T[P], AggregateReportTask[P]>
  }




  export type ReportTaskGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportTaskWhereInput
    orderBy?: ReportTaskOrderByWithAggregationInput | ReportTaskOrderByWithAggregationInput[]
    by: ReportTaskScalarFieldEnum[] | ReportTaskScalarFieldEnum
    having?: ReportTaskScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReportTaskCountAggregateInputType | true
    _min?: ReportTaskMinAggregateInputType
    _max?: ReportTaskMaxAggregateInputType
  }

  export type ReportTaskGroupByOutputType = {
    id: string
    reportId: string
    taskName: string
    completed: boolean
    notes: string | null
    taskIcon: string | null
    taskType: string | null
    completedAt: Date | null
    _count: ReportTaskCountAggregateOutputType | null
    _min: ReportTaskMinAggregateOutputType | null
    _max: ReportTaskMaxAggregateOutputType | null
  }

  type GetReportTaskGroupByPayload<T extends ReportTaskGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReportTaskGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReportTaskGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReportTaskGroupByOutputType[P]>
            : GetScalarType<T[P], ReportTaskGroupByOutputType[P]>
        }
      >
    >


  export type ReportTaskSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reportId?: boolean
    taskName?: boolean
    completed?: boolean
    notes?: boolean
    taskIcon?: boolean
    taskType?: boolean
    completedAt?: boolean
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reportTask"]>

  export type ReportTaskSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reportId?: boolean
    taskName?: boolean
    completed?: boolean
    notes?: boolean
    taskIcon?: boolean
    taskType?: boolean
    completedAt?: boolean
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reportTask"]>

  export type ReportTaskSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reportId?: boolean
    taskName?: boolean
    completed?: boolean
    notes?: boolean
    taskIcon?: boolean
    taskType?: boolean
    completedAt?: boolean
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reportTask"]>

  export type ReportTaskSelectScalar = {
    id?: boolean
    reportId?: boolean
    taskName?: boolean
    completed?: boolean
    notes?: boolean
    taskIcon?: boolean
    taskType?: boolean
    completedAt?: boolean
  }

  export type ReportTaskOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "reportId" | "taskName" | "completed" | "notes" | "taskIcon" | "taskType" | "completedAt", ExtArgs["result"]["reportTask"]>
  export type ReportTaskInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }
  export type ReportTaskIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }
  export type ReportTaskIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }

  export type $ReportTaskPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReportTask"
    objects: {
      report: Prisma.$ReportPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      reportId: string
      taskName: string
      completed: boolean
      notes: string | null
      taskIcon: string | null
      taskType: string | null
      completedAt: Date | null
    }, ExtArgs["result"]["reportTask"]>
    composites: {}
  }

  type ReportTaskGetPayload<S extends boolean | null | undefined | ReportTaskDefaultArgs> = $Result.GetResult<Prisma.$ReportTaskPayload, S>

  type ReportTaskCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReportTaskFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReportTaskCountAggregateInputType | true
    }

  export interface ReportTaskDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReportTask'], meta: { name: 'ReportTask' } }
    /**
     * Find zero or one ReportTask that matches the filter.
     * @param {ReportTaskFindUniqueArgs} args - Arguments to find a ReportTask
     * @example
     * // Get one ReportTask
     * const reportTask = await prisma.reportTask.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReportTaskFindUniqueArgs>(args: SelectSubset<T, ReportTaskFindUniqueArgs<ExtArgs>>): Prisma__ReportTaskClient<$Result.GetResult<Prisma.$ReportTaskPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReportTask that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReportTaskFindUniqueOrThrowArgs} args - Arguments to find a ReportTask
     * @example
     * // Get one ReportTask
     * const reportTask = await prisma.reportTask.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReportTaskFindUniqueOrThrowArgs>(args: SelectSubset<T, ReportTaskFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReportTaskClient<$Result.GetResult<Prisma.$ReportTaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReportTask that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportTaskFindFirstArgs} args - Arguments to find a ReportTask
     * @example
     * // Get one ReportTask
     * const reportTask = await prisma.reportTask.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReportTaskFindFirstArgs>(args?: SelectSubset<T, ReportTaskFindFirstArgs<ExtArgs>>): Prisma__ReportTaskClient<$Result.GetResult<Prisma.$ReportTaskPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReportTask that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportTaskFindFirstOrThrowArgs} args - Arguments to find a ReportTask
     * @example
     * // Get one ReportTask
     * const reportTask = await prisma.reportTask.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReportTaskFindFirstOrThrowArgs>(args?: SelectSubset<T, ReportTaskFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReportTaskClient<$Result.GetResult<Prisma.$ReportTaskPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReportTasks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportTaskFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReportTasks
     * const reportTasks = await prisma.reportTask.findMany()
     * 
     * // Get first 10 ReportTasks
     * const reportTasks = await prisma.reportTask.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reportTaskWithIdOnly = await prisma.reportTask.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReportTaskFindManyArgs>(args?: SelectSubset<T, ReportTaskFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportTaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReportTask.
     * @param {ReportTaskCreateArgs} args - Arguments to create a ReportTask.
     * @example
     * // Create one ReportTask
     * const ReportTask = await prisma.reportTask.create({
     *   data: {
     *     // ... data to create a ReportTask
     *   }
     * })
     * 
     */
    create<T extends ReportTaskCreateArgs>(args: SelectSubset<T, ReportTaskCreateArgs<ExtArgs>>): Prisma__ReportTaskClient<$Result.GetResult<Prisma.$ReportTaskPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReportTasks.
     * @param {ReportTaskCreateManyArgs} args - Arguments to create many ReportTasks.
     * @example
     * // Create many ReportTasks
     * const reportTask = await prisma.reportTask.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReportTaskCreateManyArgs>(args?: SelectSubset<T, ReportTaskCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ReportTasks and returns the data saved in the database.
     * @param {ReportTaskCreateManyAndReturnArgs} args - Arguments to create many ReportTasks.
     * @example
     * // Create many ReportTasks
     * const reportTask = await prisma.reportTask.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ReportTasks and only return the `id`
     * const reportTaskWithIdOnly = await prisma.reportTask.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReportTaskCreateManyAndReturnArgs>(args?: SelectSubset<T, ReportTaskCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportTaskPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ReportTask.
     * @param {ReportTaskDeleteArgs} args - Arguments to delete one ReportTask.
     * @example
     * // Delete one ReportTask
     * const ReportTask = await prisma.reportTask.delete({
     *   where: {
     *     // ... filter to delete one ReportTask
     *   }
     * })
     * 
     */
    delete<T extends ReportTaskDeleteArgs>(args: SelectSubset<T, ReportTaskDeleteArgs<ExtArgs>>): Prisma__ReportTaskClient<$Result.GetResult<Prisma.$ReportTaskPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReportTask.
     * @param {ReportTaskUpdateArgs} args - Arguments to update one ReportTask.
     * @example
     * // Update one ReportTask
     * const reportTask = await prisma.reportTask.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReportTaskUpdateArgs>(args: SelectSubset<T, ReportTaskUpdateArgs<ExtArgs>>): Prisma__ReportTaskClient<$Result.GetResult<Prisma.$ReportTaskPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReportTasks.
     * @param {ReportTaskDeleteManyArgs} args - Arguments to filter ReportTasks to delete.
     * @example
     * // Delete a few ReportTasks
     * const { count } = await prisma.reportTask.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReportTaskDeleteManyArgs>(args?: SelectSubset<T, ReportTaskDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReportTasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportTaskUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReportTasks
     * const reportTask = await prisma.reportTask.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReportTaskUpdateManyArgs>(args: SelectSubset<T, ReportTaskUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReportTasks and returns the data updated in the database.
     * @param {ReportTaskUpdateManyAndReturnArgs} args - Arguments to update many ReportTasks.
     * @example
     * // Update many ReportTasks
     * const reportTask = await prisma.reportTask.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ReportTasks and only return the `id`
     * const reportTaskWithIdOnly = await prisma.reportTask.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReportTaskUpdateManyAndReturnArgs>(args: SelectSubset<T, ReportTaskUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportTaskPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ReportTask.
     * @param {ReportTaskUpsertArgs} args - Arguments to update or create a ReportTask.
     * @example
     * // Update or create a ReportTask
     * const reportTask = await prisma.reportTask.upsert({
     *   create: {
     *     // ... data to create a ReportTask
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReportTask we want to update
     *   }
     * })
     */
    upsert<T extends ReportTaskUpsertArgs>(args: SelectSubset<T, ReportTaskUpsertArgs<ExtArgs>>): Prisma__ReportTaskClient<$Result.GetResult<Prisma.$ReportTaskPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReportTasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportTaskCountArgs} args - Arguments to filter ReportTasks to count.
     * @example
     * // Count the number of ReportTasks
     * const count = await prisma.reportTask.count({
     *   where: {
     *     // ... the filter for the ReportTasks we want to count
     *   }
     * })
    **/
    count<T extends ReportTaskCountArgs>(
      args?: Subset<T, ReportTaskCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReportTaskCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReportTask.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportTaskAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReportTaskAggregateArgs>(args: Subset<T, ReportTaskAggregateArgs>): Prisma.PrismaPromise<GetReportTaskAggregateType<T>>

    /**
     * Group by ReportTask.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportTaskGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReportTaskGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReportTaskGroupByArgs['orderBy'] }
        : { orderBy?: ReportTaskGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReportTaskGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportTaskGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReportTask model
   */
  readonly fields: ReportTaskFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReportTask.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReportTaskClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    report<T extends ReportDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReportDefaultArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReportTask model
   */ 
  interface ReportTaskFieldRefs {
    readonly id: FieldRef<"ReportTask", 'String'>
    readonly reportId: FieldRef<"ReportTask", 'String'>
    readonly taskName: FieldRef<"ReportTask", 'String'>
    readonly completed: FieldRef<"ReportTask", 'Boolean'>
    readonly notes: FieldRef<"ReportTask", 'String'>
    readonly taskIcon: FieldRef<"ReportTask", 'String'>
    readonly taskType: FieldRef<"ReportTask", 'String'>
    readonly completedAt: FieldRef<"ReportTask", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ReportTask findUnique
   */
  export type ReportTaskFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportTask
     */
    select?: ReportTaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportTask
     */
    omit?: ReportTaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportTaskInclude<ExtArgs> | null
    /**
     * Filter, which ReportTask to fetch.
     */
    where: ReportTaskWhereUniqueInput
  }

  /**
   * ReportTask findUniqueOrThrow
   */
  export type ReportTaskFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportTask
     */
    select?: ReportTaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportTask
     */
    omit?: ReportTaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportTaskInclude<ExtArgs> | null
    /**
     * Filter, which ReportTask to fetch.
     */
    where: ReportTaskWhereUniqueInput
  }

  /**
   * ReportTask findFirst
   */
  export type ReportTaskFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportTask
     */
    select?: ReportTaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportTask
     */
    omit?: ReportTaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportTaskInclude<ExtArgs> | null
    /**
     * Filter, which ReportTask to fetch.
     */
    where?: ReportTaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReportTasks to fetch.
     */
    orderBy?: ReportTaskOrderByWithRelationInput | ReportTaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReportTasks.
     */
    cursor?: ReportTaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReportTasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReportTasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReportTasks.
     */
    distinct?: ReportTaskScalarFieldEnum | ReportTaskScalarFieldEnum[]
  }

  /**
   * ReportTask findFirstOrThrow
   */
  export type ReportTaskFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportTask
     */
    select?: ReportTaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportTask
     */
    omit?: ReportTaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportTaskInclude<ExtArgs> | null
    /**
     * Filter, which ReportTask to fetch.
     */
    where?: ReportTaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReportTasks to fetch.
     */
    orderBy?: ReportTaskOrderByWithRelationInput | ReportTaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReportTasks.
     */
    cursor?: ReportTaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReportTasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReportTasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReportTasks.
     */
    distinct?: ReportTaskScalarFieldEnum | ReportTaskScalarFieldEnum[]
  }

  /**
   * ReportTask findMany
   */
  export type ReportTaskFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportTask
     */
    select?: ReportTaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportTask
     */
    omit?: ReportTaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportTaskInclude<ExtArgs> | null
    /**
     * Filter, which ReportTasks to fetch.
     */
    where?: ReportTaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReportTasks to fetch.
     */
    orderBy?: ReportTaskOrderByWithRelationInput | ReportTaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReportTasks.
     */
    cursor?: ReportTaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReportTasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReportTasks.
     */
    skip?: number
    distinct?: ReportTaskScalarFieldEnum | ReportTaskScalarFieldEnum[]
  }

  /**
   * ReportTask create
   */
  export type ReportTaskCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportTask
     */
    select?: ReportTaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportTask
     */
    omit?: ReportTaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportTaskInclude<ExtArgs> | null
    /**
     * The data needed to create a ReportTask.
     */
    data: XOR<ReportTaskCreateInput, ReportTaskUncheckedCreateInput>
  }

  /**
   * ReportTask createMany
   */
  export type ReportTaskCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReportTasks.
     */
    data: ReportTaskCreateManyInput | ReportTaskCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReportTask createManyAndReturn
   */
  export type ReportTaskCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportTask
     */
    select?: ReportTaskSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReportTask
     */
    omit?: ReportTaskOmit<ExtArgs> | null
    /**
     * The data used to create many ReportTasks.
     */
    data: ReportTaskCreateManyInput | ReportTaskCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportTaskIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReportTask update
   */
  export type ReportTaskUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportTask
     */
    select?: ReportTaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportTask
     */
    omit?: ReportTaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportTaskInclude<ExtArgs> | null
    /**
     * The data needed to update a ReportTask.
     */
    data: XOR<ReportTaskUpdateInput, ReportTaskUncheckedUpdateInput>
    /**
     * Choose, which ReportTask to update.
     */
    where: ReportTaskWhereUniqueInput
  }

  /**
   * ReportTask updateMany
   */
  export type ReportTaskUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReportTasks.
     */
    data: XOR<ReportTaskUpdateManyMutationInput, ReportTaskUncheckedUpdateManyInput>
    /**
     * Filter which ReportTasks to update
     */
    where?: ReportTaskWhereInput
    /**
     * Limit how many ReportTasks to update.
     */
    limit?: number
  }

  /**
   * ReportTask updateManyAndReturn
   */
  export type ReportTaskUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportTask
     */
    select?: ReportTaskSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReportTask
     */
    omit?: ReportTaskOmit<ExtArgs> | null
    /**
     * The data used to update ReportTasks.
     */
    data: XOR<ReportTaskUpdateManyMutationInput, ReportTaskUncheckedUpdateManyInput>
    /**
     * Filter which ReportTasks to update
     */
    where?: ReportTaskWhereInput
    /**
     * Limit how many ReportTasks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportTaskIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReportTask upsert
   */
  export type ReportTaskUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportTask
     */
    select?: ReportTaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportTask
     */
    omit?: ReportTaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportTaskInclude<ExtArgs> | null
    /**
     * The filter to search for the ReportTask to update in case it exists.
     */
    where: ReportTaskWhereUniqueInput
    /**
     * In case the ReportTask found by the `where` argument doesn't exist, create a new ReportTask with this data.
     */
    create: XOR<ReportTaskCreateInput, ReportTaskUncheckedCreateInput>
    /**
     * In case the ReportTask was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReportTaskUpdateInput, ReportTaskUncheckedUpdateInput>
  }

  /**
   * ReportTask delete
   */
  export type ReportTaskDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportTask
     */
    select?: ReportTaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportTask
     */
    omit?: ReportTaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportTaskInclude<ExtArgs> | null
    /**
     * Filter which ReportTask to delete.
     */
    where: ReportTaskWhereUniqueInput
  }

  /**
   * ReportTask deleteMany
   */
  export type ReportTaskDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReportTasks to delete
     */
    where?: ReportTaskWhereInput
    /**
     * Limit how many ReportTasks to delete.
     */
    limit?: number
  }

  /**
   * ReportTask without action
   */
  export type ReportTaskDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportTask
     */
    select?: ReportTaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportTask
     */
    omit?: ReportTaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportTaskInclude<ExtArgs> | null
  }


  /**
   * Model ReportAlert
   */

  export type AggregateReportAlert = {
    _count: ReportAlertCountAggregateOutputType | null
    _min: ReportAlertMinAggregateOutputType | null
    _max: ReportAlertMaxAggregateOutputType | null
  }

  export type ReportAlertMinAggregateOutputType = {
    id: string | null
    reportId: string | null
    type: $Enums.AlertType | null
    message: string | null
    severity: $Enums.AlertSeverity | null
    createdAt: Date | null
    resolved: boolean | null
    resolvedAt: Date | null
    resolvedBy: string | null
  }

  export type ReportAlertMaxAggregateOutputType = {
    id: string | null
    reportId: string | null
    type: $Enums.AlertType | null
    message: string | null
    severity: $Enums.AlertSeverity | null
    createdAt: Date | null
    resolved: boolean | null
    resolvedAt: Date | null
    resolvedBy: string | null
  }

  export type ReportAlertCountAggregateOutputType = {
    id: number
    reportId: number
    type: number
    message: number
    severity: number
    createdAt: number
    resolved: number
    resolvedAt: number
    resolvedBy: number
    _all: number
  }


  export type ReportAlertMinAggregateInputType = {
    id?: true
    reportId?: true
    type?: true
    message?: true
    severity?: true
    createdAt?: true
    resolved?: true
    resolvedAt?: true
    resolvedBy?: true
  }

  export type ReportAlertMaxAggregateInputType = {
    id?: true
    reportId?: true
    type?: true
    message?: true
    severity?: true
    createdAt?: true
    resolved?: true
    resolvedAt?: true
    resolvedBy?: true
  }

  export type ReportAlertCountAggregateInputType = {
    id?: true
    reportId?: true
    type?: true
    message?: true
    severity?: true
    createdAt?: true
    resolved?: true
    resolvedAt?: true
    resolvedBy?: true
    _all?: true
  }

  export type ReportAlertAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReportAlert to aggregate.
     */
    where?: ReportAlertWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReportAlerts to fetch.
     */
    orderBy?: ReportAlertOrderByWithRelationInput | ReportAlertOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReportAlertWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReportAlerts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReportAlerts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReportAlerts
    **/
    _count?: true | ReportAlertCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReportAlertMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReportAlertMaxAggregateInputType
  }

  export type GetReportAlertAggregateType<T extends ReportAlertAggregateArgs> = {
        [P in keyof T & keyof AggregateReportAlert]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReportAlert[P]>
      : GetScalarType<T[P], AggregateReportAlert[P]>
  }




  export type ReportAlertGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportAlertWhereInput
    orderBy?: ReportAlertOrderByWithAggregationInput | ReportAlertOrderByWithAggregationInput[]
    by: ReportAlertScalarFieldEnum[] | ReportAlertScalarFieldEnum
    having?: ReportAlertScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReportAlertCountAggregateInputType | true
    _min?: ReportAlertMinAggregateInputType
    _max?: ReportAlertMaxAggregateInputType
  }

  export type ReportAlertGroupByOutputType = {
    id: string
    reportId: string
    type: $Enums.AlertType
    message: string
    severity: $Enums.AlertSeverity
    createdAt: Date
    resolved: boolean
    resolvedAt: Date | null
    resolvedBy: string | null
    _count: ReportAlertCountAggregateOutputType | null
    _min: ReportAlertMinAggregateOutputType | null
    _max: ReportAlertMaxAggregateOutputType | null
  }

  type GetReportAlertGroupByPayload<T extends ReportAlertGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReportAlertGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReportAlertGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReportAlertGroupByOutputType[P]>
            : GetScalarType<T[P], ReportAlertGroupByOutputType[P]>
        }
      >
    >


  export type ReportAlertSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reportId?: boolean
    type?: boolean
    message?: boolean
    severity?: boolean
    createdAt?: boolean
    resolved?: boolean
    resolvedAt?: boolean
    resolvedBy?: boolean
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reportAlert"]>

  export type ReportAlertSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reportId?: boolean
    type?: boolean
    message?: boolean
    severity?: boolean
    createdAt?: boolean
    resolved?: boolean
    resolvedAt?: boolean
    resolvedBy?: boolean
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reportAlert"]>

  export type ReportAlertSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reportId?: boolean
    type?: boolean
    message?: boolean
    severity?: boolean
    createdAt?: boolean
    resolved?: boolean
    resolvedAt?: boolean
    resolvedBy?: boolean
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reportAlert"]>

  export type ReportAlertSelectScalar = {
    id?: boolean
    reportId?: boolean
    type?: boolean
    message?: boolean
    severity?: boolean
    createdAt?: boolean
    resolved?: boolean
    resolvedAt?: boolean
    resolvedBy?: boolean
  }

  export type ReportAlertOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "reportId" | "type" | "message" | "severity" | "createdAt" | "resolved" | "resolvedAt" | "resolvedBy", ExtArgs["result"]["reportAlert"]>
  export type ReportAlertInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }
  export type ReportAlertIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }
  export type ReportAlertIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }

  export type $ReportAlertPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReportAlert"
    objects: {
      report: Prisma.$ReportPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      reportId: string
      type: $Enums.AlertType
      message: string
      severity: $Enums.AlertSeverity
      createdAt: Date
      resolved: boolean
      resolvedAt: Date | null
      resolvedBy: string | null
    }, ExtArgs["result"]["reportAlert"]>
    composites: {}
  }

  type ReportAlertGetPayload<S extends boolean | null | undefined | ReportAlertDefaultArgs> = $Result.GetResult<Prisma.$ReportAlertPayload, S>

  type ReportAlertCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReportAlertFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReportAlertCountAggregateInputType | true
    }

  export interface ReportAlertDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReportAlert'], meta: { name: 'ReportAlert' } }
    /**
     * Find zero or one ReportAlert that matches the filter.
     * @param {ReportAlertFindUniqueArgs} args - Arguments to find a ReportAlert
     * @example
     * // Get one ReportAlert
     * const reportAlert = await prisma.reportAlert.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReportAlertFindUniqueArgs>(args: SelectSubset<T, ReportAlertFindUniqueArgs<ExtArgs>>): Prisma__ReportAlertClient<$Result.GetResult<Prisma.$ReportAlertPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReportAlert that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReportAlertFindUniqueOrThrowArgs} args - Arguments to find a ReportAlert
     * @example
     * // Get one ReportAlert
     * const reportAlert = await prisma.reportAlert.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReportAlertFindUniqueOrThrowArgs>(args: SelectSubset<T, ReportAlertFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReportAlertClient<$Result.GetResult<Prisma.$ReportAlertPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReportAlert that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportAlertFindFirstArgs} args - Arguments to find a ReportAlert
     * @example
     * // Get one ReportAlert
     * const reportAlert = await prisma.reportAlert.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReportAlertFindFirstArgs>(args?: SelectSubset<T, ReportAlertFindFirstArgs<ExtArgs>>): Prisma__ReportAlertClient<$Result.GetResult<Prisma.$ReportAlertPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReportAlert that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportAlertFindFirstOrThrowArgs} args - Arguments to find a ReportAlert
     * @example
     * // Get one ReportAlert
     * const reportAlert = await prisma.reportAlert.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReportAlertFindFirstOrThrowArgs>(args?: SelectSubset<T, ReportAlertFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReportAlertClient<$Result.GetResult<Prisma.$ReportAlertPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReportAlerts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportAlertFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReportAlerts
     * const reportAlerts = await prisma.reportAlert.findMany()
     * 
     * // Get first 10 ReportAlerts
     * const reportAlerts = await prisma.reportAlert.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reportAlertWithIdOnly = await prisma.reportAlert.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReportAlertFindManyArgs>(args?: SelectSubset<T, ReportAlertFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportAlertPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReportAlert.
     * @param {ReportAlertCreateArgs} args - Arguments to create a ReportAlert.
     * @example
     * // Create one ReportAlert
     * const ReportAlert = await prisma.reportAlert.create({
     *   data: {
     *     // ... data to create a ReportAlert
     *   }
     * })
     * 
     */
    create<T extends ReportAlertCreateArgs>(args: SelectSubset<T, ReportAlertCreateArgs<ExtArgs>>): Prisma__ReportAlertClient<$Result.GetResult<Prisma.$ReportAlertPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReportAlerts.
     * @param {ReportAlertCreateManyArgs} args - Arguments to create many ReportAlerts.
     * @example
     * // Create many ReportAlerts
     * const reportAlert = await prisma.reportAlert.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReportAlertCreateManyArgs>(args?: SelectSubset<T, ReportAlertCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ReportAlerts and returns the data saved in the database.
     * @param {ReportAlertCreateManyAndReturnArgs} args - Arguments to create many ReportAlerts.
     * @example
     * // Create many ReportAlerts
     * const reportAlert = await prisma.reportAlert.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ReportAlerts and only return the `id`
     * const reportAlertWithIdOnly = await prisma.reportAlert.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReportAlertCreateManyAndReturnArgs>(args?: SelectSubset<T, ReportAlertCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportAlertPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ReportAlert.
     * @param {ReportAlertDeleteArgs} args - Arguments to delete one ReportAlert.
     * @example
     * // Delete one ReportAlert
     * const ReportAlert = await prisma.reportAlert.delete({
     *   where: {
     *     // ... filter to delete one ReportAlert
     *   }
     * })
     * 
     */
    delete<T extends ReportAlertDeleteArgs>(args: SelectSubset<T, ReportAlertDeleteArgs<ExtArgs>>): Prisma__ReportAlertClient<$Result.GetResult<Prisma.$ReportAlertPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReportAlert.
     * @param {ReportAlertUpdateArgs} args - Arguments to update one ReportAlert.
     * @example
     * // Update one ReportAlert
     * const reportAlert = await prisma.reportAlert.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReportAlertUpdateArgs>(args: SelectSubset<T, ReportAlertUpdateArgs<ExtArgs>>): Prisma__ReportAlertClient<$Result.GetResult<Prisma.$ReportAlertPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReportAlerts.
     * @param {ReportAlertDeleteManyArgs} args - Arguments to filter ReportAlerts to delete.
     * @example
     * // Delete a few ReportAlerts
     * const { count } = await prisma.reportAlert.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReportAlertDeleteManyArgs>(args?: SelectSubset<T, ReportAlertDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReportAlerts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportAlertUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReportAlerts
     * const reportAlert = await prisma.reportAlert.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReportAlertUpdateManyArgs>(args: SelectSubset<T, ReportAlertUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReportAlerts and returns the data updated in the database.
     * @param {ReportAlertUpdateManyAndReturnArgs} args - Arguments to update many ReportAlerts.
     * @example
     * // Update many ReportAlerts
     * const reportAlert = await prisma.reportAlert.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ReportAlerts and only return the `id`
     * const reportAlertWithIdOnly = await prisma.reportAlert.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReportAlertUpdateManyAndReturnArgs>(args: SelectSubset<T, ReportAlertUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportAlertPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ReportAlert.
     * @param {ReportAlertUpsertArgs} args - Arguments to update or create a ReportAlert.
     * @example
     * // Update or create a ReportAlert
     * const reportAlert = await prisma.reportAlert.upsert({
     *   create: {
     *     // ... data to create a ReportAlert
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReportAlert we want to update
     *   }
     * })
     */
    upsert<T extends ReportAlertUpsertArgs>(args: SelectSubset<T, ReportAlertUpsertArgs<ExtArgs>>): Prisma__ReportAlertClient<$Result.GetResult<Prisma.$ReportAlertPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReportAlerts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportAlertCountArgs} args - Arguments to filter ReportAlerts to count.
     * @example
     * // Count the number of ReportAlerts
     * const count = await prisma.reportAlert.count({
     *   where: {
     *     // ... the filter for the ReportAlerts we want to count
     *   }
     * })
    **/
    count<T extends ReportAlertCountArgs>(
      args?: Subset<T, ReportAlertCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReportAlertCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReportAlert.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportAlertAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReportAlertAggregateArgs>(args: Subset<T, ReportAlertAggregateArgs>): Prisma.PrismaPromise<GetReportAlertAggregateType<T>>

    /**
     * Group by ReportAlert.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportAlertGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReportAlertGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReportAlertGroupByArgs['orderBy'] }
        : { orderBy?: ReportAlertGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReportAlertGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportAlertGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReportAlert model
   */
  readonly fields: ReportAlertFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReportAlert.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReportAlertClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    report<T extends ReportDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReportDefaultArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReportAlert model
   */ 
  interface ReportAlertFieldRefs {
    readonly id: FieldRef<"ReportAlert", 'String'>
    readonly reportId: FieldRef<"ReportAlert", 'String'>
    readonly type: FieldRef<"ReportAlert", 'AlertType'>
    readonly message: FieldRef<"ReportAlert", 'String'>
    readonly severity: FieldRef<"ReportAlert", 'AlertSeverity'>
    readonly createdAt: FieldRef<"ReportAlert", 'DateTime'>
    readonly resolved: FieldRef<"ReportAlert", 'Boolean'>
    readonly resolvedAt: FieldRef<"ReportAlert", 'DateTime'>
    readonly resolvedBy: FieldRef<"ReportAlert", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ReportAlert findUnique
   */
  export type ReportAlertFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportAlert
     */
    select?: ReportAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportAlert
     */
    omit?: ReportAlertOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportAlertInclude<ExtArgs> | null
    /**
     * Filter, which ReportAlert to fetch.
     */
    where: ReportAlertWhereUniqueInput
  }

  /**
   * ReportAlert findUniqueOrThrow
   */
  export type ReportAlertFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportAlert
     */
    select?: ReportAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportAlert
     */
    omit?: ReportAlertOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportAlertInclude<ExtArgs> | null
    /**
     * Filter, which ReportAlert to fetch.
     */
    where: ReportAlertWhereUniqueInput
  }

  /**
   * ReportAlert findFirst
   */
  export type ReportAlertFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportAlert
     */
    select?: ReportAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportAlert
     */
    omit?: ReportAlertOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportAlertInclude<ExtArgs> | null
    /**
     * Filter, which ReportAlert to fetch.
     */
    where?: ReportAlertWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReportAlerts to fetch.
     */
    orderBy?: ReportAlertOrderByWithRelationInput | ReportAlertOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReportAlerts.
     */
    cursor?: ReportAlertWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReportAlerts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReportAlerts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReportAlerts.
     */
    distinct?: ReportAlertScalarFieldEnum | ReportAlertScalarFieldEnum[]
  }

  /**
   * ReportAlert findFirstOrThrow
   */
  export type ReportAlertFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportAlert
     */
    select?: ReportAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportAlert
     */
    omit?: ReportAlertOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportAlertInclude<ExtArgs> | null
    /**
     * Filter, which ReportAlert to fetch.
     */
    where?: ReportAlertWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReportAlerts to fetch.
     */
    orderBy?: ReportAlertOrderByWithRelationInput | ReportAlertOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReportAlerts.
     */
    cursor?: ReportAlertWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReportAlerts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReportAlerts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReportAlerts.
     */
    distinct?: ReportAlertScalarFieldEnum | ReportAlertScalarFieldEnum[]
  }

  /**
   * ReportAlert findMany
   */
  export type ReportAlertFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportAlert
     */
    select?: ReportAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportAlert
     */
    omit?: ReportAlertOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportAlertInclude<ExtArgs> | null
    /**
     * Filter, which ReportAlerts to fetch.
     */
    where?: ReportAlertWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReportAlerts to fetch.
     */
    orderBy?: ReportAlertOrderByWithRelationInput | ReportAlertOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReportAlerts.
     */
    cursor?: ReportAlertWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReportAlerts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReportAlerts.
     */
    skip?: number
    distinct?: ReportAlertScalarFieldEnum | ReportAlertScalarFieldEnum[]
  }

  /**
   * ReportAlert create
   */
  export type ReportAlertCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportAlert
     */
    select?: ReportAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportAlert
     */
    omit?: ReportAlertOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportAlertInclude<ExtArgs> | null
    /**
     * The data needed to create a ReportAlert.
     */
    data: XOR<ReportAlertCreateInput, ReportAlertUncheckedCreateInput>
  }

  /**
   * ReportAlert createMany
   */
  export type ReportAlertCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReportAlerts.
     */
    data: ReportAlertCreateManyInput | ReportAlertCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReportAlert createManyAndReturn
   */
  export type ReportAlertCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportAlert
     */
    select?: ReportAlertSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReportAlert
     */
    omit?: ReportAlertOmit<ExtArgs> | null
    /**
     * The data used to create many ReportAlerts.
     */
    data: ReportAlertCreateManyInput | ReportAlertCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportAlertIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReportAlert update
   */
  export type ReportAlertUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportAlert
     */
    select?: ReportAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportAlert
     */
    omit?: ReportAlertOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportAlertInclude<ExtArgs> | null
    /**
     * The data needed to update a ReportAlert.
     */
    data: XOR<ReportAlertUpdateInput, ReportAlertUncheckedUpdateInput>
    /**
     * Choose, which ReportAlert to update.
     */
    where: ReportAlertWhereUniqueInput
  }

  /**
   * ReportAlert updateMany
   */
  export type ReportAlertUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReportAlerts.
     */
    data: XOR<ReportAlertUpdateManyMutationInput, ReportAlertUncheckedUpdateManyInput>
    /**
     * Filter which ReportAlerts to update
     */
    where?: ReportAlertWhereInput
    /**
     * Limit how many ReportAlerts to update.
     */
    limit?: number
  }

  /**
   * ReportAlert updateManyAndReturn
   */
  export type ReportAlertUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportAlert
     */
    select?: ReportAlertSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReportAlert
     */
    omit?: ReportAlertOmit<ExtArgs> | null
    /**
     * The data used to update ReportAlerts.
     */
    data: XOR<ReportAlertUpdateManyMutationInput, ReportAlertUncheckedUpdateManyInput>
    /**
     * Filter which ReportAlerts to update
     */
    where?: ReportAlertWhereInput
    /**
     * Limit how many ReportAlerts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportAlertIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReportAlert upsert
   */
  export type ReportAlertUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportAlert
     */
    select?: ReportAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportAlert
     */
    omit?: ReportAlertOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportAlertInclude<ExtArgs> | null
    /**
     * The filter to search for the ReportAlert to update in case it exists.
     */
    where: ReportAlertWhereUniqueInput
    /**
     * In case the ReportAlert found by the `where` argument doesn't exist, create a new ReportAlert with this data.
     */
    create: XOR<ReportAlertCreateInput, ReportAlertUncheckedCreateInput>
    /**
     * In case the ReportAlert was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReportAlertUpdateInput, ReportAlertUncheckedUpdateInput>
  }

  /**
   * ReportAlert delete
   */
  export type ReportAlertDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportAlert
     */
    select?: ReportAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportAlert
     */
    omit?: ReportAlertOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportAlertInclude<ExtArgs> | null
    /**
     * Filter which ReportAlert to delete.
     */
    where: ReportAlertWhereUniqueInput
  }

  /**
   * ReportAlert deleteMany
   */
  export type ReportAlertDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReportAlerts to delete
     */
    where?: ReportAlertWhereInput
    /**
     * Limit how many ReportAlerts to delete.
     */
    limit?: number
  }

  /**
   * ReportAlert without action
   */
  export type ReportAlertDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportAlert
     */
    select?: ReportAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportAlert
     */
    omit?: ReportAlertOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportAlertInclude<ExtArgs> | null
  }


  /**
   * Model BodyMapObservation
   */

  export type AggregateBodyMapObservation = {
    _count: BodyMapObservationCountAggregateOutputType | null
    _min: BodyMapObservationMinAggregateOutputType | null
    _max: BodyMapObservationMaxAggregateOutputType | null
  }

  export type BodyMapObservationMinAggregateOutputType = {
    id: string | null
    reportId: string | null
    bodyPart: string | null
    condition: string | null
    notes: string | null
    createdAt: Date | null
  }

  export type BodyMapObservationMaxAggregateOutputType = {
    id: string | null
    reportId: string | null
    bodyPart: string | null
    condition: string | null
    notes: string | null
    createdAt: Date | null
  }

  export type BodyMapObservationCountAggregateOutputType = {
    id: number
    reportId: number
    bodyPart: number
    condition: number
    notes: number
    createdAt: number
    _all: number
  }


  export type BodyMapObservationMinAggregateInputType = {
    id?: true
    reportId?: true
    bodyPart?: true
    condition?: true
    notes?: true
    createdAt?: true
  }

  export type BodyMapObservationMaxAggregateInputType = {
    id?: true
    reportId?: true
    bodyPart?: true
    condition?: true
    notes?: true
    createdAt?: true
  }

  export type BodyMapObservationCountAggregateInputType = {
    id?: true
    reportId?: true
    bodyPart?: true
    condition?: true
    notes?: true
    createdAt?: true
    _all?: true
  }

  export type BodyMapObservationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BodyMapObservation to aggregate.
     */
    where?: BodyMapObservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BodyMapObservations to fetch.
     */
    orderBy?: BodyMapObservationOrderByWithRelationInput | BodyMapObservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BodyMapObservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BodyMapObservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BodyMapObservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BodyMapObservations
    **/
    _count?: true | BodyMapObservationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BodyMapObservationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BodyMapObservationMaxAggregateInputType
  }

  export type GetBodyMapObservationAggregateType<T extends BodyMapObservationAggregateArgs> = {
        [P in keyof T & keyof AggregateBodyMapObservation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBodyMapObservation[P]>
      : GetScalarType<T[P], AggregateBodyMapObservation[P]>
  }




  export type BodyMapObservationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BodyMapObservationWhereInput
    orderBy?: BodyMapObservationOrderByWithAggregationInput | BodyMapObservationOrderByWithAggregationInput[]
    by: BodyMapObservationScalarFieldEnum[] | BodyMapObservationScalarFieldEnum
    having?: BodyMapObservationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BodyMapObservationCountAggregateInputType | true
    _min?: BodyMapObservationMinAggregateInputType
    _max?: BodyMapObservationMaxAggregateInputType
  }

  export type BodyMapObservationGroupByOutputType = {
    id: string
    reportId: string
    bodyPart: string
    condition: string
    notes: string | null
    createdAt: Date
    _count: BodyMapObservationCountAggregateOutputType | null
    _min: BodyMapObservationMinAggregateOutputType | null
    _max: BodyMapObservationMaxAggregateOutputType | null
  }

  type GetBodyMapObservationGroupByPayload<T extends BodyMapObservationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BodyMapObservationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BodyMapObservationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BodyMapObservationGroupByOutputType[P]>
            : GetScalarType<T[P], BodyMapObservationGroupByOutputType[P]>
        }
      >
    >


  export type BodyMapObservationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reportId?: boolean
    bodyPart?: boolean
    condition?: boolean
    notes?: boolean
    createdAt?: boolean
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bodyMapObservation"]>

  export type BodyMapObservationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reportId?: boolean
    bodyPart?: boolean
    condition?: boolean
    notes?: boolean
    createdAt?: boolean
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bodyMapObservation"]>

  export type BodyMapObservationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reportId?: boolean
    bodyPart?: boolean
    condition?: boolean
    notes?: boolean
    createdAt?: boolean
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bodyMapObservation"]>

  export type BodyMapObservationSelectScalar = {
    id?: boolean
    reportId?: boolean
    bodyPart?: boolean
    condition?: boolean
    notes?: boolean
    createdAt?: boolean
  }

  export type BodyMapObservationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "reportId" | "bodyPart" | "condition" | "notes" | "createdAt", ExtArgs["result"]["bodyMapObservation"]>
  export type BodyMapObservationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }
  export type BodyMapObservationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }
  export type BodyMapObservationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    report?: boolean | ReportDefaultArgs<ExtArgs>
  }

  export type $BodyMapObservationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BodyMapObservation"
    objects: {
      report: Prisma.$ReportPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      reportId: string
      bodyPart: string
      condition: string
      notes: string | null
      createdAt: Date
    }, ExtArgs["result"]["bodyMapObservation"]>
    composites: {}
  }

  type BodyMapObservationGetPayload<S extends boolean | null | undefined | BodyMapObservationDefaultArgs> = $Result.GetResult<Prisma.$BodyMapObservationPayload, S>

  type BodyMapObservationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BodyMapObservationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BodyMapObservationCountAggregateInputType | true
    }

  export interface BodyMapObservationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BodyMapObservation'], meta: { name: 'BodyMapObservation' } }
    /**
     * Find zero or one BodyMapObservation that matches the filter.
     * @param {BodyMapObservationFindUniqueArgs} args - Arguments to find a BodyMapObservation
     * @example
     * // Get one BodyMapObservation
     * const bodyMapObservation = await prisma.bodyMapObservation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BodyMapObservationFindUniqueArgs>(args: SelectSubset<T, BodyMapObservationFindUniqueArgs<ExtArgs>>): Prisma__BodyMapObservationClient<$Result.GetResult<Prisma.$BodyMapObservationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BodyMapObservation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BodyMapObservationFindUniqueOrThrowArgs} args - Arguments to find a BodyMapObservation
     * @example
     * // Get one BodyMapObservation
     * const bodyMapObservation = await prisma.bodyMapObservation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BodyMapObservationFindUniqueOrThrowArgs>(args: SelectSubset<T, BodyMapObservationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BodyMapObservationClient<$Result.GetResult<Prisma.$BodyMapObservationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BodyMapObservation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyMapObservationFindFirstArgs} args - Arguments to find a BodyMapObservation
     * @example
     * // Get one BodyMapObservation
     * const bodyMapObservation = await prisma.bodyMapObservation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BodyMapObservationFindFirstArgs>(args?: SelectSubset<T, BodyMapObservationFindFirstArgs<ExtArgs>>): Prisma__BodyMapObservationClient<$Result.GetResult<Prisma.$BodyMapObservationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BodyMapObservation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyMapObservationFindFirstOrThrowArgs} args - Arguments to find a BodyMapObservation
     * @example
     * // Get one BodyMapObservation
     * const bodyMapObservation = await prisma.bodyMapObservation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BodyMapObservationFindFirstOrThrowArgs>(args?: SelectSubset<T, BodyMapObservationFindFirstOrThrowArgs<ExtArgs>>): Prisma__BodyMapObservationClient<$Result.GetResult<Prisma.$BodyMapObservationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BodyMapObservations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyMapObservationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BodyMapObservations
     * const bodyMapObservations = await prisma.bodyMapObservation.findMany()
     * 
     * // Get first 10 BodyMapObservations
     * const bodyMapObservations = await prisma.bodyMapObservation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bodyMapObservationWithIdOnly = await prisma.bodyMapObservation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BodyMapObservationFindManyArgs>(args?: SelectSubset<T, BodyMapObservationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BodyMapObservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BodyMapObservation.
     * @param {BodyMapObservationCreateArgs} args - Arguments to create a BodyMapObservation.
     * @example
     * // Create one BodyMapObservation
     * const BodyMapObservation = await prisma.bodyMapObservation.create({
     *   data: {
     *     // ... data to create a BodyMapObservation
     *   }
     * })
     * 
     */
    create<T extends BodyMapObservationCreateArgs>(args: SelectSubset<T, BodyMapObservationCreateArgs<ExtArgs>>): Prisma__BodyMapObservationClient<$Result.GetResult<Prisma.$BodyMapObservationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BodyMapObservations.
     * @param {BodyMapObservationCreateManyArgs} args - Arguments to create many BodyMapObservations.
     * @example
     * // Create many BodyMapObservations
     * const bodyMapObservation = await prisma.bodyMapObservation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BodyMapObservationCreateManyArgs>(args?: SelectSubset<T, BodyMapObservationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BodyMapObservations and returns the data saved in the database.
     * @param {BodyMapObservationCreateManyAndReturnArgs} args - Arguments to create many BodyMapObservations.
     * @example
     * // Create many BodyMapObservations
     * const bodyMapObservation = await prisma.bodyMapObservation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BodyMapObservations and only return the `id`
     * const bodyMapObservationWithIdOnly = await prisma.bodyMapObservation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BodyMapObservationCreateManyAndReturnArgs>(args?: SelectSubset<T, BodyMapObservationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BodyMapObservationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BodyMapObservation.
     * @param {BodyMapObservationDeleteArgs} args - Arguments to delete one BodyMapObservation.
     * @example
     * // Delete one BodyMapObservation
     * const BodyMapObservation = await prisma.bodyMapObservation.delete({
     *   where: {
     *     // ... filter to delete one BodyMapObservation
     *   }
     * })
     * 
     */
    delete<T extends BodyMapObservationDeleteArgs>(args: SelectSubset<T, BodyMapObservationDeleteArgs<ExtArgs>>): Prisma__BodyMapObservationClient<$Result.GetResult<Prisma.$BodyMapObservationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BodyMapObservation.
     * @param {BodyMapObservationUpdateArgs} args - Arguments to update one BodyMapObservation.
     * @example
     * // Update one BodyMapObservation
     * const bodyMapObservation = await prisma.bodyMapObservation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BodyMapObservationUpdateArgs>(args: SelectSubset<T, BodyMapObservationUpdateArgs<ExtArgs>>): Prisma__BodyMapObservationClient<$Result.GetResult<Prisma.$BodyMapObservationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BodyMapObservations.
     * @param {BodyMapObservationDeleteManyArgs} args - Arguments to filter BodyMapObservations to delete.
     * @example
     * // Delete a few BodyMapObservations
     * const { count } = await prisma.bodyMapObservation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BodyMapObservationDeleteManyArgs>(args?: SelectSubset<T, BodyMapObservationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BodyMapObservations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyMapObservationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BodyMapObservations
     * const bodyMapObservation = await prisma.bodyMapObservation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BodyMapObservationUpdateManyArgs>(args: SelectSubset<T, BodyMapObservationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BodyMapObservations and returns the data updated in the database.
     * @param {BodyMapObservationUpdateManyAndReturnArgs} args - Arguments to update many BodyMapObservations.
     * @example
     * // Update many BodyMapObservations
     * const bodyMapObservation = await prisma.bodyMapObservation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BodyMapObservations and only return the `id`
     * const bodyMapObservationWithIdOnly = await prisma.bodyMapObservation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BodyMapObservationUpdateManyAndReturnArgs>(args: SelectSubset<T, BodyMapObservationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BodyMapObservationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BodyMapObservation.
     * @param {BodyMapObservationUpsertArgs} args - Arguments to update or create a BodyMapObservation.
     * @example
     * // Update or create a BodyMapObservation
     * const bodyMapObservation = await prisma.bodyMapObservation.upsert({
     *   create: {
     *     // ... data to create a BodyMapObservation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BodyMapObservation we want to update
     *   }
     * })
     */
    upsert<T extends BodyMapObservationUpsertArgs>(args: SelectSubset<T, BodyMapObservationUpsertArgs<ExtArgs>>): Prisma__BodyMapObservationClient<$Result.GetResult<Prisma.$BodyMapObservationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BodyMapObservations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyMapObservationCountArgs} args - Arguments to filter BodyMapObservations to count.
     * @example
     * // Count the number of BodyMapObservations
     * const count = await prisma.bodyMapObservation.count({
     *   where: {
     *     // ... the filter for the BodyMapObservations we want to count
     *   }
     * })
    **/
    count<T extends BodyMapObservationCountArgs>(
      args?: Subset<T, BodyMapObservationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BodyMapObservationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BodyMapObservation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyMapObservationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BodyMapObservationAggregateArgs>(args: Subset<T, BodyMapObservationAggregateArgs>): Prisma.PrismaPromise<GetBodyMapObservationAggregateType<T>>

    /**
     * Group by BodyMapObservation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BodyMapObservationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BodyMapObservationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BodyMapObservationGroupByArgs['orderBy'] }
        : { orderBy?: BodyMapObservationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BodyMapObservationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBodyMapObservationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BodyMapObservation model
   */
  readonly fields: BodyMapObservationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BodyMapObservation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BodyMapObservationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    report<T extends ReportDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReportDefaultArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BodyMapObservation model
   */ 
  interface BodyMapObservationFieldRefs {
    readonly id: FieldRef<"BodyMapObservation", 'String'>
    readonly reportId: FieldRef<"BodyMapObservation", 'String'>
    readonly bodyPart: FieldRef<"BodyMapObservation", 'String'>
    readonly condition: FieldRef<"BodyMapObservation", 'String'>
    readonly notes: FieldRef<"BodyMapObservation", 'String'>
    readonly createdAt: FieldRef<"BodyMapObservation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BodyMapObservation findUnique
   */
  export type BodyMapObservationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BodyMapObservation
     */
    select?: BodyMapObservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BodyMapObservation
     */
    omit?: BodyMapObservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BodyMapObservationInclude<ExtArgs> | null
    /**
     * Filter, which BodyMapObservation to fetch.
     */
    where: BodyMapObservationWhereUniqueInput
  }

  /**
   * BodyMapObservation findUniqueOrThrow
   */
  export type BodyMapObservationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BodyMapObservation
     */
    select?: BodyMapObservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BodyMapObservation
     */
    omit?: BodyMapObservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BodyMapObservationInclude<ExtArgs> | null
    /**
     * Filter, which BodyMapObservation to fetch.
     */
    where: BodyMapObservationWhereUniqueInput
  }

  /**
   * BodyMapObservation findFirst
   */
  export type BodyMapObservationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BodyMapObservation
     */
    select?: BodyMapObservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BodyMapObservation
     */
    omit?: BodyMapObservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BodyMapObservationInclude<ExtArgs> | null
    /**
     * Filter, which BodyMapObservation to fetch.
     */
    where?: BodyMapObservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BodyMapObservations to fetch.
     */
    orderBy?: BodyMapObservationOrderByWithRelationInput | BodyMapObservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BodyMapObservations.
     */
    cursor?: BodyMapObservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BodyMapObservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BodyMapObservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BodyMapObservations.
     */
    distinct?: BodyMapObservationScalarFieldEnum | BodyMapObservationScalarFieldEnum[]
  }

  /**
   * BodyMapObservation findFirstOrThrow
   */
  export type BodyMapObservationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BodyMapObservation
     */
    select?: BodyMapObservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BodyMapObservation
     */
    omit?: BodyMapObservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BodyMapObservationInclude<ExtArgs> | null
    /**
     * Filter, which BodyMapObservation to fetch.
     */
    where?: BodyMapObservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BodyMapObservations to fetch.
     */
    orderBy?: BodyMapObservationOrderByWithRelationInput | BodyMapObservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BodyMapObservations.
     */
    cursor?: BodyMapObservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BodyMapObservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BodyMapObservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BodyMapObservations.
     */
    distinct?: BodyMapObservationScalarFieldEnum | BodyMapObservationScalarFieldEnum[]
  }

  /**
   * BodyMapObservation findMany
   */
  export type BodyMapObservationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BodyMapObservation
     */
    select?: BodyMapObservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BodyMapObservation
     */
    omit?: BodyMapObservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BodyMapObservationInclude<ExtArgs> | null
    /**
     * Filter, which BodyMapObservations to fetch.
     */
    where?: BodyMapObservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BodyMapObservations to fetch.
     */
    orderBy?: BodyMapObservationOrderByWithRelationInput | BodyMapObservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BodyMapObservations.
     */
    cursor?: BodyMapObservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BodyMapObservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BodyMapObservations.
     */
    skip?: number
    distinct?: BodyMapObservationScalarFieldEnum | BodyMapObservationScalarFieldEnum[]
  }

  /**
   * BodyMapObservation create
   */
  export type BodyMapObservationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BodyMapObservation
     */
    select?: BodyMapObservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BodyMapObservation
     */
    omit?: BodyMapObservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BodyMapObservationInclude<ExtArgs> | null
    /**
     * The data needed to create a BodyMapObservation.
     */
    data: XOR<BodyMapObservationCreateInput, BodyMapObservationUncheckedCreateInput>
  }

  /**
   * BodyMapObservation createMany
   */
  export type BodyMapObservationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BodyMapObservations.
     */
    data: BodyMapObservationCreateManyInput | BodyMapObservationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BodyMapObservation createManyAndReturn
   */
  export type BodyMapObservationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BodyMapObservation
     */
    select?: BodyMapObservationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BodyMapObservation
     */
    omit?: BodyMapObservationOmit<ExtArgs> | null
    /**
     * The data used to create many BodyMapObservations.
     */
    data: BodyMapObservationCreateManyInput | BodyMapObservationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BodyMapObservationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BodyMapObservation update
   */
  export type BodyMapObservationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BodyMapObservation
     */
    select?: BodyMapObservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BodyMapObservation
     */
    omit?: BodyMapObservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BodyMapObservationInclude<ExtArgs> | null
    /**
     * The data needed to update a BodyMapObservation.
     */
    data: XOR<BodyMapObservationUpdateInput, BodyMapObservationUncheckedUpdateInput>
    /**
     * Choose, which BodyMapObservation to update.
     */
    where: BodyMapObservationWhereUniqueInput
  }

  /**
   * BodyMapObservation updateMany
   */
  export type BodyMapObservationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BodyMapObservations.
     */
    data: XOR<BodyMapObservationUpdateManyMutationInput, BodyMapObservationUncheckedUpdateManyInput>
    /**
     * Filter which BodyMapObservations to update
     */
    where?: BodyMapObservationWhereInput
    /**
     * Limit how many BodyMapObservations to update.
     */
    limit?: number
  }

  /**
   * BodyMapObservation updateManyAndReturn
   */
  export type BodyMapObservationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BodyMapObservation
     */
    select?: BodyMapObservationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BodyMapObservation
     */
    omit?: BodyMapObservationOmit<ExtArgs> | null
    /**
     * The data used to update BodyMapObservations.
     */
    data: XOR<BodyMapObservationUpdateManyMutationInput, BodyMapObservationUncheckedUpdateManyInput>
    /**
     * Filter which BodyMapObservations to update
     */
    where?: BodyMapObservationWhereInput
    /**
     * Limit how many BodyMapObservations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BodyMapObservationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BodyMapObservation upsert
   */
  export type BodyMapObservationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BodyMapObservation
     */
    select?: BodyMapObservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BodyMapObservation
     */
    omit?: BodyMapObservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BodyMapObservationInclude<ExtArgs> | null
    /**
     * The filter to search for the BodyMapObservation to update in case it exists.
     */
    where: BodyMapObservationWhereUniqueInput
    /**
     * In case the BodyMapObservation found by the `where` argument doesn't exist, create a new BodyMapObservation with this data.
     */
    create: XOR<BodyMapObservationCreateInput, BodyMapObservationUncheckedCreateInput>
    /**
     * In case the BodyMapObservation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BodyMapObservationUpdateInput, BodyMapObservationUncheckedUpdateInput>
  }

  /**
   * BodyMapObservation delete
   */
  export type BodyMapObservationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BodyMapObservation
     */
    select?: BodyMapObservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BodyMapObservation
     */
    omit?: BodyMapObservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BodyMapObservationInclude<ExtArgs> | null
    /**
     * Filter which BodyMapObservation to delete.
     */
    where: BodyMapObservationWhereUniqueInput
  }

  /**
   * BodyMapObservation deleteMany
   */
  export type BodyMapObservationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BodyMapObservations to delete
     */
    where?: BodyMapObservationWhereInput
    /**
     * Limit how many BodyMapObservations to delete.
     */
    limit?: number
  }

  /**
   * BodyMapObservation without action
   */
  export type BodyMapObservationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BodyMapObservation
     */
    select?: BodyMapObservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BodyMapObservation
     */
    omit?: BodyMapObservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BodyMapObservationInclude<ExtArgs> | null
  }


  /**
   * Model ReportEdit
   */

  export type AggregateReportEdit = {
    _count: ReportEditCountAggregateOutputType | null
    _min: ReportEditMinAggregateOutputType | null
    _max: ReportEditMaxAggregateOutputType | null
  }

  export type ReportEditMinAggregateOutputType = {
    id: string | null
    reportId: string | null
    editedBy: string | null
    editedAt: Date | null
    reason: string | null
    changesJson: string | null
  }

  export type ReportEditMaxAggregateOutputType = {
    id: string | null
    reportId: string | null
    editedBy: string | null
    editedAt: Date | null
    reason: string | null
    changesJson: string | null
  }

  export type ReportEditCountAggregateOutputType = {
    id: number
    reportId: number
    editedBy: number
    editedAt: number
    reason: number
    changesJson: number
    _all: number
  }


  export type ReportEditMinAggregateInputType = {
    id?: true
    reportId?: true
    editedBy?: true
    editedAt?: true
    reason?: true
    changesJson?: true
  }

  export type ReportEditMaxAggregateInputType = {
    id?: true
    reportId?: true
    editedBy?: true
    editedAt?: true
    reason?: true
    changesJson?: true
  }

  export type ReportEditCountAggregateInputType = {
    id?: true
    reportId?: true
    editedBy?: true
    editedAt?: true
    reason?: true
    changesJson?: true
    _all?: true
  }

  export type ReportEditAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReportEdit to aggregate.
     */
    where?: ReportEditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReportEdits to fetch.
     */
    orderBy?: ReportEditOrderByWithRelationInput | ReportEditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReportEditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReportEdits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReportEdits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReportEdits
    **/
    _count?: true | ReportEditCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReportEditMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReportEditMaxAggregateInputType
  }

  export type GetReportEditAggregateType<T extends ReportEditAggregateArgs> = {
        [P in keyof T & keyof AggregateReportEdit]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReportEdit[P]>
      : GetScalarType<T[P], AggregateReportEdit[P]>
  }




  export type ReportEditGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportEditWhereInput
    orderBy?: ReportEditOrderByWithAggregationInput | ReportEditOrderByWithAggregationInput[]
    by: ReportEditScalarFieldEnum[] | ReportEditScalarFieldEnum
    having?: ReportEditScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReportEditCountAggregateInputType | true
    _min?: ReportEditMinAggregateInputType
    _max?: ReportEditMaxAggregateInputType
  }

  export type ReportEditGroupByOutputType = {
    id: string
    reportId: string
    editedBy: string
    editedAt: Date
    reason: string
    changesJson: string
    _count: ReportEditCountAggregateOutputType | null
    _min: ReportEditMinAggregateOutputType | null
    _max: ReportEditMaxAggregateOutputType | null
  }

  type GetReportEditGroupByPayload<T extends ReportEditGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReportEditGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReportEditGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReportEditGroupByOutputType[P]>
            : GetScalarType<T[P], ReportEditGroupByOutputType[P]>
        }
      >
    >


  export type ReportEditSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reportId?: boolean
    editedBy?: boolean
    editedAt?: boolean
    reason?: boolean
    changesJson?: boolean
    report?: boolean | ReportDefaultArgs<ExtArgs>
    editor?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reportEdit"]>

  export type ReportEditSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reportId?: boolean
    editedBy?: boolean
    editedAt?: boolean
    reason?: boolean
    changesJson?: boolean
    report?: boolean | ReportDefaultArgs<ExtArgs>
    editor?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reportEdit"]>

  export type ReportEditSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reportId?: boolean
    editedBy?: boolean
    editedAt?: boolean
    reason?: boolean
    changesJson?: boolean
    report?: boolean | ReportDefaultArgs<ExtArgs>
    editor?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reportEdit"]>

  export type ReportEditSelectScalar = {
    id?: boolean
    reportId?: boolean
    editedBy?: boolean
    editedAt?: boolean
    reason?: boolean
    changesJson?: boolean
  }

  export type ReportEditOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "reportId" | "editedBy" | "editedAt" | "reason" | "changesJson", ExtArgs["result"]["reportEdit"]>
  export type ReportEditInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    report?: boolean | ReportDefaultArgs<ExtArgs>
    editor?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ReportEditIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    report?: boolean | ReportDefaultArgs<ExtArgs>
    editor?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ReportEditIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    report?: boolean | ReportDefaultArgs<ExtArgs>
    editor?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ReportEditPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReportEdit"
    objects: {
      report: Prisma.$ReportPayload<ExtArgs>
      editor: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      reportId: string
      editedBy: string
      editedAt: Date
      reason: string
      changesJson: string
    }, ExtArgs["result"]["reportEdit"]>
    composites: {}
  }

  type ReportEditGetPayload<S extends boolean | null | undefined | ReportEditDefaultArgs> = $Result.GetResult<Prisma.$ReportEditPayload, S>

  type ReportEditCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReportEditFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReportEditCountAggregateInputType | true
    }

  export interface ReportEditDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReportEdit'], meta: { name: 'ReportEdit' } }
    /**
     * Find zero or one ReportEdit that matches the filter.
     * @param {ReportEditFindUniqueArgs} args - Arguments to find a ReportEdit
     * @example
     * // Get one ReportEdit
     * const reportEdit = await prisma.reportEdit.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReportEditFindUniqueArgs>(args: SelectSubset<T, ReportEditFindUniqueArgs<ExtArgs>>): Prisma__ReportEditClient<$Result.GetResult<Prisma.$ReportEditPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReportEdit that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReportEditFindUniqueOrThrowArgs} args - Arguments to find a ReportEdit
     * @example
     * // Get one ReportEdit
     * const reportEdit = await prisma.reportEdit.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReportEditFindUniqueOrThrowArgs>(args: SelectSubset<T, ReportEditFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReportEditClient<$Result.GetResult<Prisma.$ReportEditPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReportEdit that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportEditFindFirstArgs} args - Arguments to find a ReportEdit
     * @example
     * // Get one ReportEdit
     * const reportEdit = await prisma.reportEdit.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReportEditFindFirstArgs>(args?: SelectSubset<T, ReportEditFindFirstArgs<ExtArgs>>): Prisma__ReportEditClient<$Result.GetResult<Prisma.$ReportEditPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReportEdit that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportEditFindFirstOrThrowArgs} args - Arguments to find a ReportEdit
     * @example
     * // Get one ReportEdit
     * const reportEdit = await prisma.reportEdit.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReportEditFindFirstOrThrowArgs>(args?: SelectSubset<T, ReportEditFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReportEditClient<$Result.GetResult<Prisma.$ReportEditPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReportEdits that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportEditFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReportEdits
     * const reportEdits = await prisma.reportEdit.findMany()
     * 
     * // Get first 10 ReportEdits
     * const reportEdits = await prisma.reportEdit.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reportEditWithIdOnly = await prisma.reportEdit.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReportEditFindManyArgs>(args?: SelectSubset<T, ReportEditFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportEditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReportEdit.
     * @param {ReportEditCreateArgs} args - Arguments to create a ReportEdit.
     * @example
     * // Create one ReportEdit
     * const ReportEdit = await prisma.reportEdit.create({
     *   data: {
     *     // ... data to create a ReportEdit
     *   }
     * })
     * 
     */
    create<T extends ReportEditCreateArgs>(args: SelectSubset<T, ReportEditCreateArgs<ExtArgs>>): Prisma__ReportEditClient<$Result.GetResult<Prisma.$ReportEditPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReportEdits.
     * @param {ReportEditCreateManyArgs} args - Arguments to create many ReportEdits.
     * @example
     * // Create many ReportEdits
     * const reportEdit = await prisma.reportEdit.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReportEditCreateManyArgs>(args?: SelectSubset<T, ReportEditCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ReportEdits and returns the data saved in the database.
     * @param {ReportEditCreateManyAndReturnArgs} args - Arguments to create many ReportEdits.
     * @example
     * // Create many ReportEdits
     * const reportEdit = await prisma.reportEdit.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ReportEdits and only return the `id`
     * const reportEditWithIdOnly = await prisma.reportEdit.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReportEditCreateManyAndReturnArgs>(args?: SelectSubset<T, ReportEditCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportEditPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ReportEdit.
     * @param {ReportEditDeleteArgs} args - Arguments to delete one ReportEdit.
     * @example
     * // Delete one ReportEdit
     * const ReportEdit = await prisma.reportEdit.delete({
     *   where: {
     *     // ... filter to delete one ReportEdit
     *   }
     * })
     * 
     */
    delete<T extends ReportEditDeleteArgs>(args: SelectSubset<T, ReportEditDeleteArgs<ExtArgs>>): Prisma__ReportEditClient<$Result.GetResult<Prisma.$ReportEditPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReportEdit.
     * @param {ReportEditUpdateArgs} args - Arguments to update one ReportEdit.
     * @example
     * // Update one ReportEdit
     * const reportEdit = await prisma.reportEdit.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReportEditUpdateArgs>(args: SelectSubset<T, ReportEditUpdateArgs<ExtArgs>>): Prisma__ReportEditClient<$Result.GetResult<Prisma.$ReportEditPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReportEdits.
     * @param {ReportEditDeleteManyArgs} args - Arguments to filter ReportEdits to delete.
     * @example
     * // Delete a few ReportEdits
     * const { count } = await prisma.reportEdit.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReportEditDeleteManyArgs>(args?: SelectSubset<T, ReportEditDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReportEdits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportEditUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReportEdits
     * const reportEdit = await prisma.reportEdit.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReportEditUpdateManyArgs>(args: SelectSubset<T, ReportEditUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReportEdits and returns the data updated in the database.
     * @param {ReportEditUpdateManyAndReturnArgs} args - Arguments to update many ReportEdits.
     * @example
     * // Update many ReportEdits
     * const reportEdit = await prisma.reportEdit.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ReportEdits and only return the `id`
     * const reportEditWithIdOnly = await prisma.reportEdit.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReportEditUpdateManyAndReturnArgs>(args: SelectSubset<T, ReportEditUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportEditPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ReportEdit.
     * @param {ReportEditUpsertArgs} args - Arguments to update or create a ReportEdit.
     * @example
     * // Update or create a ReportEdit
     * const reportEdit = await prisma.reportEdit.upsert({
     *   create: {
     *     // ... data to create a ReportEdit
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReportEdit we want to update
     *   }
     * })
     */
    upsert<T extends ReportEditUpsertArgs>(args: SelectSubset<T, ReportEditUpsertArgs<ExtArgs>>): Prisma__ReportEditClient<$Result.GetResult<Prisma.$ReportEditPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReportEdits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportEditCountArgs} args - Arguments to filter ReportEdits to count.
     * @example
     * // Count the number of ReportEdits
     * const count = await prisma.reportEdit.count({
     *   where: {
     *     // ... the filter for the ReportEdits we want to count
     *   }
     * })
    **/
    count<T extends ReportEditCountArgs>(
      args?: Subset<T, ReportEditCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReportEditCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReportEdit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportEditAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReportEditAggregateArgs>(args: Subset<T, ReportEditAggregateArgs>): Prisma.PrismaPromise<GetReportEditAggregateType<T>>

    /**
     * Group by ReportEdit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportEditGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReportEditGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReportEditGroupByArgs['orderBy'] }
        : { orderBy?: ReportEditGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReportEditGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportEditGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReportEdit model
   */
  readonly fields: ReportEditFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReportEdit.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReportEditClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    report<T extends ReportDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReportDefaultArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    editor<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReportEdit model
   */ 
  interface ReportEditFieldRefs {
    readonly id: FieldRef<"ReportEdit", 'String'>
    readonly reportId: FieldRef<"ReportEdit", 'String'>
    readonly editedBy: FieldRef<"ReportEdit", 'String'>
    readonly editedAt: FieldRef<"ReportEdit", 'DateTime'>
    readonly reason: FieldRef<"ReportEdit", 'String'>
    readonly changesJson: FieldRef<"ReportEdit", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ReportEdit findUnique
   */
  export type ReportEditFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportEdit
     */
    select?: ReportEditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportEdit
     */
    omit?: ReportEditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportEditInclude<ExtArgs> | null
    /**
     * Filter, which ReportEdit to fetch.
     */
    where: ReportEditWhereUniqueInput
  }

  /**
   * ReportEdit findUniqueOrThrow
   */
  export type ReportEditFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportEdit
     */
    select?: ReportEditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportEdit
     */
    omit?: ReportEditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportEditInclude<ExtArgs> | null
    /**
     * Filter, which ReportEdit to fetch.
     */
    where: ReportEditWhereUniqueInput
  }

  /**
   * ReportEdit findFirst
   */
  export type ReportEditFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportEdit
     */
    select?: ReportEditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportEdit
     */
    omit?: ReportEditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportEditInclude<ExtArgs> | null
    /**
     * Filter, which ReportEdit to fetch.
     */
    where?: ReportEditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReportEdits to fetch.
     */
    orderBy?: ReportEditOrderByWithRelationInput | ReportEditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReportEdits.
     */
    cursor?: ReportEditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReportEdits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReportEdits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReportEdits.
     */
    distinct?: ReportEditScalarFieldEnum | ReportEditScalarFieldEnum[]
  }

  /**
   * ReportEdit findFirstOrThrow
   */
  export type ReportEditFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportEdit
     */
    select?: ReportEditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportEdit
     */
    omit?: ReportEditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportEditInclude<ExtArgs> | null
    /**
     * Filter, which ReportEdit to fetch.
     */
    where?: ReportEditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReportEdits to fetch.
     */
    orderBy?: ReportEditOrderByWithRelationInput | ReportEditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReportEdits.
     */
    cursor?: ReportEditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReportEdits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReportEdits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReportEdits.
     */
    distinct?: ReportEditScalarFieldEnum | ReportEditScalarFieldEnum[]
  }

  /**
   * ReportEdit findMany
   */
  export type ReportEditFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportEdit
     */
    select?: ReportEditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportEdit
     */
    omit?: ReportEditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportEditInclude<ExtArgs> | null
    /**
     * Filter, which ReportEdits to fetch.
     */
    where?: ReportEditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReportEdits to fetch.
     */
    orderBy?: ReportEditOrderByWithRelationInput | ReportEditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReportEdits.
     */
    cursor?: ReportEditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReportEdits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReportEdits.
     */
    skip?: number
    distinct?: ReportEditScalarFieldEnum | ReportEditScalarFieldEnum[]
  }

  /**
   * ReportEdit create
   */
  export type ReportEditCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportEdit
     */
    select?: ReportEditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportEdit
     */
    omit?: ReportEditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportEditInclude<ExtArgs> | null
    /**
     * The data needed to create a ReportEdit.
     */
    data: XOR<ReportEditCreateInput, ReportEditUncheckedCreateInput>
  }

  /**
   * ReportEdit createMany
   */
  export type ReportEditCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReportEdits.
     */
    data: ReportEditCreateManyInput | ReportEditCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReportEdit createManyAndReturn
   */
  export type ReportEditCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportEdit
     */
    select?: ReportEditSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReportEdit
     */
    omit?: ReportEditOmit<ExtArgs> | null
    /**
     * The data used to create many ReportEdits.
     */
    data: ReportEditCreateManyInput | ReportEditCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportEditIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReportEdit update
   */
  export type ReportEditUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportEdit
     */
    select?: ReportEditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportEdit
     */
    omit?: ReportEditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportEditInclude<ExtArgs> | null
    /**
     * The data needed to update a ReportEdit.
     */
    data: XOR<ReportEditUpdateInput, ReportEditUncheckedUpdateInput>
    /**
     * Choose, which ReportEdit to update.
     */
    where: ReportEditWhereUniqueInput
  }

  /**
   * ReportEdit updateMany
   */
  export type ReportEditUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReportEdits.
     */
    data: XOR<ReportEditUpdateManyMutationInput, ReportEditUncheckedUpdateManyInput>
    /**
     * Filter which ReportEdits to update
     */
    where?: ReportEditWhereInput
    /**
     * Limit how many ReportEdits to update.
     */
    limit?: number
  }

  /**
   * ReportEdit updateManyAndReturn
   */
  export type ReportEditUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportEdit
     */
    select?: ReportEditSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ReportEdit
     */
    omit?: ReportEditOmit<ExtArgs> | null
    /**
     * The data used to update ReportEdits.
     */
    data: XOR<ReportEditUpdateManyMutationInput, ReportEditUncheckedUpdateManyInput>
    /**
     * Filter which ReportEdits to update
     */
    where?: ReportEditWhereInput
    /**
     * Limit how many ReportEdits to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportEditIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ReportEdit upsert
   */
  export type ReportEditUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportEdit
     */
    select?: ReportEditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportEdit
     */
    omit?: ReportEditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportEditInclude<ExtArgs> | null
    /**
     * The filter to search for the ReportEdit to update in case it exists.
     */
    where: ReportEditWhereUniqueInput
    /**
     * In case the ReportEdit found by the `where` argument doesn't exist, create a new ReportEdit with this data.
     */
    create: XOR<ReportEditCreateInput, ReportEditUncheckedCreateInput>
    /**
     * In case the ReportEdit was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReportEditUpdateInput, ReportEditUncheckedUpdateInput>
  }

  /**
   * ReportEdit delete
   */
  export type ReportEditDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportEdit
     */
    select?: ReportEditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportEdit
     */
    omit?: ReportEditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportEditInclude<ExtArgs> | null
    /**
     * Filter which ReportEdit to delete.
     */
    where: ReportEditWhereUniqueInput
  }

  /**
   * ReportEdit deleteMany
   */
  export type ReportEditDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReportEdits to delete
     */
    where?: ReportEditWhereInput
    /**
     * Limit how many ReportEdits to delete.
     */
    limit?: number
  }

  /**
   * ReportEdit without action
   */
  export type ReportEditDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportEdit
     */
    select?: ReportEditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReportEdit
     */
    omit?: ReportEditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportEditInclude<ExtArgs> | null
  }


  /**
   * Model MedicationRecord
   */

  export type AggregateMedicationRecord = {
    _count: MedicationRecordCountAggregateOutputType | null
    _min: MedicationRecordMinAggregateOutputType | null
    _max: MedicationRecordMaxAggregateOutputType | null
  }

  export type MedicationRecordMinAggregateOutputType = {
    id: string | null
    medicationId: string | null
    clientId: string | null
    userId: string | null
    dosage: string | null
    frequency: string | null
    startDate: Date | null
    endDate: Date | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    morningDose: boolean | null
    lunchDose: boolean | null
    eveningDose: boolean | null
    bedtimeDose: boolean | null
    asNeededDose: boolean | null
  }

  export type MedicationRecordMaxAggregateOutputType = {
    id: string | null
    medicationId: string | null
    clientId: string | null
    userId: string | null
    dosage: string | null
    frequency: string | null
    startDate: Date | null
    endDate: Date | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    morningDose: boolean | null
    lunchDose: boolean | null
    eveningDose: boolean | null
    bedtimeDose: boolean | null
    asNeededDose: boolean | null
  }

  export type MedicationRecordCountAggregateOutputType = {
    id: number
    medicationId: number
    clientId: number
    userId: number
    dosage: number
    frequency: number
    startDate: number
    endDate: number
    notes: number
    createdAt: number
    updatedAt: number
    morningDose: number
    lunchDose: number
    eveningDose: number
    bedtimeDose: number
    asNeededDose: number
    _all: number
  }


  export type MedicationRecordMinAggregateInputType = {
    id?: true
    medicationId?: true
    clientId?: true
    userId?: true
    dosage?: true
    frequency?: true
    startDate?: true
    endDate?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    morningDose?: true
    lunchDose?: true
    eveningDose?: true
    bedtimeDose?: true
    asNeededDose?: true
  }

  export type MedicationRecordMaxAggregateInputType = {
    id?: true
    medicationId?: true
    clientId?: true
    userId?: true
    dosage?: true
    frequency?: true
    startDate?: true
    endDate?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    morningDose?: true
    lunchDose?: true
    eveningDose?: true
    bedtimeDose?: true
    asNeededDose?: true
  }

  export type MedicationRecordCountAggregateInputType = {
    id?: true
    medicationId?: true
    clientId?: true
    userId?: true
    dosage?: true
    frequency?: true
    startDate?: true
    endDate?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    morningDose?: true
    lunchDose?: true
    eveningDose?: true
    bedtimeDose?: true
    asNeededDose?: true
    _all?: true
  }

  export type MedicationRecordAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MedicationRecord to aggregate.
     */
    where?: MedicationRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MedicationRecords to fetch.
     */
    orderBy?: MedicationRecordOrderByWithRelationInput | MedicationRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MedicationRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MedicationRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MedicationRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MedicationRecords
    **/
    _count?: true | MedicationRecordCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MedicationRecordMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MedicationRecordMaxAggregateInputType
  }

  export type GetMedicationRecordAggregateType<T extends MedicationRecordAggregateArgs> = {
        [P in keyof T & keyof AggregateMedicationRecord]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMedicationRecord[P]>
      : GetScalarType<T[P], AggregateMedicationRecord[P]>
  }




  export type MedicationRecordGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MedicationRecordWhereInput
    orderBy?: MedicationRecordOrderByWithAggregationInput | MedicationRecordOrderByWithAggregationInput[]
    by: MedicationRecordScalarFieldEnum[] | MedicationRecordScalarFieldEnum
    having?: MedicationRecordScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MedicationRecordCountAggregateInputType | true
    _min?: MedicationRecordMinAggregateInputType
    _max?: MedicationRecordMaxAggregateInputType
  }

  export type MedicationRecordGroupByOutputType = {
    id: string
    medicationId: string
    clientId: string
    userId: string
    dosage: string
    frequency: string
    startDate: Date
    endDate: Date | null
    notes: string | null
    createdAt: Date
    updatedAt: Date
    morningDose: boolean
    lunchDose: boolean
    eveningDose: boolean
    bedtimeDose: boolean
    asNeededDose: boolean
    _count: MedicationRecordCountAggregateOutputType | null
    _min: MedicationRecordMinAggregateOutputType | null
    _max: MedicationRecordMaxAggregateOutputType | null
  }

  type GetMedicationRecordGroupByPayload<T extends MedicationRecordGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MedicationRecordGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MedicationRecordGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MedicationRecordGroupByOutputType[P]>
            : GetScalarType<T[P], MedicationRecordGroupByOutputType[P]>
        }
      >
    >


  export type MedicationRecordSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    medicationId?: boolean
    clientId?: boolean
    userId?: boolean
    dosage?: boolean
    frequency?: boolean
    startDate?: boolean
    endDate?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
    medication?: boolean | MedicationDatabaseLinkDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
    administrationRecords?: boolean | MedicationRecord$administrationRecordsArgs<ExtArgs>
    _count?: boolean | MedicationRecordCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["medicationRecord"]>

  export type MedicationRecordSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    medicationId?: boolean
    clientId?: boolean
    userId?: boolean
    dosage?: boolean
    frequency?: boolean
    startDate?: boolean
    endDate?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
    medication?: boolean | MedicationDatabaseLinkDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["medicationRecord"]>

  export type MedicationRecordSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    medicationId?: boolean
    clientId?: boolean
    userId?: boolean
    dosage?: boolean
    frequency?: boolean
    startDate?: boolean
    endDate?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
    medication?: boolean | MedicationDatabaseLinkDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["medicationRecord"]>

  export type MedicationRecordSelectScalar = {
    id?: boolean
    medicationId?: boolean
    clientId?: boolean
    userId?: boolean
    dosage?: boolean
    frequency?: boolean
    startDate?: boolean
    endDate?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
  }

  export type MedicationRecordOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "medicationId" | "clientId" | "userId" | "dosage" | "frequency" | "startDate" | "endDate" | "notes" | "createdAt" | "updatedAt" | "morningDose" | "lunchDose" | "eveningDose" | "bedtimeDose" | "asNeededDose", ExtArgs["result"]["medicationRecord"]>
  export type MedicationRecordInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    medication?: boolean | MedicationDatabaseLinkDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
    administrationRecords?: boolean | MedicationRecord$administrationRecordsArgs<ExtArgs>
    _count?: boolean | MedicationRecordCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MedicationRecordIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    medication?: boolean | MedicationDatabaseLinkDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MedicationRecordIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    medication?: boolean | MedicationDatabaseLinkDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MedicationRecordPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MedicationRecord"
    objects: {
      medication: Prisma.$MedicationDatabaseLinkPayload<ExtArgs>
      client: Prisma.$UserPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      User: Prisma.$UserPayload<ExtArgs>
      administrationRecords: Prisma.$MedicationAdministrationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      medicationId: string
      clientId: string
      userId: string
      dosage: string
      frequency: string
      startDate: Date
      endDate: Date | null
      notes: string | null
      createdAt: Date
      updatedAt: Date
      morningDose: boolean
      lunchDose: boolean
      eveningDose: boolean
      bedtimeDose: boolean
      asNeededDose: boolean
    }, ExtArgs["result"]["medicationRecord"]>
    composites: {}
  }

  type MedicationRecordGetPayload<S extends boolean | null | undefined | MedicationRecordDefaultArgs> = $Result.GetResult<Prisma.$MedicationRecordPayload, S>

  type MedicationRecordCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MedicationRecordFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MedicationRecordCountAggregateInputType | true
    }

  export interface MedicationRecordDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MedicationRecord'], meta: { name: 'MedicationRecord' } }
    /**
     * Find zero or one MedicationRecord that matches the filter.
     * @param {MedicationRecordFindUniqueArgs} args - Arguments to find a MedicationRecord
     * @example
     * // Get one MedicationRecord
     * const medicationRecord = await prisma.medicationRecord.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MedicationRecordFindUniqueArgs>(args: SelectSubset<T, MedicationRecordFindUniqueArgs<ExtArgs>>): Prisma__MedicationRecordClient<$Result.GetResult<Prisma.$MedicationRecordPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MedicationRecord that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MedicationRecordFindUniqueOrThrowArgs} args - Arguments to find a MedicationRecord
     * @example
     * // Get one MedicationRecord
     * const medicationRecord = await prisma.medicationRecord.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MedicationRecordFindUniqueOrThrowArgs>(args: SelectSubset<T, MedicationRecordFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MedicationRecordClient<$Result.GetResult<Prisma.$MedicationRecordPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MedicationRecord that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationRecordFindFirstArgs} args - Arguments to find a MedicationRecord
     * @example
     * // Get one MedicationRecord
     * const medicationRecord = await prisma.medicationRecord.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MedicationRecordFindFirstArgs>(args?: SelectSubset<T, MedicationRecordFindFirstArgs<ExtArgs>>): Prisma__MedicationRecordClient<$Result.GetResult<Prisma.$MedicationRecordPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MedicationRecord that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationRecordFindFirstOrThrowArgs} args - Arguments to find a MedicationRecord
     * @example
     * // Get one MedicationRecord
     * const medicationRecord = await prisma.medicationRecord.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MedicationRecordFindFirstOrThrowArgs>(args?: SelectSubset<T, MedicationRecordFindFirstOrThrowArgs<ExtArgs>>): Prisma__MedicationRecordClient<$Result.GetResult<Prisma.$MedicationRecordPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MedicationRecords that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationRecordFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MedicationRecords
     * const medicationRecords = await prisma.medicationRecord.findMany()
     * 
     * // Get first 10 MedicationRecords
     * const medicationRecords = await prisma.medicationRecord.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const medicationRecordWithIdOnly = await prisma.medicationRecord.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MedicationRecordFindManyArgs>(args?: SelectSubset<T, MedicationRecordFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MedicationRecord.
     * @param {MedicationRecordCreateArgs} args - Arguments to create a MedicationRecord.
     * @example
     * // Create one MedicationRecord
     * const MedicationRecord = await prisma.medicationRecord.create({
     *   data: {
     *     // ... data to create a MedicationRecord
     *   }
     * })
     * 
     */
    create<T extends MedicationRecordCreateArgs>(args: SelectSubset<T, MedicationRecordCreateArgs<ExtArgs>>): Prisma__MedicationRecordClient<$Result.GetResult<Prisma.$MedicationRecordPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MedicationRecords.
     * @param {MedicationRecordCreateManyArgs} args - Arguments to create many MedicationRecords.
     * @example
     * // Create many MedicationRecords
     * const medicationRecord = await prisma.medicationRecord.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MedicationRecordCreateManyArgs>(args?: SelectSubset<T, MedicationRecordCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MedicationRecords and returns the data saved in the database.
     * @param {MedicationRecordCreateManyAndReturnArgs} args - Arguments to create many MedicationRecords.
     * @example
     * // Create many MedicationRecords
     * const medicationRecord = await prisma.medicationRecord.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MedicationRecords and only return the `id`
     * const medicationRecordWithIdOnly = await prisma.medicationRecord.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MedicationRecordCreateManyAndReturnArgs>(args?: SelectSubset<T, MedicationRecordCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationRecordPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MedicationRecord.
     * @param {MedicationRecordDeleteArgs} args - Arguments to delete one MedicationRecord.
     * @example
     * // Delete one MedicationRecord
     * const MedicationRecord = await prisma.medicationRecord.delete({
     *   where: {
     *     // ... filter to delete one MedicationRecord
     *   }
     * })
     * 
     */
    delete<T extends MedicationRecordDeleteArgs>(args: SelectSubset<T, MedicationRecordDeleteArgs<ExtArgs>>): Prisma__MedicationRecordClient<$Result.GetResult<Prisma.$MedicationRecordPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MedicationRecord.
     * @param {MedicationRecordUpdateArgs} args - Arguments to update one MedicationRecord.
     * @example
     * // Update one MedicationRecord
     * const medicationRecord = await prisma.medicationRecord.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MedicationRecordUpdateArgs>(args: SelectSubset<T, MedicationRecordUpdateArgs<ExtArgs>>): Prisma__MedicationRecordClient<$Result.GetResult<Prisma.$MedicationRecordPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MedicationRecords.
     * @param {MedicationRecordDeleteManyArgs} args - Arguments to filter MedicationRecords to delete.
     * @example
     * // Delete a few MedicationRecords
     * const { count } = await prisma.medicationRecord.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MedicationRecordDeleteManyArgs>(args?: SelectSubset<T, MedicationRecordDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MedicationRecords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationRecordUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MedicationRecords
     * const medicationRecord = await prisma.medicationRecord.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MedicationRecordUpdateManyArgs>(args: SelectSubset<T, MedicationRecordUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MedicationRecords and returns the data updated in the database.
     * @param {MedicationRecordUpdateManyAndReturnArgs} args - Arguments to update many MedicationRecords.
     * @example
     * // Update many MedicationRecords
     * const medicationRecord = await prisma.medicationRecord.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MedicationRecords and only return the `id`
     * const medicationRecordWithIdOnly = await prisma.medicationRecord.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MedicationRecordUpdateManyAndReturnArgs>(args: SelectSubset<T, MedicationRecordUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationRecordPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MedicationRecord.
     * @param {MedicationRecordUpsertArgs} args - Arguments to update or create a MedicationRecord.
     * @example
     * // Update or create a MedicationRecord
     * const medicationRecord = await prisma.medicationRecord.upsert({
     *   create: {
     *     // ... data to create a MedicationRecord
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MedicationRecord we want to update
     *   }
     * })
     */
    upsert<T extends MedicationRecordUpsertArgs>(args: SelectSubset<T, MedicationRecordUpsertArgs<ExtArgs>>): Prisma__MedicationRecordClient<$Result.GetResult<Prisma.$MedicationRecordPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MedicationRecords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationRecordCountArgs} args - Arguments to filter MedicationRecords to count.
     * @example
     * // Count the number of MedicationRecords
     * const count = await prisma.medicationRecord.count({
     *   where: {
     *     // ... the filter for the MedicationRecords we want to count
     *   }
     * })
    **/
    count<T extends MedicationRecordCountArgs>(
      args?: Subset<T, MedicationRecordCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MedicationRecordCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MedicationRecord.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationRecordAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MedicationRecordAggregateArgs>(args: Subset<T, MedicationRecordAggregateArgs>): Prisma.PrismaPromise<GetMedicationRecordAggregateType<T>>

    /**
     * Group by MedicationRecord.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationRecordGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MedicationRecordGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MedicationRecordGroupByArgs['orderBy'] }
        : { orderBy?: MedicationRecordGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MedicationRecordGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMedicationRecordGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MedicationRecord model
   */
  readonly fields: MedicationRecordFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MedicationRecord.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MedicationRecordClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    medication<T extends MedicationDatabaseLinkDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MedicationDatabaseLinkDefaultArgs<ExtArgs>>): Prisma__MedicationDatabaseLinkClient<$Result.GetResult<Prisma.$MedicationDatabaseLinkPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    client<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    administrationRecords<T extends MedicationRecord$administrationRecordsArgs<ExtArgs> = {}>(args?: Subset<T, MedicationRecord$administrationRecordsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationAdministrationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MedicationRecord model
   */ 
  interface MedicationRecordFieldRefs {
    readonly id: FieldRef<"MedicationRecord", 'String'>
    readonly medicationId: FieldRef<"MedicationRecord", 'String'>
    readonly clientId: FieldRef<"MedicationRecord", 'String'>
    readonly userId: FieldRef<"MedicationRecord", 'String'>
    readonly dosage: FieldRef<"MedicationRecord", 'String'>
    readonly frequency: FieldRef<"MedicationRecord", 'String'>
    readonly startDate: FieldRef<"MedicationRecord", 'DateTime'>
    readonly endDate: FieldRef<"MedicationRecord", 'DateTime'>
    readonly notes: FieldRef<"MedicationRecord", 'String'>
    readonly createdAt: FieldRef<"MedicationRecord", 'DateTime'>
    readonly updatedAt: FieldRef<"MedicationRecord", 'DateTime'>
    readonly morningDose: FieldRef<"MedicationRecord", 'Boolean'>
    readonly lunchDose: FieldRef<"MedicationRecord", 'Boolean'>
    readonly eveningDose: FieldRef<"MedicationRecord", 'Boolean'>
    readonly bedtimeDose: FieldRef<"MedicationRecord", 'Boolean'>
    readonly asNeededDose: FieldRef<"MedicationRecord", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * MedicationRecord findUnique
   */
  export type MedicationRecordFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecord
     */
    select?: MedicationRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationRecord
     */
    omit?: MedicationRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationRecordInclude<ExtArgs> | null
    /**
     * Filter, which MedicationRecord to fetch.
     */
    where: MedicationRecordWhereUniqueInput
  }

  /**
   * MedicationRecord findUniqueOrThrow
   */
  export type MedicationRecordFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecord
     */
    select?: MedicationRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationRecord
     */
    omit?: MedicationRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationRecordInclude<ExtArgs> | null
    /**
     * Filter, which MedicationRecord to fetch.
     */
    where: MedicationRecordWhereUniqueInput
  }

  /**
   * MedicationRecord findFirst
   */
  export type MedicationRecordFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecord
     */
    select?: MedicationRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationRecord
     */
    omit?: MedicationRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationRecordInclude<ExtArgs> | null
    /**
     * Filter, which MedicationRecord to fetch.
     */
    where?: MedicationRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MedicationRecords to fetch.
     */
    orderBy?: MedicationRecordOrderByWithRelationInput | MedicationRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MedicationRecords.
     */
    cursor?: MedicationRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MedicationRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MedicationRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MedicationRecords.
     */
    distinct?: MedicationRecordScalarFieldEnum | MedicationRecordScalarFieldEnum[]
  }

  /**
   * MedicationRecord findFirstOrThrow
   */
  export type MedicationRecordFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecord
     */
    select?: MedicationRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationRecord
     */
    omit?: MedicationRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationRecordInclude<ExtArgs> | null
    /**
     * Filter, which MedicationRecord to fetch.
     */
    where?: MedicationRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MedicationRecords to fetch.
     */
    orderBy?: MedicationRecordOrderByWithRelationInput | MedicationRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MedicationRecords.
     */
    cursor?: MedicationRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MedicationRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MedicationRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MedicationRecords.
     */
    distinct?: MedicationRecordScalarFieldEnum | MedicationRecordScalarFieldEnum[]
  }

  /**
   * MedicationRecord findMany
   */
  export type MedicationRecordFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecord
     */
    select?: MedicationRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationRecord
     */
    omit?: MedicationRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationRecordInclude<ExtArgs> | null
    /**
     * Filter, which MedicationRecords to fetch.
     */
    where?: MedicationRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MedicationRecords to fetch.
     */
    orderBy?: MedicationRecordOrderByWithRelationInput | MedicationRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MedicationRecords.
     */
    cursor?: MedicationRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MedicationRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MedicationRecords.
     */
    skip?: number
    distinct?: MedicationRecordScalarFieldEnum | MedicationRecordScalarFieldEnum[]
  }

  /**
   * MedicationRecord create
   */
  export type MedicationRecordCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecord
     */
    select?: MedicationRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationRecord
     */
    omit?: MedicationRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationRecordInclude<ExtArgs> | null
    /**
     * The data needed to create a MedicationRecord.
     */
    data: XOR<MedicationRecordCreateInput, MedicationRecordUncheckedCreateInput>
  }

  /**
   * MedicationRecord createMany
   */
  export type MedicationRecordCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MedicationRecords.
     */
    data: MedicationRecordCreateManyInput | MedicationRecordCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MedicationRecord createManyAndReturn
   */
  export type MedicationRecordCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecord
     */
    select?: MedicationRecordSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationRecord
     */
    omit?: MedicationRecordOmit<ExtArgs> | null
    /**
     * The data used to create many MedicationRecords.
     */
    data: MedicationRecordCreateManyInput | MedicationRecordCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationRecordIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MedicationRecord update
   */
  export type MedicationRecordUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecord
     */
    select?: MedicationRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationRecord
     */
    omit?: MedicationRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationRecordInclude<ExtArgs> | null
    /**
     * The data needed to update a MedicationRecord.
     */
    data: XOR<MedicationRecordUpdateInput, MedicationRecordUncheckedUpdateInput>
    /**
     * Choose, which MedicationRecord to update.
     */
    where: MedicationRecordWhereUniqueInput
  }

  /**
   * MedicationRecord updateMany
   */
  export type MedicationRecordUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MedicationRecords.
     */
    data: XOR<MedicationRecordUpdateManyMutationInput, MedicationRecordUncheckedUpdateManyInput>
    /**
     * Filter which MedicationRecords to update
     */
    where?: MedicationRecordWhereInput
    /**
     * Limit how many MedicationRecords to update.
     */
    limit?: number
  }

  /**
   * MedicationRecord updateManyAndReturn
   */
  export type MedicationRecordUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecord
     */
    select?: MedicationRecordSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationRecord
     */
    omit?: MedicationRecordOmit<ExtArgs> | null
    /**
     * The data used to update MedicationRecords.
     */
    data: XOR<MedicationRecordUpdateManyMutationInput, MedicationRecordUncheckedUpdateManyInput>
    /**
     * Filter which MedicationRecords to update
     */
    where?: MedicationRecordWhereInput
    /**
     * Limit how many MedicationRecords to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationRecordIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MedicationRecord upsert
   */
  export type MedicationRecordUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecord
     */
    select?: MedicationRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationRecord
     */
    omit?: MedicationRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationRecordInclude<ExtArgs> | null
    /**
     * The filter to search for the MedicationRecord to update in case it exists.
     */
    where: MedicationRecordWhereUniqueInput
    /**
     * In case the MedicationRecord found by the `where` argument doesn't exist, create a new MedicationRecord with this data.
     */
    create: XOR<MedicationRecordCreateInput, MedicationRecordUncheckedCreateInput>
    /**
     * In case the MedicationRecord was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MedicationRecordUpdateInput, MedicationRecordUncheckedUpdateInput>
  }

  /**
   * MedicationRecord delete
   */
  export type MedicationRecordDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecord
     */
    select?: MedicationRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationRecord
     */
    omit?: MedicationRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationRecordInclude<ExtArgs> | null
    /**
     * Filter which MedicationRecord to delete.
     */
    where: MedicationRecordWhereUniqueInput
  }

  /**
   * MedicationRecord deleteMany
   */
  export type MedicationRecordDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MedicationRecords to delete
     */
    where?: MedicationRecordWhereInput
    /**
     * Limit how many MedicationRecords to delete.
     */
    limit?: number
  }

  /**
   * MedicationRecord.administrationRecords
   */
  export type MedicationRecord$administrationRecordsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationAdministration
     */
    select?: MedicationAdministrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationAdministration
     */
    omit?: MedicationAdministrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationAdministrationInclude<ExtArgs> | null
    where?: MedicationAdministrationWhereInput
    orderBy?: MedicationAdministrationOrderByWithRelationInput | MedicationAdministrationOrderByWithRelationInput[]
    cursor?: MedicationAdministrationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MedicationAdministrationScalarFieldEnum | MedicationAdministrationScalarFieldEnum[]
  }

  /**
   * MedicationRecord without action
   */
  export type MedicationRecordDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationRecord
     */
    select?: MedicationRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationRecord
     */
    omit?: MedicationRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationRecordInclude<ExtArgs> | null
  }


  /**
   * Model MedicationAdministration
   */

  export type AggregateMedicationAdministration = {
    _count: MedicationAdministrationCountAggregateOutputType | null
    _min: MedicationAdministrationMinAggregateOutputType | null
    _max: MedicationAdministrationMaxAggregateOutputType | null
  }

  export type MedicationAdministrationMinAggregateOutputType = {
    id: string | null
    medicationRecordId: string | null
    administeredById: string | null
    administeredAt: Date | null
    doseType: $Enums.DoseType | null
    doseTaken: boolean | null
    notes: string | null
    createdAt: Date | null
    reportId: string | null
  }

  export type MedicationAdministrationMaxAggregateOutputType = {
    id: string | null
    medicationRecordId: string | null
    administeredById: string | null
    administeredAt: Date | null
    doseType: $Enums.DoseType | null
    doseTaken: boolean | null
    notes: string | null
    createdAt: Date | null
    reportId: string | null
  }

  export type MedicationAdministrationCountAggregateOutputType = {
    id: number
    medicationRecordId: number
    administeredById: number
    administeredAt: number
    doseType: number
    doseTaken: number
    notes: number
    createdAt: number
    reportId: number
    _all: number
  }


  export type MedicationAdministrationMinAggregateInputType = {
    id?: true
    medicationRecordId?: true
    administeredById?: true
    administeredAt?: true
    doseType?: true
    doseTaken?: true
    notes?: true
    createdAt?: true
    reportId?: true
  }

  export type MedicationAdministrationMaxAggregateInputType = {
    id?: true
    medicationRecordId?: true
    administeredById?: true
    administeredAt?: true
    doseType?: true
    doseTaken?: true
    notes?: true
    createdAt?: true
    reportId?: true
  }

  export type MedicationAdministrationCountAggregateInputType = {
    id?: true
    medicationRecordId?: true
    administeredById?: true
    administeredAt?: true
    doseType?: true
    doseTaken?: true
    notes?: true
    createdAt?: true
    reportId?: true
    _all?: true
  }

  export type MedicationAdministrationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MedicationAdministration to aggregate.
     */
    where?: MedicationAdministrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MedicationAdministrations to fetch.
     */
    orderBy?: MedicationAdministrationOrderByWithRelationInput | MedicationAdministrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MedicationAdministrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MedicationAdministrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MedicationAdministrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MedicationAdministrations
    **/
    _count?: true | MedicationAdministrationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MedicationAdministrationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MedicationAdministrationMaxAggregateInputType
  }

  export type GetMedicationAdministrationAggregateType<T extends MedicationAdministrationAggregateArgs> = {
        [P in keyof T & keyof AggregateMedicationAdministration]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMedicationAdministration[P]>
      : GetScalarType<T[P], AggregateMedicationAdministration[P]>
  }




  export type MedicationAdministrationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MedicationAdministrationWhereInput
    orderBy?: MedicationAdministrationOrderByWithAggregationInput | MedicationAdministrationOrderByWithAggregationInput[]
    by: MedicationAdministrationScalarFieldEnum[] | MedicationAdministrationScalarFieldEnum
    having?: MedicationAdministrationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MedicationAdministrationCountAggregateInputType | true
    _min?: MedicationAdministrationMinAggregateInputType
    _max?: MedicationAdministrationMaxAggregateInputType
  }

  export type MedicationAdministrationGroupByOutputType = {
    id: string
    medicationRecordId: string
    administeredById: string
    administeredAt: Date
    doseType: $Enums.DoseType
    doseTaken: boolean
    notes: string | null
    createdAt: Date
    reportId: string | null
    _count: MedicationAdministrationCountAggregateOutputType | null
    _min: MedicationAdministrationMinAggregateOutputType | null
    _max: MedicationAdministrationMaxAggregateOutputType | null
  }

  type GetMedicationAdministrationGroupByPayload<T extends MedicationAdministrationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MedicationAdministrationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MedicationAdministrationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MedicationAdministrationGroupByOutputType[P]>
            : GetScalarType<T[P], MedicationAdministrationGroupByOutputType[P]>
        }
      >
    >


  export type MedicationAdministrationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    medicationRecordId?: boolean
    administeredById?: boolean
    administeredAt?: boolean
    doseType?: boolean
    doseTaken?: boolean
    notes?: boolean
    createdAt?: boolean
    reportId?: boolean
    medicationRecord?: boolean | MedicationRecordDefaultArgs<ExtArgs>
    administeredBy?: boolean | UserDefaultArgs<ExtArgs>
    report?: boolean | MedicationAdministration$reportArgs<ExtArgs>
  }, ExtArgs["result"]["medicationAdministration"]>

  export type MedicationAdministrationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    medicationRecordId?: boolean
    administeredById?: boolean
    administeredAt?: boolean
    doseType?: boolean
    doseTaken?: boolean
    notes?: boolean
    createdAt?: boolean
    reportId?: boolean
    medicationRecord?: boolean | MedicationRecordDefaultArgs<ExtArgs>
    administeredBy?: boolean | UserDefaultArgs<ExtArgs>
    report?: boolean | MedicationAdministration$reportArgs<ExtArgs>
  }, ExtArgs["result"]["medicationAdministration"]>

  export type MedicationAdministrationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    medicationRecordId?: boolean
    administeredById?: boolean
    administeredAt?: boolean
    doseType?: boolean
    doseTaken?: boolean
    notes?: boolean
    createdAt?: boolean
    reportId?: boolean
    medicationRecord?: boolean | MedicationRecordDefaultArgs<ExtArgs>
    administeredBy?: boolean | UserDefaultArgs<ExtArgs>
    report?: boolean | MedicationAdministration$reportArgs<ExtArgs>
  }, ExtArgs["result"]["medicationAdministration"]>

  export type MedicationAdministrationSelectScalar = {
    id?: boolean
    medicationRecordId?: boolean
    administeredById?: boolean
    administeredAt?: boolean
    doseType?: boolean
    doseTaken?: boolean
    notes?: boolean
    createdAt?: boolean
    reportId?: boolean
  }

  export type MedicationAdministrationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "medicationRecordId" | "administeredById" | "administeredAt" | "doseType" | "doseTaken" | "notes" | "createdAt" | "reportId", ExtArgs["result"]["medicationAdministration"]>
  export type MedicationAdministrationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    medicationRecord?: boolean | MedicationRecordDefaultArgs<ExtArgs>
    administeredBy?: boolean | UserDefaultArgs<ExtArgs>
    report?: boolean | MedicationAdministration$reportArgs<ExtArgs>
  }
  export type MedicationAdministrationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    medicationRecord?: boolean | MedicationRecordDefaultArgs<ExtArgs>
    administeredBy?: boolean | UserDefaultArgs<ExtArgs>
    report?: boolean | MedicationAdministration$reportArgs<ExtArgs>
  }
  export type MedicationAdministrationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    medicationRecord?: boolean | MedicationRecordDefaultArgs<ExtArgs>
    administeredBy?: boolean | UserDefaultArgs<ExtArgs>
    report?: boolean | MedicationAdministration$reportArgs<ExtArgs>
  }

  export type $MedicationAdministrationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MedicationAdministration"
    objects: {
      medicationRecord: Prisma.$MedicationRecordPayload<ExtArgs>
      administeredBy: Prisma.$UserPayload<ExtArgs>
      report: Prisma.$ReportPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      medicationRecordId: string
      administeredById: string
      administeredAt: Date
      doseType: $Enums.DoseType
      doseTaken: boolean
      notes: string | null
      createdAt: Date
      reportId: string | null
    }, ExtArgs["result"]["medicationAdministration"]>
    composites: {}
  }

  type MedicationAdministrationGetPayload<S extends boolean | null | undefined | MedicationAdministrationDefaultArgs> = $Result.GetResult<Prisma.$MedicationAdministrationPayload, S>

  type MedicationAdministrationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MedicationAdministrationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MedicationAdministrationCountAggregateInputType | true
    }

  export interface MedicationAdministrationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MedicationAdministration'], meta: { name: 'MedicationAdministration' } }
    /**
     * Find zero or one MedicationAdministration that matches the filter.
     * @param {MedicationAdministrationFindUniqueArgs} args - Arguments to find a MedicationAdministration
     * @example
     * // Get one MedicationAdministration
     * const medicationAdministration = await prisma.medicationAdministration.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MedicationAdministrationFindUniqueArgs>(args: SelectSubset<T, MedicationAdministrationFindUniqueArgs<ExtArgs>>): Prisma__MedicationAdministrationClient<$Result.GetResult<Prisma.$MedicationAdministrationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MedicationAdministration that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MedicationAdministrationFindUniqueOrThrowArgs} args - Arguments to find a MedicationAdministration
     * @example
     * // Get one MedicationAdministration
     * const medicationAdministration = await prisma.medicationAdministration.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MedicationAdministrationFindUniqueOrThrowArgs>(args: SelectSubset<T, MedicationAdministrationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MedicationAdministrationClient<$Result.GetResult<Prisma.$MedicationAdministrationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MedicationAdministration that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationAdministrationFindFirstArgs} args - Arguments to find a MedicationAdministration
     * @example
     * // Get one MedicationAdministration
     * const medicationAdministration = await prisma.medicationAdministration.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MedicationAdministrationFindFirstArgs>(args?: SelectSubset<T, MedicationAdministrationFindFirstArgs<ExtArgs>>): Prisma__MedicationAdministrationClient<$Result.GetResult<Prisma.$MedicationAdministrationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MedicationAdministration that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationAdministrationFindFirstOrThrowArgs} args - Arguments to find a MedicationAdministration
     * @example
     * // Get one MedicationAdministration
     * const medicationAdministration = await prisma.medicationAdministration.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MedicationAdministrationFindFirstOrThrowArgs>(args?: SelectSubset<T, MedicationAdministrationFindFirstOrThrowArgs<ExtArgs>>): Prisma__MedicationAdministrationClient<$Result.GetResult<Prisma.$MedicationAdministrationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MedicationAdministrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationAdministrationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MedicationAdministrations
     * const medicationAdministrations = await prisma.medicationAdministration.findMany()
     * 
     * // Get first 10 MedicationAdministrations
     * const medicationAdministrations = await prisma.medicationAdministration.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const medicationAdministrationWithIdOnly = await prisma.medicationAdministration.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MedicationAdministrationFindManyArgs>(args?: SelectSubset<T, MedicationAdministrationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationAdministrationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MedicationAdministration.
     * @param {MedicationAdministrationCreateArgs} args - Arguments to create a MedicationAdministration.
     * @example
     * // Create one MedicationAdministration
     * const MedicationAdministration = await prisma.medicationAdministration.create({
     *   data: {
     *     // ... data to create a MedicationAdministration
     *   }
     * })
     * 
     */
    create<T extends MedicationAdministrationCreateArgs>(args: SelectSubset<T, MedicationAdministrationCreateArgs<ExtArgs>>): Prisma__MedicationAdministrationClient<$Result.GetResult<Prisma.$MedicationAdministrationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MedicationAdministrations.
     * @param {MedicationAdministrationCreateManyArgs} args - Arguments to create many MedicationAdministrations.
     * @example
     * // Create many MedicationAdministrations
     * const medicationAdministration = await prisma.medicationAdministration.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MedicationAdministrationCreateManyArgs>(args?: SelectSubset<T, MedicationAdministrationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MedicationAdministrations and returns the data saved in the database.
     * @param {MedicationAdministrationCreateManyAndReturnArgs} args - Arguments to create many MedicationAdministrations.
     * @example
     * // Create many MedicationAdministrations
     * const medicationAdministration = await prisma.medicationAdministration.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MedicationAdministrations and only return the `id`
     * const medicationAdministrationWithIdOnly = await prisma.medicationAdministration.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MedicationAdministrationCreateManyAndReturnArgs>(args?: SelectSubset<T, MedicationAdministrationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationAdministrationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MedicationAdministration.
     * @param {MedicationAdministrationDeleteArgs} args - Arguments to delete one MedicationAdministration.
     * @example
     * // Delete one MedicationAdministration
     * const MedicationAdministration = await prisma.medicationAdministration.delete({
     *   where: {
     *     // ... filter to delete one MedicationAdministration
     *   }
     * })
     * 
     */
    delete<T extends MedicationAdministrationDeleteArgs>(args: SelectSubset<T, MedicationAdministrationDeleteArgs<ExtArgs>>): Prisma__MedicationAdministrationClient<$Result.GetResult<Prisma.$MedicationAdministrationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MedicationAdministration.
     * @param {MedicationAdministrationUpdateArgs} args - Arguments to update one MedicationAdministration.
     * @example
     * // Update one MedicationAdministration
     * const medicationAdministration = await prisma.medicationAdministration.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MedicationAdministrationUpdateArgs>(args: SelectSubset<T, MedicationAdministrationUpdateArgs<ExtArgs>>): Prisma__MedicationAdministrationClient<$Result.GetResult<Prisma.$MedicationAdministrationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MedicationAdministrations.
     * @param {MedicationAdministrationDeleteManyArgs} args - Arguments to filter MedicationAdministrations to delete.
     * @example
     * // Delete a few MedicationAdministrations
     * const { count } = await prisma.medicationAdministration.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MedicationAdministrationDeleteManyArgs>(args?: SelectSubset<T, MedicationAdministrationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MedicationAdministrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationAdministrationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MedicationAdministrations
     * const medicationAdministration = await prisma.medicationAdministration.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MedicationAdministrationUpdateManyArgs>(args: SelectSubset<T, MedicationAdministrationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MedicationAdministrations and returns the data updated in the database.
     * @param {MedicationAdministrationUpdateManyAndReturnArgs} args - Arguments to update many MedicationAdministrations.
     * @example
     * // Update many MedicationAdministrations
     * const medicationAdministration = await prisma.medicationAdministration.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MedicationAdministrations and only return the `id`
     * const medicationAdministrationWithIdOnly = await prisma.medicationAdministration.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MedicationAdministrationUpdateManyAndReturnArgs>(args: SelectSubset<T, MedicationAdministrationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MedicationAdministrationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MedicationAdministration.
     * @param {MedicationAdministrationUpsertArgs} args - Arguments to update or create a MedicationAdministration.
     * @example
     * // Update or create a MedicationAdministration
     * const medicationAdministration = await prisma.medicationAdministration.upsert({
     *   create: {
     *     // ... data to create a MedicationAdministration
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MedicationAdministration we want to update
     *   }
     * })
     */
    upsert<T extends MedicationAdministrationUpsertArgs>(args: SelectSubset<T, MedicationAdministrationUpsertArgs<ExtArgs>>): Prisma__MedicationAdministrationClient<$Result.GetResult<Prisma.$MedicationAdministrationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MedicationAdministrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationAdministrationCountArgs} args - Arguments to filter MedicationAdministrations to count.
     * @example
     * // Count the number of MedicationAdministrations
     * const count = await prisma.medicationAdministration.count({
     *   where: {
     *     // ... the filter for the MedicationAdministrations we want to count
     *   }
     * })
    **/
    count<T extends MedicationAdministrationCountArgs>(
      args?: Subset<T, MedicationAdministrationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MedicationAdministrationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MedicationAdministration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationAdministrationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MedicationAdministrationAggregateArgs>(args: Subset<T, MedicationAdministrationAggregateArgs>): Prisma.PrismaPromise<GetMedicationAdministrationAggregateType<T>>

    /**
     * Group by MedicationAdministration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MedicationAdministrationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MedicationAdministrationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MedicationAdministrationGroupByArgs['orderBy'] }
        : { orderBy?: MedicationAdministrationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MedicationAdministrationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMedicationAdministrationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MedicationAdministration model
   */
  readonly fields: MedicationAdministrationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MedicationAdministration.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MedicationAdministrationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    medicationRecord<T extends MedicationRecordDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MedicationRecordDefaultArgs<ExtArgs>>): Prisma__MedicationRecordClient<$Result.GetResult<Prisma.$MedicationRecordPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    administeredBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    report<T extends MedicationAdministration$reportArgs<ExtArgs> = {}>(args?: Subset<T, MedicationAdministration$reportArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MedicationAdministration model
   */ 
  interface MedicationAdministrationFieldRefs {
    readonly id: FieldRef<"MedicationAdministration", 'String'>
    readonly medicationRecordId: FieldRef<"MedicationAdministration", 'String'>
    readonly administeredById: FieldRef<"MedicationAdministration", 'String'>
    readonly administeredAt: FieldRef<"MedicationAdministration", 'DateTime'>
    readonly doseType: FieldRef<"MedicationAdministration", 'DoseType'>
    readonly doseTaken: FieldRef<"MedicationAdministration", 'Boolean'>
    readonly notes: FieldRef<"MedicationAdministration", 'String'>
    readonly createdAt: FieldRef<"MedicationAdministration", 'DateTime'>
    readonly reportId: FieldRef<"MedicationAdministration", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MedicationAdministration findUnique
   */
  export type MedicationAdministrationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationAdministration
     */
    select?: MedicationAdministrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationAdministration
     */
    omit?: MedicationAdministrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationAdministrationInclude<ExtArgs> | null
    /**
     * Filter, which MedicationAdministration to fetch.
     */
    where: MedicationAdministrationWhereUniqueInput
  }

  /**
   * MedicationAdministration findUniqueOrThrow
   */
  export type MedicationAdministrationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationAdministration
     */
    select?: MedicationAdministrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationAdministration
     */
    omit?: MedicationAdministrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationAdministrationInclude<ExtArgs> | null
    /**
     * Filter, which MedicationAdministration to fetch.
     */
    where: MedicationAdministrationWhereUniqueInput
  }

  /**
   * MedicationAdministration findFirst
   */
  export type MedicationAdministrationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationAdministration
     */
    select?: MedicationAdministrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationAdministration
     */
    omit?: MedicationAdministrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationAdministrationInclude<ExtArgs> | null
    /**
     * Filter, which MedicationAdministration to fetch.
     */
    where?: MedicationAdministrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MedicationAdministrations to fetch.
     */
    orderBy?: MedicationAdministrationOrderByWithRelationInput | MedicationAdministrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MedicationAdministrations.
     */
    cursor?: MedicationAdministrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MedicationAdministrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MedicationAdministrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MedicationAdministrations.
     */
    distinct?: MedicationAdministrationScalarFieldEnum | MedicationAdministrationScalarFieldEnum[]
  }

  /**
   * MedicationAdministration findFirstOrThrow
   */
  export type MedicationAdministrationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationAdministration
     */
    select?: MedicationAdministrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationAdministration
     */
    omit?: MedicationAdministrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationAdministrationInclude<ExtArgs> | null
    /**
     * Filter, which MedicationAdministration to fetch.
     */
    where?: MedicationAdministrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MedicationAdministrations to fetch.
     */
    orderBy?: MedicationAdministrationOrderByWithRelationInput | MedicationAdministrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MedicationAdministrations.
     */
    cursor?: MedicationAdministrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MedicationAdministrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MedicationAdministrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MedicationAdministrations.
     */
    distinct?: MedicationAdministrationScalarFieldEnum | MedicationAdministrationScalarFieldEnum[]
  }

  /**
   * MedicationAdministration findMany
   */
  export type MedicationAdministrationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationAdministration
     */
    select?: MedicationAdministrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationAdministration
     */
    omit?: MedicationAdministrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationAdministrationInclude<ExtArgs> | null
    /**
     * Filter, which MedicationAdministrations to fetch.
     */
    where?: MedicationAdministrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MedicationAdministrations to fetch.
     */
    orderBy?: MedicationAdministrationOrderByWithRelationInput | MedicationAdministrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MedicationAdministrations.
     */
    cursor?: MedicationAdministrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MedicationAdministrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MedicationAdministrations.
     */
    skip?: number
    distinct?: MedicationAdministrationScalarFieldEnum | MedicationAdministrationScalarFieldEnum[]
  }

  /**
   * MedicationAdministration create
   */
  export type MedicationAdministrationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationAdministration
     */
    select?: MedicationAdministrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationAdministration
     */
    omit?: MedicationAdministrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationAdministrationInclude<ExtArgs> | null
    /**
     * The data needed to create a MedicationAdministration.
     */
    data: XOR<MedicationAdministrationCreateInput, MedicationAdministrationUncheckedCreateInput>
  }

  /**
   * MedicationAdministration createMany
   */
  export type MedicationAdministrationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MedicationAdministrations.
     */
    data: MedicationAdministrationCreateManyInput | MedicationAdministrationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MedicationAdministration createManyAndReturn
   */
  export type MedicationAdministrationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationAdministration
     */
    select?: MedicationAdministrationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationAdministration
     */
    omit?: MedicationAdministrationOmit<ExtArgs> | null
    /**
     * The data used to create many MedicationAdministrations.
     */
    data: MedicationAdministrationCreateManyInput | MedicationAdministrationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationAdministrationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MedicationAdministration update
   */
  export type MedicationAdministrationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationAdministration
     */
    select?: MedicationAdministrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationAdministration
     */
    omit?: MedicationAdministrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationAdministrationInclude<ExtArgs> | null
    /**
     * The data needed to update a MedicationAdministration.
     */
    data: XOR<MedicationAdministrationUpdateInput, MedicationAdministrationUncheckedUpdateInput>
    /**
     * Choose, which MedicationAdministration to update.
     */
    where: MedicationAdministrationWhereUniqueInput
  }

  /**
   * MedicationAdministration updateMany
   */
  export type MedicationAdministrationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MedicationAdministrations.
     */
    data: XOR<MedicationAdministrationUpdateManyMutationInput, MedicationAdministrationUncheckedUpdateManyInput>
    /**
     * Filter which MedicationAdministrations to update
     */
    where?: MedicationAdministrationWhereInput
    /**
     * Limit how many MedicationAdministrations to update.
     */
    limit?: number
  }

  /**
   * MedicationAdministration updateManyAndReturn
   */
  export type MedicationAdministrationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationAdministration
     */
    select?: MedicationAdministrationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationAdministration
     */
    omit?: MedicationAdministrationOmit<ExtArgs> | null
    /**
     * The data used to update MedicationAdministrations.
     */
    data: XOR<MedicationAdministrationUpdateManyMutationInput, MedicationAdministrationUncheckedUpdateManyInput>
    /**
     * Filter which MedicationAdministrations to update
     */
    where?: MedicationAdministrationWhereInput
    /**
     * Limit how many MedicationAdministrations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationAdministrationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MedicationAdministration upsert
   */
  export type MedicationAdministrationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationAdministration
     */
    select?: MedicationAdministrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationAdministration
     */
    omit?: MedicationAdministrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationAdministrationInclude<ExtArgs> | null
    /**
     * The filter to search for the MedicationAdministration to update in case it exists.
     */
    where: MedicationAdministrationWhereUniqueInput
    /**
     * In case the MedicationAdministration found by the `where` argument doesn't exist, create a new MedicationAdministration with this data.
     */
    create: XOR<MedicationAdministrationCreateInput, MedicationAdministrationUncheckedCreateInput>
    /**
     * In case the MedicationAdministration was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MedicationAdministrationUpdateInput, MedicationAdministrationUncheckedUpdateInput>
  }

  /**
   * MedicationAdministration delete
   */
  export type MedicationAdministrationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationAdministration
     */
    select?: MedicationAdministrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationAdministration
     */
    omit?: MedicationAdministrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationAdministrationInclude<ExtArgs> | null
    /**
     * Filter which MedicationAdministration to delete.
     */
    where: MedicationAdministrationWhereUniqueInput
  }

  /**
   * MedicationAdministration deleteMany
   */
  export type MedicationAdministrationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MedicationAdministrations to delete
     */
    where?: MedicationAdministrationWhereInput
    /**
     * Limit how many MedicationAdministrations to delete.
     */
    limit?: number
  }

  /**
   * MedicationAdministration.report
   */
  export type MedicationAdministration$reportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Report
     */
    omit?: ReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    where?: ReportWhereInput
  }

  /**
   * MedicationAdministration without action
   */
  export type MedicationAdministrationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MedicationAdministration
     */
    select?: MedicationAdministrationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MedicationAdministration
     */
    omit?: MedicationAdministrationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MedicationAdministrationInclude<ExtArgs> | null
  }


  /**
   * Model Invoice
   */

  export type AggregateInvoice = {
    _count: InvoiceCountAggregateOutputType | null
    _avg: InvoiceAvgAggregateOutputType | null
    _sum: InvoiceSumAggregateOutputType | null
    _min: InvoiceMinAggregateOutputType | null
    _max: InvoiceMaxAggregateOutputType | null
  }

  export type InvoiceAvgAggregateOutputType = {
    amount: number | null
  }

  export type InvoiceSumAggregateOutputType = {
    amount: number | null
  }

  export type InvoiceMinAggregateOutputType = {
    id: string | null
    agencyId: string | null
    clientId: string | null
    amount: number | null
    description: string | null
    issuedAt: Date | null
    dueDate: Date | null
    status: $Enums.InvoiceStatus | null
  }

  export type InvoiceMaxAggregateOutputType = {
    id: string | null
    agencyId: string | null
    clientId: string | null
    amount: number | null
    description: string | null
    issuedAt: Date | null
    dueDate: Date | null
    status: $Enums.InvoiceStatus | null
  }

  export type InvoiceCountAggregateOutputType = {
    id: number
    agencyId: number
    clientId: number
    amount: number
    description: number
    issuedAt: number
    dueDate: number
    status: number
    _all: number
  }


  export type InvoiceAvgAggregateInputType = {
    amount?: true
  }

  export type InvoiceSumAggregateInputType = {
    amount?: true
  }

  export type InvoiceMinAggregateInputType = {
    id?: true
    agencyId?: true
    clientId?: true
    amount?: true
    description?: true
    issuedAt?: true
    dueDate?: true
    status?: true
  }

  export type InvoiceMaxAggregateInputType = {
    id?: true
    agencyId?: true
    clientId?: true
    amount?: true
    description?: true
    issuedAt?: true
    dueDate?: true
    status?: true
  }

  export type InvoiceCountAggregateInputType = {
    id?: true
    agencyId?: true
    clientId?: true
    amount?: true
    description?: true
    issuedAt?: true
    dueDate?: true
    status?: true
    _all?: true
  }

  export type InvoiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invoice to aggregate.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Invoices
    **/
    _count?: true | InvoiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InvoiceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InvoiceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvoiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvoiceMaxAggregateInputType
  }

  export type GetInvoiceAggregateType<T extends InvoiceAggregateArgs> = {
        [P in keyof T & keyof AggregateInvoice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvoice[P]>
      : GetScalarType<T[P], AggregateInvoice[P]>
  }




  export type InvoiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithAggregationInput | InvoiceOrderByWithAggregationInput[]
    by: InvoiceScalarFieldEnum[] | InvoiceScalarFieldEnum
    having?: InvoiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvoiceCountAggregateInputType | true
    _avg?: InvoiceAvgAggregateInputType
    _sum?: InvoiceSumAggregateInputType
    _min?: InvoiceMinAggregateInputType
    _max?: InvoiceMaxAggregateInputType
  }

  export type InvoiceGroupByOutputType = {
    id: string
    agencyId: string
    clientId: string | null
    amount: number
    description: string
    issuedAt: Date
    dueDate: Date
    status: $Enums.InvoiceStatus
    _count: InvoiceCountAggregateOutputType | null
    _avg: InvoiceAvgAggregateOutputType | null
    _sum: InvoiceSumAggregateOutputType | null
    _min: InvoiceMinAggregateOutputType | null
    _max: InvoiceMaxAggregateOutputType | null
  }

  type GetInvoiceGroupByPayload<T extends InvoiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvoiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvoiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvoiceGroupByOutputType[P]>
            : GetScalarType<T[P], InvoiceGroupByOutputType[P]>
        }
      >
    >


  export type InvoiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    clientId?: boolean
    amount?: boolean
    description?: boolean
    issuedAt?: boolean
    dueDate?: boolean
    status?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | Invoice$clientArgs<ExtArgs>
  }, ExtArgs["result"]["invoice"]>

  export type InvoiceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    clientId?: boolean
    amount?: boolean
    description?: boolean
    issuedAt?: boolean
    dueDate?: boolean
    status?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | Invoice$clientArgs<ExtArgs>
  }, ExtArgs["result"]["invoice"]>

  export type InvoiceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    clientId?: boolean
    amount?: boolean
    description?: boolean
    issuedAt?: boolean
    dueDate?: boolean
    status?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | Invoice$clientArgs<ExtArgs>
  }, ExtArgs["result"]["invoice"]>

  export type InvoiceSelectScalar = {
    id?: boolean
    agencyId?: boolean
    clientId?: boolean
    amount?: boolean
    description?: boolean
    issuedAt?: boolean
    dueDate?: boolean
    status?: boolean
  }

  export type InvoiceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "agencyId" | "clientId" | "amount" | "description" | "issuedAt" | "dueDate" | "status", ExtArgs["result"]["invoice"]>
  export type InvoiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | Invoice$clientArgs<ExtArgs>
  }
  export type InvoiceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | Invoice$clientArgs<ExtArgs>
  }
  export type InvoiceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | Invoice$clientArgs<ExtArgs>
  }

  export type $InvoicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Invoice"
    objects: {
      agency: Prisma.$AgencyPayload<ExtArgs>
      client: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      agencyId: string
      clientId: string | null
      amount: number
      description: string
      issuedAt: Date
      dueDate: Date
      status: $Enums.InvoiceStatus
    }, ExtArgs["result"]["invoice"]>
    composites: {}
  }

  type InvoiceGetPayload<S extends boolean | null | undefined | InvoiceDefaultArgs> = $Result.GetResult<Prisma.$InvoicePayload, S>

  type InvoiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InvoiceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InvoiceCountAggregateInputType | true
    }

  export interface InvoiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Invoice'], meta: { name: 'Invoice' } }
    /**
     * Find zero or one Invoice that matches the filter.
     * @param {InvoiceFindUniqueArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InvoiceFindUniqueArgs>(args: SelectSubset<T, InvoiceFindUniqueArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Invoice that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InvoiceFindUniqueOrThrowArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InvoiceFindUniqueOrThrowArgs>(args: SelectSubset<T, InvoiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Invoice that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindFirstArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InvoiceFindFirstArgs>(args?: SelectSubset<T, InvoiceFindFirstArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Invoice that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindFirstOrThrowArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InvoiceFindFirstOrThrowArgs>(args?: SelectSubset<T, InvoiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Invoices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Invoices
     * const invoices = await prisma.invoice.findMany()
     * 
     * // Get first 10 Invoices
     * const invoices = await prisma.invoice.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invoiceWithIdOnly = await prisma.invoice.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InvoiceFindManyArgs>(args?: SelectSubset<T, InvoiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Invoice.
     * @param {InvoiceCreateArgs} args - Arguments to create a Invoice.
     * @example
     * // Create one Invoice
     * const Invoice = await prisma.invoice.create({
     *   data: {
     *     // ... data to create a Invoice
     *   }
     * })
     * 
     */
    create<T extends InvoiceCreateArgs>(args: SelectSubset<T, InvoiceCreateArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Invoices.
     * @param {InvoiceCreateManyArgs} args - Arguments to create many Invoices.
     * @example
     * // Create many Invoices
     * const invoice = await prisma.invoice.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InvoiceCreateManyArgs>(args?: SelectSubset<T, InvoiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Invoices and returns the data saved in the database.
     * @param {InvoiceCreateManyAndReturnArgs} args - Arguments to create many Invoices.
     * @example
     * // Create many Invoices
     * const invoice = await prisma.invoice.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Invoices and only return the `id`
     * const invoiceWithIdOnly = await prisma.invoice.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InvoiceCreateManyAndReturnArgs>(args?: SelectSubset<T, InvoiceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Invoice.
     * @param {InvoiceDeleteArgs} args - Arguments to delete one Invoice.
     * @example
     * // Delete one Invoice
     * const Invoice = await prisma.invoice.delete({
     *   where: {
     *     // ... filter to delete one Invoice
     *   }
     * })
     * 
     */
    delete<T extends InvoiceDeleteArgs>(args: SelectSubset<T, InvoiceDeleteArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Invoice.
     * @param {InvoiceUpdateArgs} args - Arguments to update one Invoice.
     * @example
     * // Update one Invoice
     * const invoice = await prisma.invoice.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InvoiceUpdateArgs>(args: SelectSubset<T, InvoiceUpdateArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Invoices.
     * @param {InvoiceDeleteManyArgs} args - Arguments to filter Invoices to delete.
     * @example
     * // Delete a few Invoices
     * const { count } = await prisma.invoice.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InvoiceDeleteManyArgs>(args?: SelectSubset<T, InvoiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Invoices
     * const invoice = await prisma.invoice.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InvoiceUpdateManyArgs>(args: SelectSubset<T, InvoiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invoices and returns the data updated in the database.
     * @param {InvoiceUpdateManyAndReturnArgs} args - Arguments to update many Invoices.
     * @example
     * // Update many Invoices
     * const invoice = await prisma.invoice.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Invoices and only return the `id`
     * const invoiceWithIdOnly = await prisma.invoice.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InvoiceUpdateManyAndReturnArgs>(args: SelectSubset<T, InvoiceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Invoice.
     * @param {InvoiceUpsertArgs} args - Arguments to update or create a Invoice.
     * @example
     * // Update or create a Invoice
     * const invoice = await prisma.invoice.upsert({
     *   create: {
     *     // ... data to create a Invoice
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Invoice we want to update
     *   }
     * })
     */
    upsert<T extends InvoiceUpsertArgs>(args: SelectSubset<T, InvoiceUpsertArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Invoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceCountArgs} args - Arguments to filter Invoices to count.
     * @example
     * // Count the number of Invoices
     * const count = await prisma.invoice.count({
     *   where: {
     *     // ... the filter for the Invoices we want to count
     *   }
     * })
    **/
    count<T extends InvoiceCountArgs>(
      args?: Subset<T, InvoiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvoiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Invoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvoiceAggregateArgs>(args: Subset<T, InvoiceAggregateArgs>): Prisma.PrismaPromise<GetInvoiceAggregateType<T>>

    /**
     * Group by Invoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InvoiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InvoiceGroupByArgs['orderBy'] }
        : { orderBy?: InvoiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InvoiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvoiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Invoice model
   */
  readonly fields: InvoiceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Invoice.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InvoiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agency<T extends AgencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyDefaultArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    client<T extends Invoice$clientArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$clientArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Invoice model
   */ 
  interface InvoiceFieldRefs {
    readonly id: FieldRef<"Invoice", 'String'>
    readonly agencyId: FieldRef<"Invoice", 'String'>
    readonly clientId: FieldRef<"Invoice", 'String'>
    readonly amount: FieldRef<"Invoice", 'Float'>
    readonly description: FieldRef<"Invoice", 'String'>
    readonly issuedAt: FieldRef<"Invoice", 'DateTime'>
    readonly dueDate: FieldRef<"Invoice", 'DateTime'>
    readonly status: FieldRef<"Invoice", 'InvoiceStatus'>
  }
    

  // Custom InputTypes
  /**
   * Invoice findUnique
   */
  export type InvoiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice findUniqueOrThrow
   */
  export type InvoiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice findFirst
   */
  export type InvoiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invoices.
     */
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Invoice findFirstOrThrow
   */
  export type InvoiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invoices.
     */
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Invoice findMany
   */
  export type InvoiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoices to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Invoice create
   */
  export type InvoiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The data needed to create a Invoice.
     */
    data: XOR<InvoiceCreateInput, InvoiceUncheckedCreateInput>
  }

  /**
   * Invoice createMany
   */
  export type InvoiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Invoices.
     */
    data: InvoiceCreateManyInput | InvoiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Invoice createManyAndReturn
   */
  export type InvoiceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * The data used to create many Invoices.
     */
    data: InvoiceCreateManyInput | InvoiceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Invoice update
   */
  export type InvoiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The data needed to update a Invoice.
     */
    data: XOR<InvoiceUpdateInput, InvoiceUncheckedUpdateInput>
    /**
     * Choose, which Invoice to update.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice updateMany
   */
  export type InvoiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Invoices.
     */
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyInput>
    /**
     * Filter which Invoices to update
     */
    where?: InvoiceWhereInput
    /**
     * Limit how many Invoices to update.
     */
    limit?: number
  }

  /**
   * Invoice updateManyAndReturn
   */
  export type InvoiceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * The data used to update Invoices.
     */
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyInput>
    /**
     * Filter which Invoices to update
     */
    where?: InvoiceWhereInput
    /**
     * Limit how many Invoices to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Invoice upsert
   */
  export type InvoiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The filter to search for the Invoice to update in case it exists.
     */
    where: InvoiceWhereUniqueInput
    /**
     * In case the Invoice found by the `where` argument doesn't exist, create a new Invoice with this data.
     */
    create: XOR<InvoiceCreateInput, InvoiceUncheckedCreateInput>
    /**
     * In case the Invoice was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InvoiceUpdateInput, InvoiceUncheckedUpdateInput>
  }

  /**
   * Invoice delete
   */
  export type InvoiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter which Invoice to delete.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice deleteMany
   */
  export type InvoiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invoices to delete
     */
    where?: InvoiceWhereInput
    /**
     * Limit how many Invoices to delete.
     */
    limit?: number
  }

  /**
   * Invoice.client
   */
  export type Invoice$clientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Invoice without action
   */
  export type InvoiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
  }


  /**
   * Model MileageRecord
   */

  export type AggregateMileageRecord = {
    _count: MileageRecordCountAggregateOutputType | null
    _avg: MileageRecordAvgAggregateOutputType | null
    _sum: MileageRecordSumAggregateOutputType | null
    _min: MileageRecordMinAggregateOutputType | null
    _max: MileageRecordMaxAggregateOutputType | null
  }

  export type MileageRecordAvgAggregateOutputType = {
    startMileage: number | null
    endMileage: number | null
    totalMiles: number | null
  }

  export type MileageRecordSumAggregateOutputType = {
    startMileage: number | null
    endMileage: number | null
    totalMiles: number | null
  }

  export type MileageRecordMinAggregateOutputType = {
    id: string | null
    agencyId: string | null
    clientId: string | null
    userId: string | null
    date: Date | null
    startMileage: number | null
    endMileage: number | null
    totalMiles: number | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MileageRecordMaxAggregateOutputType = {
    id: string | null
    agencyId: string | null
    clientId: string | null
    userId: string | null
    date: Date | null
    startMileage: number | null
    endMileage: number | null
    totalMiles: number | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MileageRecordCountAggregateOutputType = {
    id: number
    agencyId: number
    clientId: number
    userId: number
    date: number
    startMileage: number
    endMileage: number
    totalMiles: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type MileageRecordAvgAggregateInputType = {
    startMileage?: true
    endMileage?: true
    totalMiles?: true
  }

  export type MileageRecordSumAggregateInputType = {
    startMileage?: true
    endMileage?: true
    totalMiles?: true
  }

  export type MileageRecordMinAggregateInputType = {
    id?: true
    agencyId?: true
    clientId?: true
    userId?: true
    date?: true
    startMileage?: true
    endMileage?: true
    totalMiles?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MileageRecordMaxAggregateInputType = {
    id?: true
    agencyId?: true
    clientId?: true
    userId?: true
    date?: true
    startMileage?: true
    endMileage?: true
    totalMiles?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MileageRecordCountAggregateInputType = {
    id?: true
    agencyId?: true
    clientId?: true
    userId?: true
    date?: true
    startMileage?: true
    endMileage?: true
    totalMiles?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type MileageRecordAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MileageRecord to aggregate.
     */
    where?: MileageRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MileageRecords to fetch.
     */
    orderBy?: MileageRecordOrderByWithRelationInput | MileageRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MileageRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MileageRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MileageRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MileageRecords
    **/
    _count?: true | MileageRecordCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MileageRecordAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MileageRecordSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MileageRecordMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MileageRecordMaxAggregateInputType
  }

  export type GetMileageRecordAggregateType<T extends MileageRecordAggregateArgs> = {
        [P in keyof T & keyof AggregateMileageRecord]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMileageRecord[P]>
      : GetScalarType<T[P], AggregateMileageRecord[P]>
  }




  export type MileageRecordGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MileageRecordWhereInput
    orderBy?: MileageRecordOrderByWithAggregationInput | MileageRecordOrderByWithAggregationInput[]
    by: MileageRecordScalarFieldEnum[] | MileageRecordScalarFieldEnum
    having?: MileageRecordScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MileageRecordCountAggregateInputType | true
    _avg?: MileageRecordAvgAggregateInputType
    _sum?: MileageRecordSumAggregateInputType
    _min?: MileageRecordMinAggregateInputType
    _max?: MileageRecordMaxAggregateInputType
  }

  export type MileageRecordGroupByOutputType = {
    id: string
    agencyId: string
    clientId: string
    userId: string
    date: Date
    startMileage: number
    endMileage: number
    totalMiles: number
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: MileageRecordCountAggregateOutputType | null
    _avg: MileageRecordAvgAggregateOutputType | null
    _sum: MileageRecordSumAggregateOutputType | null
    _min: MileageRecordMinAggregateOutputType | null
    _max: MileageRecordMaxAggregateOutputType | null
  }

  type GetMileageRecordGroupByPayload<T extends MileageRecordGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MileageRecordGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MileageRecordGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MileageRecordGroupByOutputType[P]>
            : GetScalarType<T[P], MileageRecordGroupByOutputType[P]>
        }
      >
    >


  export type MileageRecordSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    clientId?: boolean
    userId?: boolean
    date?: boolean
    startMileage?: boolean
    endMileage?: boolean
    totalMiles?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mileageRecord"]>

  export type MileageRecordSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    clientId?: boolean
    userId?: boolean
    date?: boolean
    startMileage?: boolean
    endMileage?: boolean
    totalMiles?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mileageRecord"]>

  export type MileageRecordSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    clientId?: boolean
    userId?: boolean
    date?: boolean
    startMileage?: boolean
    endMileage?: boolean
    totalMiles?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mileageRecord"]>

  export type MileageRecordSelectScalar = {
    id?: boolean
    agencyId?: boolean
    clientId?: boolean
    userId?: boolean
    date?: boolean
    startMileage?: boolean
    endMileage?: boolean
    totalMiles?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type MileageRecordOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "agencyId" | "clientId" | "userId" | "date" | "startMileage" | "endMileage" | "totalMiles" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["mileageRecord"]>
  export type MileageRecordInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MileageRecordIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MileageRecordIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MileageRecordPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MileageRecord"
    objects: {
      agency: Prisma.$AgencyPayload<ExtArgs>
      client: Prisma.$UserPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      User: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      agencyId: string
      clientId: string
      userId: string
      date: Date
      startMileage: number
      endMileage: number
      totalMiles: number
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["mileageRecord"]>
    composites: {}
  }

  type MileageRecordGetPayload<S extends boolean | null | undefined | MileageRecordDefaultArgs> = $Result.GetResult<Prisma.$MileageRecordPayload, S>

  type MileageRecordCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MileageRecordFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MileageRecordCountAggregateInputType | true
    }

  export interface MileageRecordDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MileageRecord'], meta: { name: 'MileageRecord' } }
    /**
     * Find zero or one MileageRecord that matches the filter.
     * @param {MileageRecordFindUniqueArgs} args - Arguments to find a MileageRecord
     * @example
     * // Get one MileageRecord
     * const mileageRecord = await prisma.mileageRecord.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MileageRecordFindUniqueArgs>(args: SelectSubset<T, MileageRecordFindUniqueArgs<ExtArgs>>): Prisma__MileageRecordClient<$Result.GetResult<Prisma.$MileageRecordPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MileageRecord that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MileageRecordFindUniqueOrThrowArgs} args - Arguments to find a MileageRecord
     * @example
     * // Get one MileageRecord
     * const mileageRecord = await prisma.mileageRecord.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MileageRecordFindUniqueOrThrowArgs>(args: SelectSubset<T, MileageRecordFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MileageRecordClient<$Result.GetResult<Prisma.$MileageRecordPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MileageRecord that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MileageRecordFindFirstArgs} args - Arguments to find a MileageRecord
     * @example
     * // Get one MileageRecord
     * const mileageRecord = await prisma.mileageRecord.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MileageRecordFindFirstArgs>(args?: SelectSubset<T, MileageRecordFindFirstArgs<ExtArgs>>): Prisma__MileageRecordClient<$Result.GetResult<Prisma.$MileageRecordPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MileageRecord that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MileageRecordFindFirstOrThrowArgs} args - Arguments to find a MileageRecord
     * @example
     * // Get one MileageRecord
     * const mileageRecord = await prisma.mileageRecord.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MileageRecordFindFirstOrThrowArgs>(args?: SelectSubset<T, MileageRecordFindFirstOrThrowArgs<ExtArgs>>): Prisma__MileageRecordClient<$Result.GetResult<Prisma.$MileageRecordPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MileageRecords that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MileageRecordFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MileageRecords
     * const mileageRecords = await prisma.mileageRecord.findMany()
     * 
     * // Get first 10 MileageRecords
     * const mileageRecords = await prisma.mileageRecord.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mileageRecordWithIdOnly = await prisma.mileageRecord.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MileageRecordFindManyArgs>(args?: SelectSubset<T, MileageRecordFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MileageRecordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MileageRecord.
     * @param {MileageRecordCreateArgs} args - Arguments to create a MileageRecord.
     * @example
     * // Create one MileageRecord
     * const MileageRecord = await prisma.mileageRecord.create({
     *   data: {
     *     // ... data to create a MileageRecord
     *   }
     * })
     * 
     */
    create<T extends MileageRecordCreateArgs>(args: SelectSubset<T, MileageRecordCreateArgs<ExtArgs>>): Prisma__MileageRecordClient<$Result.GetResult<Prisma.$MileageRecordPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MileageRecords.
     * @param {MileageRecordCreateManyArgs} args - Arguments to create many MileageRecords.
     * @example
     * // Create many MileageRecords
     * const mileageRecord = await prisma.mileageRecord.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MileageRecordCreateManyArgs>(args?: SelectSubset<T, MileageRecordCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MileageRecords and returns the data saved in the database.
     * @param {MileageRecordCreateManyAndReturnArgs} args - Arguments to create many MileageRecords.
     * @example
     * // Create many MileageRecords
     * const mileageRecord = await prisma.mileageRecord.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MileageRecords and only return the `id`
     * const mileageRecordWithIdOnly = await prisma.mileageRecord.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MileageRecordCreateManyAndReturnArgs>(args?: SelectSubset<T, MileageRecordCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MileageRecordPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MileageRecord.
     * @param {MileageRecordDeleteArgs} args - Arguments to delete one MileageRecord.
     * @example
     * // Delete one MileageRecord
     * const MileageRecord = await prisma.mileageRecord.delete({
     *   where: {
     *     // ... filter to delete one MileageRecord
     *   }
     * })
     * 
     */
    delete<T extends MileageRecordDeleteArgs>(args: SelectSubset<T, MileageRecordDeleteArgs<ExtArgs>>): Prisma__MileageRecordClient<$Result.GetResult<Prisma.$MileageRecordPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MileageRecord.
     * @param {MileageRecordUpdateArgs} args - Arguments to update one MileageRecord.
     * @example
     * // Update one MileageRecord
     * const mileageRecord = await prisma.mileageRecord.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MileageRecordUpdateArgs>(args: SelectSubset<T, MileageRecordUpdateArgs<ExtArgs>>): Prisma__MileageRecordClient<$Result.GetResult<Prisma.$MileageRecordPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MileageRecords.
     * @param {MileageRecordDeleteManyArgs} args - Arguments to filter MileageRecords to delete.
     * @example
     * // Delete a few MileageRecords
     * const { count } = await prisma.mileageRecord.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MileageRecordDeleteManyArgs>(args?: SelectSubset<T, MileageRecordDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MileageRecords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MileageRecordUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MileageRecords
     * const mileageRecord = await prisma.mileageRecord.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MileageRecordUpdateManyArgs>(args: SelectSubset<T, MileageRecordUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MileageRecords and returns the data updated in the database.
     * @param {MileageRecordUpdateManyAndReturnArgs} args - Arguments to update many MileageRecords.
     * @example
     * // Update many MileageRecords
     * const mileageRecord = await prisma.mileageRecord.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MileageRecords and only return the `id`
     * const mileageRecordWithIdOnly = await prisma.mileageRecord.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MileageRecordUpdateManyAndReturnArgs>(args: SelectSubset<T, MileageRecordUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MileageRecordPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MileageRecord.
     * @param {MileageRecordUpsertArgs} args - Arguments to update or create a MileageRecord.
     * @example
     * // Update or create a MileageRecord
     * const mileageRecord = await prisma.mileageRecord.upsert({
     *   create: {
     *     // ... data to create a MileageRecord
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MileageRecord we want to update
     *   }
     * })
     */
    upsert<T extends MileageRecordUpsertArgs>(args: SelectSubset<T, MileageRecordUpsertArgs<ExtArgs>>): Prisma__MileageRecordClient<$Result.GetResult<Prisma.$MileageRecordPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MileageRecords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MileageRecordCountArgs} args - Arguments to filter MileageRecords to count.
     * @example
     * // Count the number of MileageRecords
     * const count = await prisma.mileageRecord.count({
     *   where: {
     *     // ... the filter for the MileageRecords we want to count
     *   }
     * })
    **/
    count<T extends MileageRecordCountArgs>(
      args?: Subset<T, MileageRecordCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MileageRecordCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MileageRecord.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MileageRecordAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MileageRecordAggregateArgs>(args: Subset<T, MileageRecordAggregateArgs>): Prisma.PrismaPromise<GetMileageRecordAggregateType<T>>

    /**
     * Group by MileageRecord.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MileageRecordGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MileageRecordGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MileageRecordGroupByArgs['orderBy'] }
        : { orderBy?: MileageRecordGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MileageRecordGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMileageRecordGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MileageRecord model
   */
  readonly fields: MileageRecordFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MileageRecord.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MileageRecordClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agency<T extends AgencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyDefaultArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    client<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MileageRecord model
   */ 
  interface MileageRecordFieldRefs {
    readonly id: FieldRef<"MileageRecord", 'String'>
    readonly agencyId: FieldRef<"MileageRecord", 'String'>
    readonly clientId: FieldRef<"MileageRecord", 'String'>
    readonly userId: FieldRef<"MileageRecord", 'String'>
    readonly date: FieldRef<"MileageRecord", 'DateTime'>
    readonly startMileage: FieldRef<"MileageRecord", 'Float'>
    readonly endMileage: FieldRef<"MileageRecord", 'Float'>
    readonly totalMiles: FieldRef<"MileageRecord", 'Float'>
    readonly notes: FieldRef<"MileageRecord", 'String'>
    readonly createdAt: FieldRef<"MileageRecord", 'DateTime'>
    readonly updatedAt: FieldRef<"MileageRecord", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MileageRecord findUnique
   */
  export type MileageRecordFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MileageRecord
     */
    select?: MileageRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MileageRecord
     */
    omit?: MileageRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MileageRecordInclude<ExtArgs> | null
    /**
     * Filter, which MileageRecord to fetch.
     */
    where: MileageRecordWhereUniqueInput
  }

  /**
   * MileageRecord findUniqueOrThrow
   */
  export type MileageRecordFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MileageRecord
     */
    select?: MileageRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MileageRecord
     */
    omit?: MileageRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MileageRecordInclude<ExtArgs> | null
    /**
     * Filter, which MileageRecord to fetch.
     */
    where: MileageRecordWhereUniqueInput
  }

  /**
   * MileageRecord findFirst
   */
  export type MileageRecordFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MileageRecord
     */
    select?: MileageRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MileageRecord
     */
    omit?: MileageRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MileageRecordInclude<ExtArgs> | null
    /**
     * Filter, which MileageRecord to fetch.
     */
    where?: MileageRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MileageRecords to fetch.
     */
    orderBy?: MileageRecordOrderByWithRelationInput | MileageRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MileageRecords.
     */
    cursor?: MileageRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MileageRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MileageRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MileageRecords.
     */
    distinct?: MileageRecordScalarFieldEnum | MileageRecordScalarFieldEnum[]
  }

  /**
   * MileageRecord findFirstOrThrow
   */
  export type MileageRecordFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MileageRecord
     */
    select?: MileageRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MileageRecord
     */
    omit?: MileageRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MileageRecordInclude<ExtArgs> | null
    /**
     * Filter, which MileageRecord to fetch.
     */
    where?: MileageRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MileageRecords to fetch.
     */
    orderBy?: MileageRecordOrderByWithRelationInput | MileageRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MileageRecords.
     */
    cursor?: MileageRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MileageRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MileageRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MileageRecords.
     */
    distinct?: MileageRecordScalarFieldEnum | MileageRecordScalarFieldEnum[]
  }

  /**
   * MileageRecord findMany
   */
  export type MileageRecordFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MileageRecord
     */
    select?: MileageRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MileageRecord
     */
    omit?: MileageRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MileageRecordInclude<ExtArgs> | null
    /**
     * Filter, which MileageRecords to fetch.
     */
    where?: MileageRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MileageRecords to fetch.
     */
    orderBy?: MileageRecordOrderByWithRelationInput | MileageRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MileageRecords.
     */
    cursor?: MileageRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MileageRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MileageRecords.
     */
    skip?: number
    distinct?: MileageRecordScalarFieldEnum | MileageRecordScalarFieldEnum[]
  }

  /**
   * MileageRecord create
   */
  export type MileageRecordCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MileageRecord
     */
    select?: MileageRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MileageRecord
     */
    omit?: MileageRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MileageRecordInclude<ExtArgs> | null
    /**
     * The data needed to create a MileageRecord.
     */
    data: XOR<MileageRecordCreateInput, MileageRecordUncheckedCreateInput>
  }

  /**
   * MileageRecord createMany
   */
  export type MileageRecordCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MileageRecords.
     */
    data: MileageRecordCreateManyInput | MileageRecordCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MileageRecord createManyAndReturn
   */
  export type MileageRecordCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MileageRecord
     */
    select?: MileageRecordSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MileageRecord
     */
    omit?: MileageRecordOmit<ExtArgs> | null
    /**
     * The data used to create many MileageRecords.
     */
    data: MileageRecordCreateManyInput | MileageRecordCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MileageRecordIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MileageRecord update
   */
  export type MileageRecordUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MileageRecord
     */
    select?: MileageRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MileageRecord
     */
    omit?: MileageRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MileageRecordInclude<ExtArgs> | null
    /**
     * The data needed to update a MileageRecord.
     */
    data: XOR<MileageRecordUpdateInput, MileageRecordUncheckedUpdateInput>
    /**
     * Choose, which MileageRecord to update.
     */
    where: MileageRecordWhereUniqueInput
  }

  /**
   * MileageRecord updateMany
   */
  export type MileageRecordUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MileageRecords.
     */
    data: XOR<MileageRecordUpdateManyMutationInput, MileageRecordUncheckedUpdateManyInput>
    /**
     * Filter which MileageRecords to update
     */
    where?: MileageRecordWhereInput
    /**
     * Limit how many MileageRecords to update.
     */
    limit?: number
  }

  /**
   * MileageRecord updateManyAndReturn
   */
  export type MileageRecordUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MileageRecord
     */
    select?: MileageRecordSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MileageRecord
     */
    omit?: MileageRecordOmit<ExtArgs> | null
    /**
     * The data used to update MileageRecords.
     */
    data: XOR<MileageRecordUpdateManyMutationInput, MileageRecordUncheckedUpdateManyInput>
    /**
     * Filter which MileageRecords to update
     */
    where?: MileageRecordWhereInput
    /**
     * Limit how many MileageRecords to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MileageRecordIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MileageRecord upsert
   */
  export type MileageRecordUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MileageRecord
     */
    select?: MileageRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MileageRecord
     */
    omit?: MileageRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MileageRecordInclude<ExtArgs> | null
    /**
     * The filter to search for the MileageRecord to update in case it exists.
     */
    where: MileageRecordWhereUniqueInput
    /**
     * In case the MileageRecord found by the `where` argument doesn't exist, create a new MileageRecord with this data.
     */
    create: XOR<MileageRecordCreateInput, MileageRecordUncheckedCreateInput>
    /**
     * In case the MileageRecord was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MileageRecordUpdateInput, MileageRecordUncheckedUpdateInput>
  }

  /**
   * MileageRecord delete
   */
  export type MileageRecordDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MileageRecord
     */
    select?: MileageRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MileageRecord
     */
    omit?: MileageRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MileageRecordInclude<ExtArgs> | null
    /**
     * Filter which MileageRecord to delete.
     */
    where: MileageRecordWhereUniqueInput
  }

  /**
   * MileageRecord deleteMany
   */
  export type MileageRecordDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MileageRecords to delete
     */
    where?: MileageRecordWhereInput
    /**
     * Limit how many MileageRecords to delete.
     */
    limit?: number
  }

  /**
   * MileageRecord without action
   */
  export type MileageRecordDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MileageRecord
     */
    select?: MileageRecordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MileageRecord
     */
    omit?: MileageRecordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MileageRecordInclude<ExtArgs> | null
  }


  /**
   * Model Document
   */

  export type AggregateDocument = {
    _count: DocumentCountAggregateOutputType | null
    _min: DocumentMinAggregateOutputType | null
    _max: DocumentMaxAggregateOutputType | null
  }

  export type DocumentMinAggregateOutputType = {
    id: string | null
    title: string | null
    fileUrl: string | null
    uploadedAt: Date | null
    userId: string | null
    clientId: string | null
    agencyId: string | null
  }

  export type DocumentMaxAggregateOutputType = {
    id: string | null
    title: string | null
    fileUrl: string | null
    uploadedAt: Date | null
    userId: string | null
    clientId: string | null
    agencyId: string | null
  }

  export type DocumentCountAggregateOutputType = {
    id: number
    title: number
    fileUrl: number
    uploadedAt: number
    userId: number
    clientId: number
    agencyId: number
    _all: number
  }


  export type DocumentMinAggregateInputType = {
    id?: true
    title?: true
    fileUrl?: true
    uploadedAt?: true
    userId?: true
    clientId?: true
    agencyId?: true
  }

  export type DocumentMaxAggregateInputType = {
    id?: true
    title?: true
    fileUrl?: true
    uploadedAt?: true
    userId?: true
    clientId?: true
    agencyId?: true
  }

  export type DocumentCountAggregateInputType = {
    id?: true
    title?: true
    fileUrl?: true
    uploadedAt?: true
    userId?: true
    clientId?: true
    agencyId?: true
    _all?: true
  }

  export type DocumentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Document to aggregate.
     */
    where?: DocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documents to fetch.
     */
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Documents
    **/
    _count?: true | DocumentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DocumentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DocumentMaxAggregateInputType
  }

  export type GetDocumentAggregateType<T extends DocumentAggregateArgs> = {
        [P in keyof T & keyof AggregateDocument]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocument[P]>
      : GetScalarType<T[P], AggregateDocument[P]>
  }




  export type DocumentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentWhereInput
    orderBy?: DocumentOrderByWithAggregationInput | DocumentOrderByWithAggregationInput[]
    by: DocumentScalarFieldEnum[] | DocumentScalarFieldEnum
    having?: DocumentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DocumentCountAggregateInputType | true
    _min?: DocumentMinAggregateInputType
    _max?: DocumentMaxAggregateInputType
  }

  export type DocumentGroupByOutputType = {
    id: string
    title: string
    fileUrl: string
    uploadedAt: Date
    userId: string | null
    clientId: string | null
    agencyId: string | null
    _count: DocumentCountAggregateOutputType | null
    _min: DocumentMinAggregateOutputType | null
    _max: DocumentMaxAggregateOutputType | null
  }

  type GetDocumentGroupByPayload<T extends DocumentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DocumentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DocumentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DocumentGroupByOutputType[P]>
            : GetScalarType<T[P], DocumentGroupByOutputType[P]>
        }
      >
    >


  export type DocumentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    fileUrl?: boolean
    uploadedAt?: boolean
    userId?: boolean
    clientId?: boolean
    agencyId?: boolean
    user?: boolean | Document$userArgs<ExtArgs>
    client?: boolean | Document$clientArgs<ExtArgs>
    agency?: boolean | Document$agencyArgs<ExtArgs>
  }, ExtArgs["result"]["document"]>

  export type DocumentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    fileUrl?: boolean
    uploadedAt?: boolean
    userId?: boolean
    clientId?: boolean
    agencyId?: boolean
    user?: boolean | Document$userArgs<ExtArgs>
    client?: boolean | Document$clientArgs<ExtArgs>
    agency?: boolean | Document$agencyArgs<ExtArgs>
  }, ExtArgs["result"]["document"]>

  export type DocumentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    fileUrl?: boolean
    uploadedAt?: boolean
    userId?: boolean
    clientId?: boolean
    agencyId?: boolean
    user?: boolean | Document$userArgs<ExtArgs>
    client?: boolean | Document$clientArgs<ExtArgs>
    agency?: boolean | Document$agencyArgs<ExtArgs>
  }, ExtArgs["result"]["document"]>

  export type DocumentSelectScalar = {
    id?: boolean
    title?: boolean
    fileUrl?: boolean
    uploadedAt?: boolean
    userId?: boolean
    clientId?: boolean
    agencyId?: boolean
  }

  export type DocumentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "fileUrl" | "uploadedAt" | "userId" | "clientId" | "agencyId", ExtArgs["result"]["document"]>
  export type DocumentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Document$userArgs<ExtArgs>
    client?: boolean | Document$clientArgs<ExtArgs>
    agency?: boolean | Document$agencyArgs<ExtArgs>
  }
  export type DocumentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Document$userArgs<ExtArgs>
    client?: boolean | Document$clientArgs<ExtArgs>
    agency?: boolean | Document$agencyArgs<ExtArgs>
  }
  export type DocumentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Document$userArgs<ExtArgs>
    client?: boolean | Document$clientArgs<ExtArgs>
    agency?: boolean | Document$agencyArgs<ExtArgs>
  }

  export type $DocumentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Document"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
      client: Prisma.$UserPayload<ExtArgs> | null
      agency: Prisma.$AgencyPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      fileUrl: string
      uploadedAt: Date
      userId: string | null
      clientId: string | null
      agencyId: string | null
    }, ExtArgs["result"]["document"]>
    composites: {}
  }

  type DocumentGetPayload<S extends boolean | null | undefined | DocumentDefaultArgs> = $Result.GetResult<Prisma.$DocumentPayload, S>

  type DocumentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DocumentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DocumentCountAggregateInputType | true
    }

  export interface DocumentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Document'], meta: { name: 'Document' } }
    /**
     * Find zero or one Document that matches the filter.
     * @param {DocumentFindUniqueArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DocumentFindUniqueArgs>(args: SelectSubset<T, DocumentFindUniqueArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Document that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DocumentFindUniqueOrThrowArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DocumentFindUniqueOrThrowArgs>(args: SelectSubset<T, DocumentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Document that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentFindFirstArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DocumentFindFirstArgs>(args?: SelectSubset<T, DocumentFindFirstArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Document that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentFindFirstOrThrowArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DocumentFindFirstOrThrowArgs>(args?: SelectSubset<T, DocumentFindFirstOrThrowArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Documents
     * const documents = await prisma.document.findMany()
     * 
     * // Get first 10 Documents
     * const documents = await prisma.document.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const documentWithIdOnly = await prisma.document.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DocumentFindManyArgs>(args?: SelectSubset<T, DocumentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Document.
     * @param {DocumentCreateArgs} args - Arguments to create a Document.
     * @example
     * // Create one Document
     * const Document = await prisma.document.create({
     *   data: {
     *     // ... data to create a Document
     *   }
     * })
     * 
     */
    create<T extends DocumentCreateArgs>(args: SelectSubset<T, DocumentCreateArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Documents.
     * @param {DocumentCreateManyArgs} args - Arguments to create many Documents.
     * @example
     * // Create many Documents
     * const document = await prisma.document.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DocumentCreateManyArgs>(args?: SelectSubset<T, DocumentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Documents and returns the data saved in the database.
     * @param {DocumentCreateManyAndReturnArgs} args - Arguments to create many Documents.
     * @example
     * // Create many Documents
     * const document = await prisma.document.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Documents and only return the `id`
     * const documentWithIdOnly = await prisma.document.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DocumentCreateManyAndReturnArgs>(args?: SelectSubset<T, DocumentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Document.
     * @param {DocumentDeleteArgs} args - Arguments to delete one Document.
     * @example
     * // Delete one Document
     * const Document = await prisma.document.delete({
     *   where: {
     *     // ... filter to delete one Document
     *   }
     * })
     * 
     */
    delete<T extends DocumentDeleteArgs>(args: SelectSubset<T, DocumentDeleteArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Document.
     * @param {DocumentUpdateArgs} args - Arguments to update one Document.
     * @example
     * // Update one Document
     * const document = await prisma.document.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DocumentUpdateArgs>(args: SelectSubset<T, DocumentUpdateArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Documents.
     * @param {DocumentDeleteManyArgs} args - Arguments to filter Documents to delete.
     * @example
     * // Delete a few Documents
     * const { count } = await prisma.document.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DocumentDeleteManyArgs>(args?: SelectSubset<T, DocumentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Documents
     * const document = await prisma.document.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DocumentUpdateManyArgs>(args: SelectSubset<T, DocumentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Documents and returns the data updated in the database.
     * @param {DocumentUpdateManyAndReturnArgs} args - Arguments to update many Documents.
     * @example
     * // Update many Documents
     * const document = await prisma.document.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Documents and only return the `id`
     * const documentWithIdOnly = await prisma.document.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DocumentUpdateManyAndReturnArgs>(args: SelectSubset<T, DocumentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Document.
     * @param {DocumentUpsertArgs} args - Arguments to update or create a Document.
     * @example
     * // Update or create a Document
     * const document = await prisma.document.upsert({
     *   create: {
     *     // ... data to create a Document
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Document we want to update
     *   }
     * })
     */
    upsert<T extends DocumentUpsertArgs>(args: SelectSubset<T, DocumentUpsertArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentCountArgs} args - Arguments to filter Documents to count.
     * @example
     * // Count the number of Documents
     * const count = await prisma.document.count({
     *   where: {
     *     // ... the filter for the Documents we want to count
     *   }
     * })
    **/
    count<T extends DocumentCountArgs>(
      args?: Subset<T, DocumentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DocumentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Document.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DocumentAggregateArgs>(args: Subset<T, DocumentAggregateArgs>): Prisma.PrismaPromise<GetDocumentAggregateType<T>>

    /**
     * Group by Document.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DocumentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DocumentGroupByArgs['orderBy'] }
        : { orderBy?: DocumentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DocumentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocumentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Document model
   */
  readonly fields: DocumentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Document.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DocumentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends Document$userArgs<ExtArgs> = {}>(args?: Subset<T, Document$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    client<T extends Document$clientArgs<ExtArgs> = {}>(args?: Subset<T, Document$clientArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    agency<T extends Document$agencyArgs<ExtArgs> = {}>(args?: Subset<T, Document$agencyArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Document model
   */ 
  interface DocumentFieldRefs {
    readonly id: FieldRef<"Document", 'String'>
    readonly title: FieldRef<"Document", 'String'>
    readonly fileUrl: FieldRef<"Document", 'String'>
    readonly uploadedAt: FieldRef<"Document", 'DateTime'>
    readonly userId: FieldRef<"Document", 'String'>
    readonly clientId: FieldRef<"Document", 'String'>
    readonly agencyId: FieldRef<"Document", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Document findUnique
   */
  export type DocumentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Document to fetch.
     */
    where: DocumentWhereUniqueInput
  }

  /**
   * Document findUniqueOrThrow
   */
  export type DocumentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Document to fetch.
     */
    where: DocumentWhereUniqueInput
  }

  /**
   * Document findFirst
   */
  export type DocumentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Document to fetch.
     */
    where?: DocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documents to fetch.
     */
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Documents.
     */
    cursor?: DocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Documents.
     */
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Document findFirstOrThrow
   */
  export type DocumentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Document to fetch.
     */
    where?: DocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documents to fetch.
     */
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Documents.
     */
    cursor?: DocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Documents.
     */
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Document findMany
   */
  export type DocumentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Documents to fetch.
     */
    where?: DocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documents to fetch.
     */
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Documents.
     */
    cursor?: DocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documents.
     */
    skip?: number
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Document create
   */
  export type DocumentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * The data needed to create a Document.
     */
    data: XOR<DocumentCreateInput, DocumentUncheckedCreateInput>
  }

  /**
   * Document createMany
   */
  export type DocumentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Documents.
     */
    data: DocumentCreateManyInput | DocumentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Document createManyAndReturn
   */
  export type DocumentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * The data used to create many Documents.
     */
    data: DocumentCreateManyInput | DocumentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Document update
   */
  export type DocumentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * The data needed to update a Document.
     */
    data: XOR<DocumentUpdateInput, DocumentUncheckedUpdateInput>
    /**
     * Choose, which Document to update.
     */
    where: DocumentWhereUniqueInput
  }

  /**
   * Document updateMany
   */
  export type DocumentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Documents.
     */
    data: XOR<DocumentUpdateManyMutationInput, DocumentUncheckedUpdateManyInput>
    /**
     * Filter which Documents to update
     */
    where?: DocumentWhereInput
    /**
     * Limit how many Documents to update.
     */
    limit?: number
  }

  /**
   * Document updateManyAndReturn
   */
  export type DocumentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * The data used to update Documents.
     */
    data: XOR<DocumentUpdateManyMutationInput, DocumentUncheckedUpdateManyInput>
    /**
     * Filter which Documents to update
     */
    where?: DocumentWhereInput
    /**
     * Limit how many Documents to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Document upsert
   */
  export type DocumentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * The filter to search for the Document to update in case it exists.
     */
    where: DocumentWhereUniqueInput
    /**
     * In case the Document found by the `where` argument doesn't exist, create a new Document with this data.
     */
    create: XOR<DocumentCreateInput, DocumentUncheckedCreateInput>
    /**
     * In case the Document was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DocumentUpdateInput, DocumentUncheckedUpdateInput>
  }

  /**
   * Document delete
   */
  export type DocumentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter which Document to delete.
     */
    where: DocumentWhereUniqueInput
  }

  /**
   * Document deleteMany
   */
  export type DocumentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Documents to delete
     */
    where?: DocumentWhereInput
    /**
     * Limit how many Documents to delete.
     */
    limit?: number
  }

  /**
   * Document.user
   */
  export type Document$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Document.client
   */
  export type Document$clientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Document.agency
   */
  export type Document$agencyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    where?: AgencyWhereInput
  }

  /**
   * Document without action
   */
  export type DocumentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
  }


  /**
   * Model Profile
   */

  export type AggregateProfile = {
    _count: ProfileCountAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  export type ProfileMinAggregateOutputType = {
    id: string | null
    userId: string | null
    phone: string | null
    avatarUrl: string | null
    address: string | null
  }

  export type ProfileMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    phone: string | null
    avatarUrl: string | null
    address: string | null
  }

  export type ProfileCountAggregateOutputType = {
    id: number
    userId: number
    phone: number
    avatarUrl: number
    address: number
    _all: number
  }


  export type ProfileMinAggregateInputType = {
    id?: true
    userId?: true
    phone?: true
    avatarUrl?: true
    address?: true
  }

  export type ProfileMaxAggregateInputType = {
    id?: true
    userId?: true
    phone?: true
    avatarUrl?: true
    address?: true
  }

  export type ProfileCountAggregateInputType = {
    id?: true
    userId?: true
    phone?: true
    avatarUrl?: true
    address?: true
    _all?: true
  }

  export type ProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Profile to aggregate.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Profiles
    **/
    _count?: true | ProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProfileMaxAggregateInputType
  }

  export type GetProfileAggregateType<T extends ProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProfile[P]>
      : GetScalarType<T[P], AggregateProfile[P]>
  }




  export type ProfileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfileWhereInput
    orderBy?: ProfileOrderByWithAggregationInput | ProfileOrderByWithAggregationInput[]
    by: ProfileScalarFieldEnum[] | ProfileScalarFieldEnum
    having?: ProfileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProfileCountAggregateInputType | true
    _min?: ProfileMinAggregateInputType
    _max?: ProfileMaxAggregateInputType
  }

  export type ProfileGroupByOutputType = {
    id: string
    userId: string
    phone: string | null
    avatarUrl: string | null
    address: string | null
    _count: ProfileCountAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  type GetProfileGroupByPayload<T extends ProfileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProfileGroupByOutputType[P]>
            : GetScalarType<T[P], ProfileGroupByOutputType[P]>
        }
      >
    >


  export type ProfileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    phone?: boolean
    avatarUrl?: boolean
    address?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>

  export type ProfileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    phone?: boolean
    avatarUrl?: boolean
    address?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>

  export type ProfileSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    phone?: boolean
    avatarUrl?: boolean
    address?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>

  export type ProfileSelectScalar = {
    id?: boolean
    userId?: boolean
    phone?: boolean
    avatarUrl?: boolean
    address?: boolean
  }

  export type ProfileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "phone" | "avatarUrl" | "address", ExtArgs["result"]["profile"]>
  export type ProfileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProfileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProfileIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ProfilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Profile"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      phone: string | null
      avatarUrl: string | null
      address: string | null
    }, ExtArgs["result"]["profile"]>
    composites: {}
  }

  type ProfileGetPayload<S extends boolean | null | undefined | ProfileDefaultArgs> = $Result.GetResult<Prisma.$ProfilePayload, S>

  type ProfileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProfileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProfileCountAggregateInputType | true
    }

  export interface ProfileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Profile'], meta: { name: 'Profile' } }
    /**
     * Find zero or one Profile that matches the filter.
     * @param {ProfileFindUniqueArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProfileFindUniqueArgs>(args: SelectSubset<T, ProfileFindUniqueArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Profile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProfileFindUniqueOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProfileFindUniqueOrThrowArgs>(args: SelectSubset<T, ProfileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindFirstArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProfileFindFirstArgs>(args?: SelectSubset<T, ProfileFindFirstArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindFirstOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProfileFindFirstOrThrowArgs>(args?: SelectSubset<T, ProfileFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Profiles
     * const profiles = await prisma.profile.findMany()
     * 
     * // Get first 10 Profiles
     * const profiles = await prisma.profile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const profileWithIdOnly = await prisma.profile.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProfileFindManyArgs>(args?: SelectSubset<T, ProfileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Profile.
     * @param {ProfileCreateArgs} args - Arguments to create a Profile.
     * @example
     * // Create one Profile
     * const Profile = await prisma.profile.create({
     *   data: {
     *     // ... data to create a Profile
     *   }
     * })
     * 
     */
    create<T extends ProfileCreateArgs>(args: SelectSubset<T, ProfileCreateArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Profiles.
     * @param {ProfileCreateManyArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profile = await prisma.profile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProfileCreateManyArgs>(args?: SelectSubset<T, ProfileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Profiles and returns the data saved in the database.
     * @param {ProfileCreateManyAndReturnArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profile = await prisma.profile.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Profiles and only return the `id`
     * const profileWithIdOnly = await prisma.profile.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProfileCreateManyAndReturnArgs>(args?: SelectSubset<T, ProfileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Profile.
     * @param {ProfileDeleteArgs} args - Arguments to delete one Profile.
     * @example
     * // Delete one Profile
     * const Profile = await prisma.profile.delete({
     *   where: {
     *     // ... filter to delete one Profile
     *   }
     * })
     * 
     */
    delete<T extends ProfileDeleteArgs>(args: SelectSubset<T, ProfileDeleteArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Profile.
     * @param {ProfileUpdateArgs} args - Arguments to update one Profile.
     * @example
     * // Update one Profile
     * const profile = await prisma.profile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProfileUpdateArgs>(args: SelectSubset<T, ProfileUpdateArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Profiles.
     * @param {ProfileDeleteManyArgs} args - Arguments to filter Profiles to delete.
     * @example
     * // Delete a few Profiles
     * const { count } = await prisma.profile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProfileDeleteManyArgs>(args?: SelectSubset<T, ProfileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Profiles
     * const profile = await prisma.profile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProfileUpdateManyArgs>(args: SelectSubset<T, ProfileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles and returns the data updated in the database.
     * @param {ProfileUpdateManyAndReturnArgs} args - Arguments to update many Profiles.
     * @example
     * // Update many Profiles
     * const profile = await prisma.profile.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Profiles and only return the `id`
     * const profileWithIdOnly = await prisma.profile.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProfileUpdateManyAndReturnArgs>(args: SelectSubset<T, ProfileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Profile.
     * @param {ProfileUpsertArgs} args - Arguments to update or create a Profile.
     * @example
     * // Update or create a Profile
     * const profile = await prisma.profile.upsert({
     *   create: {
     *     // ... data to create a Profile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Profile we want to update
     *   }
     * })
     */
    upsert<T extends ProfileUpsertArgs>(args: SelectSubset<T, ProfileUpsertArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileCountArgs} args - Arguments to filter Profiles to count.
     * @example
     * // Count the number of Profiles
     * const count = await prisma.profile.count({
     *   where: {
     *     // ... the filter for the Profiles we want to count
     *   }
     * })
    **/
    count<T extends ProfileCountArgs>(
      args?: Subset<T, ProfileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProfileAggregateArgs>(args: Subset<T, ProfileAggregateArgs>): Prisma.PrismaPromise<GetProfileAggregateType<T>>

    /**
     * Group by Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProfileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProfileGroupByArgs['orderBy'] }
        : { orderBy?: ProfileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Profile model
   */
  readonly fields: ProfileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Profile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProfileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Profile model
   */ 
  interface ProfileFieldRefs {
    readonly id: FieldRef<"Profile", 'String'>
    readonly userId: FieldRef<"Profile", 'String'>
    readonly phone: FieldRef<"Profile", 'String'>
    readonly avatarUrl: FieldRef<"Profile", 'String'>
    readonly address: FieldRef<"Profile", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Profile findUnique
   */
  export type ProfileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile findUniqueOrThrow
   */
  export type ProfileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile findFirst
   */
  export type ProfileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile findFirstOrThrow
   */
  export type ProfileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile findMany
   */
  export type ProfileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profiles to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile create
   */
  export type ProfileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The data needed to create a Profile.
     */
    data: XOR<ProfileCreateInput, ProfileUncheckedCreateInput>
  }

  /**
   * Profile createMany
   */
  export type ProfileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Profiles.
     */
    data: ProfileCreateManyInput | ProfileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Profile createManyAndReturn
   */
  export type ProfileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * The data used to create many Profiles.
     */
    data: ProfileCreateManyInput | ProfileCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Profile update
   */
  export type ProfileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The data needed to update a Profile.
     */
    data: XOR<ProfileUpdateInput, ProfileUncheckedUpdateInput>
    /**
     * Choose, which Profile to update.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile updateMany
   */
  export type ProfileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Profiles.
     */
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyInput>
    /**
     * Filter which Profiles to update
     */
    where?: ProfileWhereInput
    /**
     * Limit how many Profiles to update.
     */
    limit?: number
  }

  /**
   * Profile updateManyAndReturn
   */
  export type ProfileUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * The data used to update Profiles.
     */
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyInput>
    /**
     * Filter which Profiles to update
     */
    where?: ProfileWhereInput
    /**
     * Limit how many Profiles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Profile upsert
   */
  export type ProfileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The filter to search for the Profile to update in case it exists.
     */
    where: ProfileWhereUniqueInput
    /**
     * In case the Profile found by the `where` argument doesn't exist, create a new Profile with this data.
     */
    create: XOR<ProfileCreateInput, ProfileUncheckedCreateInput>
    /**
     * In case the Profile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProfileUpdateInput, ProfileUncheckedUpdateInput>
  }

  /**
   * Profile delete
   */
  export type ProfileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter which Profile to delete.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile deleteMany
   */
  export type ProfileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Profiles to delete
     */
    where?: ProfileWhereInput
    /**
     * Limit how many Profiles to delete.
     */
    limit?: number
  }

  /**
   * Profile without action
   */
  export type ProfileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
  }


  /**
   * Model IncidentReport
   */

  export type AggregateIncidentReport = {
    _count: IncidentReportCountAggregateOutputType | null
    _min: IncidentReportMinAggregateOutputType | null
    _max: IncidentReportMaxAggregateOutputType | null
  }

  export type IncidentReportMinAggregateOutputType = {
    id: string | null
    reporterId: string | null
    agencyId: string | null
    description: string | null
    severity: $Enums.SeverityLevel | null
    reportedAt: Date | null
  }

  export type IncidentReportMaxAggregateOutputType = {
    id: string | null
    reporterId: string | null
    agencyId: string | null
    description: string | null
    severity: $Enums.SeverityLevel | null
    reportedAt: Date | null
  }

  export type IncidentReportCountAggregateOutputType = {
    id: number
    reporterId: number
    agencyId: number
    description: number
    severity: number
    reportedAt: number
    _all: number
  }


  export type IncidentReportMinAggregateInputType = {
    id?: true
    reporterId?: true
    agencyId?: true
    description?: true
    severity?: true
    reportedAt?: true
  }

  export type IncidentReportMaxAggregateInputType = {
    id?: true
    reporterId?: true
    agencyId?: true
    description?: true
    severity?: true
    reportedAt?: true
  }

  export type IncidentReportCountAggregateInputType = {
    id?: true
    reporterId?: true
    agencyId?: true
    description?: true
    severity?: true
    reportedAt?: true
    _all?: true
  }

  export type IncidentReportAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which IncidentReport to aggregate.
     */
    where?: IncidentReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IncidentReports to fetch.
     */
    orderBy?: IncidentReportOrderByWithRelationInput | IncidentReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: IncidentReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IncidentReports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IncidentReports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned IncidentReports
    **/
    _count?: true | IncidentReportCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IncidentReportMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IncidentReportMaxAggregateInputType
  }

  export type GetIncidentReportAggregateType<T extends IncidentReportAggregateArgs> = {
        [P in keyof T & keyof AggregateIncidentReport]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIncidentReport[P]>
      : GetScalarType<T[P], AggregateIncidentReport[P]>
  }




  export type IncidentReportGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IncidentReportWhereInput
    orderBy?: IncidentReportOrderByWithAggregationInput | IncidentReportOrderByWithAggregationInput[]
    by: IncidentReportScalarFieldEnum[] | IncidentReportScalarFieldEnum
    having?: IncidentReportScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IncidentReportCountAggregateInputType | true
    _min?: IncidentReportMinAggregateInputType
    _max?: IncidentReportMaxAggregateInputType
  }

  export type IncidentReportGroupByOutputType = {
    id: string
    reporterId: string
    agencyId: string
    description: string
    severity: $Enums.SeverityLevel
    reportedAt: Date
    _count: IncidentReportCountAggregateOutputType | null
    _min: IncidentReportMinAggregateOutputType | null
    _max: IncidentReportMaxAggregateOutputType | null
  }

  type GetIncidentReportGroupByPayload<T extends IncidentReportGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IncidentReportGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IncidentReportGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IncidentReportGroupByOutputType[P]>
            : GetScalarType<T[P], IncidentReportGroupByOutputType[P]>
        }
      >
    >


  export type IncidentReportSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reporterId?: boolean
    agencyId?: boolean
    description?: boolean
    severity?: boolean
    reportedAt?: boolean
    reporter?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["incidentReport"]>

  export type IncidentReportSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reporterId?: boolean
    agencyId?: boolean
    description?: boolean
    severity?: boolean
    reportedAt?: boolean
    reporter?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["incidentReport"]>

  export type IncidentReportSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reporterId?: boolean
    agencyId?: boolean
    description?: boolean
    severity?: boolean
    reportedAt?: boolean
    reporter?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["incidentReport"]>

  export type IncidentReportSelectScalar = {
    id?: boolean
    reporterId?: boolean
    agencyId?: boolean
    description?: boolean
    severity?: boolean
    reportedAt?: boolean
  }

  export type IncidentReportOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "reporterId" | "agencyId" | "description" | "severity" | "reportedAt", ExtArgs["result"]["incidentReport"]>
  export type IncidentReportInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reporter?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }
  export type IncidentReportIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reporter?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }
  export type IncidentReportIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reporter?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }

  export type $IncidentReportPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "IncidentReport"
    objects: {
      reporter: Prisma.$UserPayload<ExtArgs>
      agency: Prisma.$AgencyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      reporterId: string
      agencyId: string
      description: string
      severity: $Enums.SeverityLevel
      reportedAt: Date
    }, ExtArgs["result"]["incidentReport"]>
    composites: {}
  }

  type IncidentReportGetPayload<S extends boolean | null | undefined | IncidentReportDefaultArgs> = $Result.GetResult<Prisma.$IncidentReportPayload, S>

  type IncidentReportCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<IncidentReportFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: IncidentReportCountAggregateInputType | true
    }

  export interface IncidentReportDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['IncidentReport'], meta: { name: 'IncidentReport' } }
    /**
     * Find zero or one IncidentReport that matches the filter.
     * @param {IncidentReportFindUniqueArgs} args - Arguments to find a IncidentReport
     * @example
     * // Get one IncidentReport
     * const incidentReport = await prisma.incidentReport.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends IncidentReportFindUniqueArgs>(args: SelectSubset<T, IncidentReportFindUniqueArgs<ExtArgs>>): Prisma__IncidentReportClient<$Result.GetResult<Prisma.$IncidentReportPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one IncidentReport that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {IncidentReportFindUniqueOrThrowArgs} args - Arguments to find a IncidentReport
     * @example
     * // Get one IncidentReport
     * const incidentReport = await prisma.incidentReport.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends IncidentReportFindUniqueOrThrowArgs>(args: SelectSubset<T, IncidentReportFindUniqueOrThrowArgs<ExtArgs>>): Prisma__IncidentReportClient<$Result.GetResult<Prisma.$IncidentReportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first IncidentReport that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncidentReportFindFirstArgs} args - Arguments to find a IncidentReport
     * @example
     * // Get one IncidentReport
     * const incidentReport = await prisma.incidentReport.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends IncidentReportFindFirstArgs>(args?: SelectSubset<T, IncidentReportFindFirstArgs<ExtArgs>>): Prisma__IncidentReportClient<$Result.GetResult<Prisma.$IncidentReportPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first IncidentReport that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncidentReportFindFirstOrThrowArgs} args - Arguments to find a IncidentReport
     * @example
     * // Get one IncidentReport
     * const incidentReport = await prisma.incidentReport.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends IncidentReportFindFirstOrThrowArgs>(args?: SelectSubset<T, IncidentReportFindFirstOrThrowArgs<ExtArgs>>): Prisma__IncidentReportClient<$Result.GetResult<Prisma.$IncidentReportPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more IncidentReports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncidentReportFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all IncidentReports
     * const incidentReports = await prisma.incidentReport.findMany()
     * 
     * // Get first 10 IncidentReports
     * const incidentReports = await prisma.incidentReport.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const incidentReportWithIdOnly = await prisma.incidentReport.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends IncidentReportFindManyArgs>(args?: SelectSubset<T, IncidentReportFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IncidentReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a IncidentReport.
     * @param {IncidentReportCreateArgs} args - Arguments to create a IncidentReport.
     * @example
     * // Create one IncidentReport
     * const IncidentReport = await prisma.incidentReport.create({
     *   data: {
     *     // ... data to create a IncidentReport
     *   }
     * })
     * 
     */
    create<T extends IncidentReportCreateArgs>(args: SelectSubset<T, IncidentReportCreateArgs<ExtArgs>>): Prisma__IncidentReportClient<$Result.GetResult<Prisma.$IncidentReportPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many IncidentReports.
     * @param {IncidentReportCreateManyArgs} args - Arguments to create many IncidentReports.
     * @example
     * // Create many IncidentReports
     * const incidentReport = await prisma.incidentReport.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends IncidentReportCreateManyArgs>(args?: SelectSubset<T, IncidentReportCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many IncidentReports and returns the data saved in the database.
     * @param {IncidentReportCreateManyAndReturnArgs} args - Arguments to create many IncidentReports.
     * @example
     * // Create many IncidentReports
     * const incidentReport = await prisma.incidentReport.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many IncidentReports and only return the `id`
     * const incidentReportWithIdOnly = await prisma.incidentReport.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends IncidentReportCreateManyAndReturnArgs>(args?: SelectSubset<T, IncidentReportCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IncidentReportPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a IncidentReport.
     * @param {IncidentReportDeleteArgs} args - Arguments to delete one IncidentReport.
     * @example
     * // Delete one IncidentReport
     * const IncidentReport = await prisma.incidentReport.delete({
     *   where: {
     *     // ... filter to delete one IncidentReport
     *   }
     * })
     * 
     */
    delete<T extends IncidentReportDeleteArgs>(args: SelectSubset<T, IncidentReportDeleteArgs<ExtArgs>>): Prisma__IncidentReportClient<$Result.GetResult<Prisma.$IncidentReportPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one IncidentReport.
     * @param {IncidentReportUpdateArgs} args - Arguments to update one IncidentReport.
     * @example
     * // Update one IncidentReport
     * const incidentReport = await prisma.incidentReport.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends IncidentReportUpdateArgs>(args: SelectSubset<T, IncidentReportUpdateArgs<ExtArgs>>): Prisma__IncidentReportClient<$Result.GetResult<Prisma.$IncidentReportPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more IncidentReports.
     * @param {IncidentReportDeleteManyArgs} args - Arguments to filter IncidentReports to delete.
     * @example
     * // Delete a few IncidentReports
     * const { count } = await prisma.incidentReport.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends IncidentReportDeleteManyArgs>(args?: SelectSubset<T, IncidentReportDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more IncidentReports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncidentReportUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many IncidentReports
     * const incidentReport = await prisma.incidentReport.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends IncidentReportUpdateManyArgs>(args: SelectSubset<T, IncidentReportUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more IncidentReports and returns the data updated in the database.
     * @param {IncidentReportUpdateManyAndReturnArgs} args - Arguments to update many IncidentReports.
     * @example
     * // Update many IncidentReports
     * const incidentReport = await prisma.incidentReport.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more IncidentReports and only return the `id`
     * const incidentReportWithIdOnly = await prisma.incidentReport.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends IncidentReportUpdateManyAndReturnArgs>(args: SelectSubset<T, IncidentReportUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IncidentReportPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one IncidentReport.
     * @param {IncidentReportUpsertArgs} args - Arguments to update or create a IncidentReport.
     * @example
     * // Update or create a IncidentReport
     * const incidentReport = await prisma.incidentReport.upsert({
     *   create: {
     *     // ... data to create a IncidentReport
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the IncidentReport we want to update
     *   }
     * })
     */
    upsert<T extends IncidentReportUpsertArgs>(args: SelectSubset<T, IncidentReportUpsertArgs<ExtArgs>>): Prisma__IncidentReportClient<$Result.GetResult<Prisma.$IncidentReportPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of IncidentReports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncidentReportCountArgs} args - Arguments to filter IncidentReports to count.
     * @example
     * // Count the number of IncidentReports
     * const count = await prisma.incidentReport.count({
     *   where: {
     *     // ... the filter for the IncidentReports we want to count
     *   }
     * })
    **/
    count<T extends IncidentReportCountArgs>(
      args?: Subset<T, IncidentReportCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IncidentReportCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a IncidentReport.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncidentReportAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IncidentReportAggregateArgs>(args: Subset<T, IncidentReportAggregateArgs>): Prisma.PrismaPromise<GetIncidentReportAggregateType<T>>

    /**
     * Group by IncidentReport.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncidentReportGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends IncidentReportGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: IncidentReportGroupByArgs['orderBy'] }
        : { orderBy?: IncidentReportGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, IncidentReportGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIncidentReportGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the IncidentReport model
   */
  readonly fields: IncidentReportFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for IncidentReport.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__IncidentReportClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reporter<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    agency<T extends AgencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyDefaultArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the IncidentReport model
   */ 
  interface IncidentReportFieldRefs {
    readonly id: FieldRef<"IncidentReport", 'String'>
    readonly reporterId: FieldRef<"IncidentReport", 'String'>
    readonly agencyId: FieldRef<"IncidentReport", 'String'>
    readonly description: FieldRef<"IncidentReport", 'String'>
    readonly severity: FieldRef<"IncidentReport", 'SeverityLevel'>
    readonly reportedAt: FieldRef<"IncidentReport", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * IncidentReport findUnique
   */
  export type IncidentReportFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IncidentReport
     */
    select?: IncidentReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IncidentReport
     */
    omit?: IncidentReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentReportInclude<ExtArgs> | null
    /**
     * Filter, which IncidentReport to fetch.
     */
    where: IncidentReportWhereUniqueInput
  }

  /**
   * IncidentReport findUniqueOrThrow
   */
  export type IncidentReportFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IncidentReport
     */
    select?: IncidentReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IncidentReport
     */
    omit?: IncidentReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentReportInclude<ExtArgs> | null
    /**
     * Filter, which IncidentReport to fetch.
     */
    where: IncidentReportWhereUniqueInput
  }

  /**
   * IncidentReport findFirst
   */
  export type IncidentReportFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IncidentReport
     */
    select?: IncidentReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IncidentReport
     */
    omit?: IncidentReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentReportInclude<ExtArgs> | null
    /**
     * Filter, which IncidentReport to fetch.
     */
    where?: IncidentReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IncidentReports to fetch.
     */
    orderBy?: IncidentReportOrderByWithRelationInput | IncidentReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for IncidentReports.
     */
    cursor?: IncidentReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IncidentReports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IncidentReports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of IncidentReports.
     */
    distinct?: IncidentReportScalarFieldEnum | IncidentReportScalarFieldEnum[]
  }

  /**
   * IncidentReport findFirstOrThrow
   */
  export type IncidentReportFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IncidentReport
     */
    select?: IncidentReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IncidentReport
     */
    omit?: IncidentReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentReportInclude<ExtArgs> | null
    /**
     * Filter, which IncidentReport to fetch.
     */
    where?: IncidentReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IncidentReports to fetch.
     */
    orderBy?: IncidentReportOrderByWithRelationInput | IncidentReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for IncidentReports.
     */
    cursor?: IncidentReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IncidentReports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IncidentReports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of IncidentReports.
     */
    distinct?: IncidentReportScalarFieldEnum | IncidentReportScalarFieldEnum[]
  }

  /**
   * IncidentReport findMany
   */
  export type IncidentReportFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IncidentReport
     */
    select?: IncidentReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IncidentReport
     */
    omit?: IncidentReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentReportInclude<ExtArgs> | null
    /**
     * Filter, which IncidentReports to fetch.
     */
    where?: IncidentReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IncidentReports to fetch.
     */
    orderBy?: IncidentReportOrderByWithRelationInput | IncidentReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing IncidentReports.
     */
    cursor?: IncidentReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IncidentReports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IncidentReports.
     */
    skip?: number
    distinct?: IncidentReportScalarFieldEnum | IncidentReportScalarFieldEnum[]
  }

  /**
   * IncidentReport create
   */
  export type IncidentReportCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IncidentReport
     */
    select?: IncidentReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IncidentReport
     */
    omit?: IncidentReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentReportInclude<ExtArgs> | null
    /**
     * The data needed to create a IncidentReport.
     */
    data: XOR<IncidentReportCreateInput, IncidentReportUncheckedCreateInput>
  }

  /**
   * IncidentReport createMany
   */
  export type IncidentReportCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many IncidentReports.
     */
    data: IncidentReportCreateManyInput | IncidentReportCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * IncidentReport createManyAndReturn
   */
  export type IncidentReportCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IncidentReport
     */
    select?: IncidentReportSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the IncidentReport
     */
    omit?: IncidentReportOmit<ExtArgs> | null
    /**
     * The data used to create many IncidentReports.
     */
    data: IncidentReportCreateManyInput | IncidentReportCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentReportIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * IncidentReport update
   */
  export type IncidentReportUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IncidentReport
     */
    select?: IncidentReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IncidentReport
     */
    omit?: IncidentReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentReportInclude<ExtArgs> | null
    /**
     * The data needed to update a IncidentReport.
     */
    data: XOR<IncidentReportUpdateInput, IncidentReportUncheckedUpdateInput>
    /**
     * Choose, which IncidentReport to update.
     */
    where: IncidentReportWhereUniqueInput
  }

  /**
   * IncidentReport updateMany
   */
  export type IncidentReportUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update IncidentReports.
     */
    data: XOR<IncidentReportUpdateManyMutationInput, IncidentReportUncheckedUpdateManyInput>
    /**
     * Filter which IncidentReports to update
     */
    where?: IncidentReportWhereInput
    /**
     * Limit how many IncidentReports to update.
     */
    limit?: number
  }

  /**
   * IncidentReport updateManyAndReturn
   */
  export type IncidentReportUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IncidentReport
     */
    select?: IncidentReportSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the IncidentReport
     */
    omit?: IncidentReportOmit<ExtArgs> | null
    /**
     * The data used to update IncidentReports.
     */
    data: XOR<IncidentReportUpdateManyMutationInput, IncidentReportUncheckedUpdateManyInput>
    /**
     * Filter which IncidentReports to update
     */
    where?: IncidentReportWhereInput
    /**
     * Limit how many IncidentReports to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentReportIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * IncidentReport upsert
   */
  export type IncidentReportUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IncidentReport
     */
    select?: IncidentReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IncidentReport
     */
    omit?: IncidentReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentReportInclude<ExtArgs> | null
    /**
     * The filter to search for the IncidentReport to update in case it exists.
     */
    where: IncidentReportWhereUniqueInput
    /**
     * In case the IncidentReport found by the `where` argument doesn't exist, create a new IncidentReport with this data.
     */
    create: XOR<IncidentReportCreateInput, IncidentReportUncheckedCreateInput>
    /**
     * In case the IncidentReport was found with the provided `where` argument, update it with this data.
     */
    update: XOR<IncidentReportUpdateInput, IncidentReportUncheckedUpdateInput>
  }

  /**
   * IncidentReport delete
   */
  export type IncidentReportDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IncidentReport
     */
    select?: IncidentReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IncidentReport
     */
    omit?: IncidentReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentReportInclude<ExtArgs> | null
    /**
     * Filter which IncidentReport to delete.
     */
    where: IncidentReportWhereUniqueInput
  }

  /**
   * IncidentReport deleteMany
   */
  export type IncidentReportDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which IncidentReports to delete
     */
    where?: IncidentReportWhereInput
    /**
     * Limit how many IncidentReports to delete.
     */
    limit?: number
  }

  /**
   * IncidentReport without action
   */
  export type IncidentReportDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IncidentReport
     */
    select?: IncidentReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the IncidentReport
     */
    omit?: IncidentReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentReportInclude<ExtArgs> | null
  }


  /**
   * Model Message
   */

  export type AggregateMessage = {
    _count: MessageCountAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  export type MessageMinAggregateOutputType = {
    id: string | null
    senderId: string | null
    receiverId: string | null
    content: string | null
    sentAt: Date | null
  }

  export type MessageMaxAggregateOutputType = {
    id: string | null
    senderId: string | null
    receiverId: string | null
    content: string | null
    sentAt: Date | null
  }

  export type MessageCountAggregateOutputType = {
    id: number
    senderId: number
    receiverId: number
    content: number
    sentAt: number
    _all: number
  }


  export type MessageMinAggregateInputType = {
    id?: true
    senderId?: true
    receiverId?: true
    content?: true
    sentAt?: true
  }

  export type MessageMaxAggregateInputType = {
    id?: true
    senderId?: true
    receiverId?: true
    content?: true
    sentAt?: true
  }

  export type MessageCountAggregateInputType = {
    id?: true
    senderId?: true
    receiverId?: true
    content?: true
    sentAt?: true
    _all?: true
  }

  export type MessageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Message to aggregate.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Messages
    **/
    _count?: true | MessageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessageMaxAggregateInputType
  }

  export type GetMessageAggregateType<T extends MessageAggregateArgs> = {
        [P in keyof T & keyof AggregateMessage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessage[P]>
      : GetScalarType<T[P], AggregateMessage[P]>
  }




  export type MessageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithAggregationInput | MessageOrderByWithAggregationInput[]
    by: MessageScalarFieldEnum[] | MessageScalarFieldEnum
    having?: MessageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessageCountAggregateInputType | true
    _min?: MessageMinAggregateInputType
    _max?: MessageMaxAggregateInputType
  }

  export type MessageGroupByOutputType = {
    id: string
    senderId: string
    receiverId: string
    content: string
    sentAt: Date
    _count: MessageCountAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  type GetMessageGroupByPayload<T extends MessageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MessageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessageGroupByOutputType[P]>
            : GetScalarType<T[P], MessageGroupByOutputType[P]>
        }
      >
    >


  export type MessageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    senderId?: boolean
    receiverId?: boolean
    content?: boolean
    sentAt?: boolean
    sender?: boolean | UserDefaultArgs<ExtArgs>
    receiver?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    senderId?: boolean
    receiverId?: boolean
    content?: boolean
    sentAt?: boolean
    sender?: boolean | UserDefaultArgs<ExtArgs>
    receiver?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    senderId?: boolean
    receiverId?: boolean
    content?: boolean
    sentAt?: boolean
    sender?: boolean | UserDefaultArgs<ExtArgs>
    receiver?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectScalar = {
    id?: boolean
    senderId?: boolean
    receiverId?: boolean
    content?: boolean
    sentAt?: boolean
  }

  export type MessageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "senderId" | "receiverId" | "content" | "sentAt", ExtArgs["result"]["message"]>
  export type MessageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sender?: boolean | UserDefaultArgs<ExtArgs>
    receiver?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MessageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sender?: boolean | UserDefaultArgs<ExtArgs>
    receiver?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MessageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sender?: boolean | UserDefaultArgs<ExtArgs>
    receiver?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MessagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Message"
    objects: {
      sender: Prisma.$UserPayload<ExtArgs>
      receiver: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      senderId: string
      receiverId: string
      content: string
      sentAt: Date
    }, ExtArgs["result"]["message"]>
    composites: {}
  }

  type MessageGetPayload<S extends boolean | null | undefined | MessageDefaultArgs> = $Result.GetResult<Prisma.$MessagePayload, S>

  type MessageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MessageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MessageCountAggregateInputType | true
    }

  export interface MessageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Message'], meta: { name: 'Message' } }
    /**
     * Find zero or one Message that matches the filter.
     * @param {MessageFindUniqueArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MessageFindUniqueArgs>(args: SelectSubset<T, MessageFindUniqueArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Message that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MessageFindUniqueOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MessageFindUniqueOrThrowArgs>(args: SelectSubset<T, MessageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Message that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MessageFindFirstArgs>(args?: SelectSubset<T, MessageFindFirstArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Message that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MessageFindFirstOrThrowArgs>(args?: SelectSubset<T, MessageFindFirstOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.message.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.message.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const messageWithIdOnly = await prisma.message.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MessageFindManyArgs>(args?: SelectSubset<T, MessageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Message.
     * @param {MessageCreateArgs} args - Arguments to create a Message.
     * @example
     * // Create one Message
     * const Message = await prisma.message.create({
     *   data: {
     *     // ... data to create a Message
     *   }
     * })
     * 
     */
    create<T extends MessageCreateArgs>(args: SelectSubset<T, MessageCreateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Messages.
     * @param {MessageCreateManyArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MessageCreateManyArgs>(args?: SelectSubset<T, MessageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Messages and returns the data saved in the database.
     * @param {MessageCreateManyAndReturnArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Messages and only return the `id`
     * const messageWithIdOnly = await prisma.message.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MessageCreateManyAndReturnArgs>(args?: SelectSubset<T, MessageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Message.
     * @param {MessageDeleteArgs} args - Arguments to delete one Message.
     * @example
     * // Delete one Message
     * const Message = await prisma.message.delete({
     *   where: {
     *     // ... filter to delete one Message
     *   }
     * })
     * 
     */
    delete<T extends MessageDeleteArgs>(args: SelectSubset<T, MessageDeleteArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Message.
     * @param {MessageUpdateArgs} args - Arguments to update one Message.
     * @example
     * // Update one Message
     * const message = await prisma.message.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MessageUpdateArgs>(args: SelectSubset<T, MessageUpdateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Messages.
     * @param {MessageDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.message.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MessageDeleteManyArgs>(args?: SelectSubset<T, MessageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MessageUpdateManyArgs>(args: SelectSubset<T, MessageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages and returns the data updated in the database.
     * @param {MessageUpdateManyAndReturnArgs} args - Arguments to update many Messages.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Messages and only return the `id`
     * const messageWithIdOnly = await prisma.message.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MessageUpdateManyAndReturnArgs>(args: SelectSubset<T, MessageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Message.
     * @param {MessageUpsertArgs} args - Arguments to update or create a Message.
     * @example
     * // Update or create a Message
     * const message = await prisma.message.upsert({
     *   create: {
     *     // ... data to create a Message
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Message we want to update
     *   }
     * })
     */
    upsert<T extends MessageUpsertArgs>(args: SelectSubset<T, MessageUpsertArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.message.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends MessageCountArgs>(
      args?: Subset<T, MessageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessageAggregateArgs>(args: Subset<T, MessageAggregateArgs>): Prisma.PrismaPromise<GetMessageAggregateType<T>>

    /**
     * Group by Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MessageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MessageGroupByArgs['orderBy'] }
        : { orderBy?: MessageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MessageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Message model
   */
  readonly fields: MessageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Message.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MessageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sender<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    receiver<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Message model
   */ 
  interface MessageFieldRefs {
    readonly id: FieldRef<"Message", 'String'>
    readonly senderId: FieldRef<"Message", 'String'>
    readonly receiverId: FieldRef<"Message", 'String'>
    readonly content: FieldRef<"Message", 'String'>
    readonly sentAt: FieldRef<"Message", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Message findUnique
   */
  export type MessageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findUniqueOrThrow
   */
  export type MessageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findFirst
   */
  export type MessageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findFirstOrThrow
   */
  export type MessageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findMany
   */
  export type MessageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Messages to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message create
   */
  export type MessageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to create a Message.
     */
    data: XOR<MessageCreateInput, MessageUncheckedCreateInput>
  }

  /**
   * Message createMany
   */
  export type MessageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Message createManyAndReturn
   */
  export type MessageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Message update
   */
  export type MessageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to update a Message.
     */
    data: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
    /**
     * Choose, which Message to update.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message updateMany
   */
  export type MessageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Messages.
     */
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to update.
     */
    limit?: number
  }

  /**
   * Message updateManyAndReturn
   */
  export type MessageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * The data used to update Messages.
     */
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Message upsert
   */
  export type MessageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The filter to search for the Message to update in case it exists.
     */
    where: MessageWhereUniqueInput
    /**
     * In case the Message found by the `where` argument doesn't exist, create a new Message with this data.
     */
    create: XOR<MessageCreateInput, MessageUncheckedCreateInput>
    /**
     * In case the Message was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
  }

  /**
   * Message delete
   */
  export type MessageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter which Message to delete.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message deleteMany
   */
  export type MessageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Messages to delete
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to delete.
     */
    limit?: number
  }

  /**
   * Message without action
   */
  export type MessageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
  }


  /**
   * Model KeyContact
   */

  export type AggregateKeyContact = {
    _count: KeyContactCountAggregateOutputType | null
    _min: KeyContactMinAggregateOutputType | null
    _max: KeyContactMaxAggregateOutputType | null
  }

  export type KeyContactMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    name: string | null
    relation: string | null
    phone: string | null
    email: string | null
  }

  export type KeyContactMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    name: string | null
    relation: string | null
    phone: string | null
    email: string | null
  }

  export type KeyContactCountAggregateOutputType = {
    id: number
    clientId: number
    name: number
    relation: number
    phone: number
    email: number
    _all: number
  }


  export type KeyContactMinAggregateInputType = {
    id?: true
    clientId?: true
    name?: true
    relation?: true
    phone?: true
    email?: true
  }

  export type KeyContactMaxAggregateInputType = {
    id?: true
    clientId?: true
    name?: true
    relation?: true
    phone?: true
    email?: true
  }

  export type KeyContactCountAggregateInputType = {
    id?: true
    clientId?: true
    name?: true
    relation?: true
    phone?: true
    email?: true
    _all?: true
  }

  export type KeyContactAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which KeyContact to aggregate.
     */
    where?: KeyContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of KeyContacts to fetch.
     */
    orderBy?: KeyContactOrderByWithRelationInput | KeyContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: KeyContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` KeyContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` KeyContacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned KeyContacts
    **/
    _count?: true | KeyContactCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: KeyContactMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: KeyContactMaxAggregateInputType
  }

  export type GetKeyContactAggregateType<T extends KeyContactAggregateArgs> = {
        [P in keyof T & keyof AggregateKeyContact]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKeyContact[P]>
      : GetScalarType<T[P], AggregateKeyContact[P]>
  }




  export type KeyContactGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KeyContactWhereInput
    orderBy?: KeyContactOrderByWithAggregationInput | KeyContactOrderByWithAggregationInput[]
    by: KeyContactScalarFieldEnum[] | KeyContactScalarFieldEnum
    having?: KeyContactScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: KeyContactCountAggregateInputType | true
    _min?: KeyContactMinAggregateInputType
    _max?: KeyContactMaxAggregateInputType
  }

  export type KeyContactGroupByOutputType = {
    id: string
    clientId: string
    name: string
    relation: string
    phone: string
    email: string | null
    _count: KeyContactCountAggregateOutputType | null
    _min: KeyContactMinAggregateOutputType | null
    _max: KeyContactMaxAggregateOutputType | null
  }

  type GetKeyContactGroupByPayload<T extends KeyContactGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<KeyContactGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof KeyContactGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], KeyContactGroupByOutputType[P]>
            : GetScalarType<T[P], KeyContactGroupByOutputType[P]>
        }
      >
    >


  export type KeyContactSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    name?: boolean
    relation?: boolean
    phone?: boolean
    email?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["keyContact"]>

  export type KeyContactSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    name?: boolean
    relation?: boolean
    phone?: boolean
    email?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["keyContact"]>

  export type KeyContactSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    name?: boolean
    relation?: boolean
    phone?: boolean
    email?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["keyContact"]>

  export type KeyContactSelectScalar = {
    id?: boolean
    clientId?: boolean
    name?: boolean
    relation?: boolean
    phone?: boolean
    email?: boolean
  }

  export type KeyContactOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clientId" | "name" | "relation" | "phone" | "email", ExtArgs["result"]["keyContact"]>
  export type KeyContactInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type KeyContactIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type KeyContactIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $KeyContactPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "KeyContact"
    objects: {
      client: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      name: string
      relation: string
      phone: string
      email: string | null
    }, ExtArgs["result"]["keyContact"]>
    composites: {}
  }

  type KeyContactGetPayload<S extends boolean | null | undefined | KeyContactDefaultArgs> = $Result.GetResult<Prisma.$KeyContactPayload, S>

  type KeyContactCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<KeyContactFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: KeyContactCountAggregateInputType | true
    }

  export interface KeyContactDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['KeyContact'], meta: { name: 'KeyContact' } }
    /**
     * Find zero or one KeyContact that matches the filter.
     * @param {KeyContactFindUniqueArgs} args - Arguments to find a KeyContact
     * @example
     * // Get one KeyContact
     * const keyContact = await prisma.keyContact.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends KeyContactFindUniqueArgs>(args: SelectSubset<T, KeyContactFindUniqueArgs<ExtArgs>>): Prisma__KeyContactClient<$Result.GetResult<Prisma.$KeyContactPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one KeyContact that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {KeyContactFindUniqueOrThrowArgs} args - Arguments to find a KeyContact
     * @example
     * // Get one KeyContact
     * const keyContact = await prisma.keyContact.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends KeyContactFindUniqueOrThrowArgs>(args: SelectSubset<T, KeyContactFindUniqueOrThrowArgs<ExtArgs>>): Prisma__KeyContactClient<$Result.GetResult<Prisma.$KeyContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first KeyContact that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KeyContactFindFirstArgs} args - Arguments to find a KeyContact
     * @example
     * // Get one KeyContact
     * const keyContact = await prisma.keyContact.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends KeyContactFindFirstArgs>(args?: SelectSubset<T, KeyContactFindFirstArgs<ExtArgs>>): Prisma__KeyContactClient<$Result.GetResult<Prisma.$KeyContactPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first KeyContact that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KeyContactFindFirstOrThrowArgs} args - Arguments to find a KeyContact
     * @example
     * // Get one KeyContact
     * const keyContact = await prisma.keyContact.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends KeyContactFindFirstOrThrowArgs>(args?: SelectSubset<T, KeyContactFindFirstOrThrowArgs<ExtArgs>>): Prisma__KeyContactClient<$Result.GetResult<Prisma.$KeyContactPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more KeyContacts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KeyContactFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all KeyContacts
     * const keyContacts = await prisma.keyContact.findMany()
     * 
     * // Get first 10 KeyContacts
     * const keyContacts = await prisma.keyContact.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const keyContactWithIdOnly = await prisma.keyContact.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends KeyContactFindManyArgs>(args?: SelectSubset<T, KeyContactFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KeyContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a KeyContact.
     * @param {KeyContactCreateArgs} args - Arguments to create a KeyContact.
     * @example
     * // Create one KeyContact
     * const KeyContact = await prisma.keyContact.create({
     *   data: {
     *     // ... data to create a KeyContact
     *   }
     * })
     * 
     */
    create<T extends KeyContactCreateArgs>(args: SelectSubset<T, KeyContactCreateArgs<ExtArgs>>): Prisma__KeyContactClient<$Result.GetResult<Prisma.$KeyContactPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many KeyContacts.
     * @param {KeyContactCreateManyArgs} args - Arguments to create many KeyContacts.
     * @example
     * // Create many KeyContacts
     * const keyContact = await prisma.keyContact.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends KeyContactCreateManyArgs>(args?: SelectSubset<T, KeyContactCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many KeyContacts and returns the data saved in the database.
     * @param {KeyContactCreateManyAndReturnArgs} args - Arguments to create many KeyContacts.
     * @example
     * // Create many KeyContacts
     * const keyContact = await prisma.keyContact.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many KeyContacts and only return the `id`
     * const keyContactWithIdOnly = await prisma.keyContact.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends KeyContactCreateManyAndReturnArgs>(args?: SelectSubset<T, KeyContactCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KeyContactPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a KeyContact.
     * @param {KeyContactDeleteArgs} args - Arguments to delete one KeyContact.
     * @example
     * // Delete one KeyContact
     * const KeyContact = await prisma.keyContact.delete({
     *   where: {
     *     // ... filter to delete one KeyContact
     *   }
     * })
     * 
     */
    delete<T extends KeyContactDeleteArgs>(args: SelectSubset<T, KeyContactDeleteArgs<ExtArgs>>): Prisma__KeyContactClient<$Result.GetResult<Prisma.$KeyContactPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one KeyContact.
     * @param {KeyContactUpdateArgs} args - Arguments to update one KeyContact.
     * @example
     * // Update one KeyContact
     * const keyContact = await prisma.keyContact.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends KeyContactUpdateArgs>(args: SelectSubset<T, KeyContactUpdateArgs<ExtArgs>>): Prisma__KeyContactClient<$Result.GetResult<Prisma.$KeyContactPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more KeyContacts.
     * @param {KeyContactDeleteManyArgs} args - Arguments to filter KeyContacts to delete.
     * @example
     * // Delete a few KeyContacts
     * const { count } = await prisma.keyContact.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends KeyContactDeleteManyArgs>(args?: SelectSubset<T, KeyContactDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more KeyContacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KeyContactUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many KeyContacts
     * const keyContact = await prisma.keyContact.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends KeyContactUpdateManyArgs>(args: SelectSubset<T, KeyContactUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more KeyContacts and returns the data updated in the database.
     * @param {KeyContactUpdateManyAndReturnArgs} args - Arguments to update many KeyContacts.
     * @example
     * // Update many KeyContacts
     * const keyContact = await prisma.keyContact.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more KeyContacts and only return the `id`
     * const keyContactWithIdOnly = await prisma.keyContact.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends KeyContactUpdateManyAndReturnArgs>(args: SelectSubset<T, KeyContactUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KeyContactPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one KeyContact.
     * @param {KeyContactUpsertArgs} args - Arguments to update or create a KeyContact.
     * @example
     * // Update or create a KeyContact
     * const keyContact = await prisma.keyContact.upsert({
     *   create: {
     *     // ... data to create a KeyContact
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the KeyContact we want to update
     *   }
     * })
     */
    upsert<T extends KeyContactUpsertArgs>(args: SelectSubset<T, KeyContactUpsertArgs<ExtArgs>>): Prisma__KeyContactClient<$Result.GetResult<Prisma.$KeyContactPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of KeyContacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KeyContactCountArgs} args - Arguments to filter KeyContacts to count.
     * @example
     * // Count the number of KeyContacts
     * const count = await prisma.keyContact.count({
     *   where: {
     *     // ... the filter for the KeyContacts we want to count
     *   }
     * })
    **/
    count<T extends KeyContactCountArgs>(
      args?: Subset<T, KeyContactCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], KeyContactCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a KeyContact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KeyContactAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends KeyContactAggregateArgs>(args: Subset<T, KeyContactAggregateArgs>): Prisma.PrismaPromise<GetKeyContactAggregateType<T>>

    /**
     * Group by KeyContact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KeyContactGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends KeyContactGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: KeyContactGroupByArgs['orderBy'] }
        : { orderBy?: KeyContactGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, KeyContactGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKeyContactGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the KeyContact model
   */
  readonly fields: KeyContactFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for KeyContact.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__KeyContactClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the KeyContact model
   */ 
  interface KeyContactFieldRefs {
    readonly id: FieldRef<"KeyContact", 'String'>
    readonly clientId: FieldRef<"KeyContact", 'String'>
    readonly name: FieldRef<"KeyContact", 'String'>
    readonly relation: FieldRef<"KeyContact", 'String'>
    readonly phone: FieldRef<"KeyContact", 'String'>
    readonly email: FieldRef<"KeyContact", 'String'>
  }
    

  // Custom InputTypes
  /**
   * KeyContact findUnique
   */
  export type KeyContactFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KeyContact
     */
    select?: KeyContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KeyContact
     */
    omit?: KeyContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KeyContactInclude<ExtArgs> | null
    /**
     * Filter, which KeyContact to fetch.
     */
    where: KeyContactWhereUniqueInput
  }

  /**
   * KeyContact findUniqueOrThrow
   */
  export type KeyContactFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KeyContact
     */
    select?: KeyContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KeyContact
     */
    omit?: KeyContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KeyContactInclude<ExtArgs> | null
    /**
     * Filter, which KeyContact to fetch.
     */
    where: KeyContactWhereUniqueInput
  }

  /**
   * KeyContact findFirst
   */
  export type KeyContactFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KeyContact
     */
    select?: KeyContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KeyContact
     */
    omit?: KeyContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KeyContactInclude<ExtArgs> | null
    /**
     * Filter, which KeyContact to fetch.
     */
    where?: KeyContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of KeyContacts to fetch.
     */
    orderBy?: KeyContactOrderByWithRelationInput | KeyContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for KeyContacts.
     */
    cursor?: KeyContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` KeyContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` KeyContacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of KeyContacts.
     */
    distinct?: KeyContactScalarFieldEnum | KeyContactScalarFieldEnum[]
  }

  /**
   * KeyContact findFirstOrThrow
   */
  export type KeyContactFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KeyContact
     */
    select?: KeyContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KeyContact
     */
    omit?: KeyContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KeyContactInclude<ExtArgs> | null
    /**
     * Filter, which KeyContact to fetch.
     */
    where?: KeyContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of KeyContacts to fetch.
     */
    orderBy?: KeyContactOrderByWithRelationInput | KeyContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for KeyContacts.
     */
    cursor?: KeyContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` KeyContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` KeyContacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of KeyContacts.
     */
    distinct?: KeyContactScalarFieldEnum | KeyContactScalarFieldEnum[]
  }

  /**
   * KeyContact findMany
   */
  export type KeyContactFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KeyContact
     */
    select?: KeyContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KeyContact
     */
    omit?: KeyContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KeyContactInclude<ExtArgs> | null
    /**
     * Filter, which KeyContacts to fetch.
     */
    where?: KeyContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of KeyContacts to fetch.
     */
    orderBy?: KeyContactOrderByWithRelationInput | KeyContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing KeyContacts.
     */
    cursor?: KeyContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` KeyContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` KeyContacts.
     */
    skip?: number
    distinct?: KeyContactScalarFieldEnum | KeyContactScalarFieldEnum[]
  }

  /**
   * KeyContact create
   */
  export type KeyContactCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KeyContact
     */
    select?: KeyContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KeyContact
     */
    omit?: KeyContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KeyContactInclude<ExtArgs> | null
    /**
     * The data needed to create a KeyContact.
     */
    data: XOR<KeyContactCreateInput, KeyContactUncheckedCreateInput>
  }

  /**
   * KeyContact createMany
   */
  export type KeyContactCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many KeyContacts.
     */
    data: KeyContactCreateManyInput | KeyContactCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * KeyContact createManyAndReturn
   */
  export type KeyContactCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KeyContact
     */
    select?: KeyContactSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the KeyContact
     */
    omit?: KeyContactOmit<ExtArgs> | null
    /**
     * The data used to create many KeyContacts.
     */
    data: KeyContactCreateManyInput | KeyContactCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KeyContactIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * KeyContact update
   */
  export type KeyContactUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KeyContact
     */
    select?: KeyContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KeyContact
     */
    omit?: KeyContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KeyContactInclude<ExtArgs> | null
    /**
     * The data needed to update a KeyContact.
     */
    data: XOR<KeyContactUpdateInput, KeyContactUncheckedUpdateInput>
    /**
     * Choose, which KeyContact to update.
     */
    where: KeyContactWhereUniqueInput
  }

  /**
   * KeyContact updateMany
   */
  export type KeyContactUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update KeyContacts.
     */
    data: XOR<KeyContactUpdateManyMutationInput, KeyContactUncheckedUpdateManyInput>
    /**
     * Filter which KeyContacts to update
     */
    where?: KeyContactWhereInput
    /**
     * Limit how many KeyContacts to update.
     */
    limit?: number
  }

  /**
   * KeyContact updateManyAndReturn
   */
  export type KeyContactUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KeyContact
     */
    select?: KeyContactSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the KeyContact
     */
    omit?: KeyContactOmit<ExtArgs> | null
    /**
     * The data used to update KeyContacts.
     */
    data: XOR<KeyContactUpdateManyMutationInput, KeyContactUncheckedUpdateManyInput>
    /**
     * Filter which KeyContacts to update
     */
    where?: KeyContactWhereInput
    /**
     * Limit how many KeyContacts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KeyContactIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * KeyContact upsert
   */
  export type KeyContactUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KeyContact
     */
    select?: KeyContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KeyContact
     */
    omit?: KeyContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KeyContactInclude<ExtArgs> | null
    /**
     * The filter to search for the KeyContact to update in case it exists.
     */
    where: KeyContactWhereUniqueInput
    /**
     * In case the KeyContact found by the `where` argument doesn't exist, create a new KeyContact with this data.
     */
    create: XOR<KeyContactCreateInput, KeyContactUncheckedCreateInput>
    /**
     * In case the KeyContact was found with the provided `where` argument, update it with this data.
     */
    update: XOR<KeyContactUpdateInput, KeyContactUncheckedUpdateInput>
  }

  /**
   * KeyContact delete
   */
  export type KeyContactDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KeyContact
     */
    select?: KeyContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KeyContact
     */
    omit?: KeyContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KeyContactInclude<ExtArgs> | null
    /**
     * Filter which KeyContact to delete.
     */
    where: KeyContactWhereUniqueInput
  }

  /**
   * KeyContact deleteMany
   */
  export type KeyContactDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which KeyContacts to delete
     */
    where?: KeyContactWhereInput
    /**
     * Limit how many KeyContacts to delete.
     */
    limit?: number
  }

  /**
   * KeyContact without action
   */
  export type KeyContactDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KeyContact
     */
    select?: KeyContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KeyContact
     */
    omit?: KeyContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KeyContactInclude<ExtArgs> | null
  }


  /**
   * Model CareOutcome
   */

  export type AggregateCareOutcome = {
    _count: CareOutcomeCountAggregateOutputType | null
    _min: CareOutcomeMinAggregateOutputType | null
    _max: CareOutcomeMaxAggregateOutputType | null
  }

  export type CareOutcomeMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    outcome: string | null
  }

  export type CareOutcomeMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    outcome: string | null
  }

  export type CareOutcomeCountAggregateOutputType = {
    id: number
    clientId: number
    outcome: number
    _all: number
  }


  export type CareOutcomeMinAggregateInputType = {
    id?: true
    clientId?: true
    outcome?: true
  }

  export type CareOutcomeMaxAggregateInputType = {
    id?: true
    clientId?: true
    outcome?: true
  }

  export type CareOutcomeCountAggregateInputType = {
    id?: true
    clientId?: true
    outcome?: true
    _all?: true
  }

  export type CareOutcomeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CareOutcome to aggregate.
     */
    where?: CareOutcomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CareOutcomes to fetch.
     */
    orderBy?: CareOutcomeOrderByWithRelationInput | CareOutcomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CareOutcomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CareOutcomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CareOutcomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CareOutcomes
    **/
    _count?: true | CareOutcomeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CareOutcomeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CareOutcomeMaxAggregateInputType
  }

  export type GetCareOutcomeAggregateType<T extends CareOutcomeAggregateArgs> = {
        [P in keyof T & keyof AggregateCareOutcome]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCareOutcome[P]>
      : GetScalarType<T[P], AggregateCareOutcome[P]>
  }




  export type CareOutcomeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CareOutcomeWhereInput
    orderBy?: CareOutcomeOrderByWithAggregationInput | CareOutcomeOrderByWithAggregationInput[]
    by: CareOutcomeScalarFieldEnum[] | CareOutcomeScalarFieldEnum
    having?: CareOutcomeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CareOutcomeCountAggregateInputType | true
    _min?: CareOutcomeMinAggregateInputType
    _max?: CareOutcomeMaxAggregateInputType
  }

  export type CareOutcomeGroupByOutputType = {
    id: string
    clientId: string
    outcome: string
    _count: CareOutcomeCountAggregateOutputType | null
    _min: CareOutcomeMinAggregateOutputType | null
    _max: CareOutcomeMaxAggregateOutputType | null
  }

  type GetCareOutcomeGroupByPayload<T extends CareOutcomeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CareOutcomeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CareOutcomeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CareOutcomeGroupByOutputType[P]>
            : GetScalarType<T[P], CareOutcomeGroupByOutputType[P]>
        }
      >
    >


  export type CareOutcomeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    outcome?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["careOutcome"]>

  export type CareOutcomeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    outcome?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["careOutcome"]>

  export type CareOutcomeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    outcome?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["careOutcome"]>

  export type CareOutcomeSelectScalar = {
    id?: boolean
    clientId?: boolean
    outcome?: boolean
  }

  export type CareOutcomeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clientId" | "outcome", ExtArgs["result"]["careOutcome"]>
  export type CareOutcomeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CareOutcomeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CareOutcomeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $CareOutcomePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CareOutcome"
    objects: {
      client: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      outcome: string
    }, ExtArgs["result"]["careOutcome"]>
    composites: {}
  }

  type CareOutcomeGetPayload<S extends boolean | null | undefined | CareOutcomeDefaultArgs> = $Result.GetResult<Prisma.$CareOutcomePayload, S>

  type CareOutcomeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CareOutcomeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CareOutcomeCountAggregateInputType | true
    }

  export interface CareOutcomeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CareOutcome'], meta: { name: 'CareOutcome' } }
    /**
     * Find zero or one CareOutcome that matches the filter.
     * @param {CareOutcomeFindUniqueArgs} args - Arguments to find a CareOutcome
     * @example
     * // Get one CareOutcome
     * const careOutcome = await prisma.careOutcome.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CareOutcomeFindUniqueArgs>(args: SelectSubset<T, CareOutcomeFindUniqueArgs<ExtArgs>>): Prisma__CareOutcomeClient<$Result.GetResult<Prisma.$CareOutcomePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CareOutcome that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CareOutcomeFindUniqueOrThrowArgs} args - Arguments to find a CareOutcome
     * @example
     * // Get one CareOutcome
     * const careOutcome = await prisma.careOutcome.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CareOutcomeFindUniqueOrThrowArgs>(args: SelectSubset<T, CareOutcomeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CareOutcomeClient<$Result.GetResult<Prisma.$CareOutcomePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CareOutcome that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CareOutcomeFindFirstArgs} args - Arguments to find a CareOutcome
     * @example
     * // Get one CareOutcome
     * const careOutcome = await prisma.careOutcome.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CareOutcomeFindFirstArgs>(args?: SelectSubset<T, CareOutcomeFindFirstArgs<ExtArgs>>): Prisma__CareOutcomeClient<$Result.GetResult<Prisma.$CareOutcomePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CareOutcome that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CareOutcomeFindFirstOrThrowArgs} args - Arguments to find a CareOutcome
     * @example
     * // Get one CareOutcome
     * const careOutcome = await prisma.careOutcome.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CareOutcomeFindFirstOrThrowArgs>(args?: SelectSubset<T, CareOutcomeFindFirstOrThrowArgs<ExtArgs>>): Prisma__CareOutcomeClient<$Result.GetResult<Prisma.$CareOutcomePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CareOutcomes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CareOutcomeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CareOutcomes
     * const careOutcomes = await prisma.careOutcome.findMany()
     * 
     * // Get first 10 CareOutcomes
     * const careOutcomes = await prisma.careOutcome.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const careOutcomeWithIdOnly = await prisma.careOutcome.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CareOutcomeFindManyArgs>(args?: SelectSubset<T, CareOutcomeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CareOutcomePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CareOutcome.
     * @param {CareOutcomeCreateArgs} args - Arguments to create a CareOutcome.
     * @example
     * // Create one CareOutcome
     * const CareOutcome = await prisma.careOutcome.create({
     *   data: {
     *     // ... data to create a CareOutcome
     *   }
     * })
     * 
     */
    create<T extends CareOutcomeCreateArgs>(args: SelectSubset<T, CareOutcomeCreateArgs<ExtArgs>>): Prisma__CareOutcomeClient<$Result.GetResult<Prisma.$CareOutcomePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CareOutcomes.
     * @param {CareOutcomeCreateManyArgs} args - Arguments to create many CareOutcomes.
     * @example
     * // Create many CareOutcomes
     * const careOutcome = await prisma.careOutcome.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CareOutcomeCreateManyArgs>(args?: SelectSubset<T, CareOutcomeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CareOutcomes and returns the data saved in the database.
     * @param {CareOutcomeCreateManyAndReturnArgs} args - Arguments to create many CareOutcomes.
     * @example
     * // Create many CareOutcomes
     * const careOutcome = await prisma.careOutcome.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CareOutcomes and only return the `id`
     * const careOutcomeWithIdOnly = await prisma.careOutcome.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CareOutcomeCreateManyAndReturnArgs>(args?: SelectSubset<T, CareOutcomeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CareOutcomePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CareOutcome.
     * @param {CareOutcomeDeleteArgs} args - Arguments to delete one CareOutcome.
     * @example
     * // Delete one CareOutcome
     * const CareOutcome = await prisma.careOutcome.delete({
     *   where: {
     *     // ... filter to delete one CareOutcome
     *   }
     * })
     * 
     */
    delete<T extends CareOutcomeDeleteArgs>(args: SelectSubset<T, CareOutcomeDeleteArgs<ExtArgs>>): Prisma__CareOutcomeClient<$Result.GetResult<Prisma.$CareOutcomePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CareOutcome.
     * @param {CareOutcomeUpdateArgs} args - Arguments to update one CareOutcome.
     * @example
     * // Update one CareOutcome
     * const careOutcome = await prisma.careOutcome.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CareOutcomeUpdateArgs>(args: SelectSubset<T, CareOutcomeUpdateArgs<ExtArgs>>): Prisma__CareOutcomeClient<$Result.GetResult<Prisma.$CareOutcomePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CareOutcomes.
     * @param {CareOutcomeDeleteManyArgs} args - Arguments to filter CareOutcomes to delete.
     * @example
     * // Delete a few CareOutcomes
     * const { count } = await prisma.careOutcome.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CareOutcomeDeleteManyArgs>(args?: SelectSubset<T, CareOutcomeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CareOutcomes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CareOutcomeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CareOutcomes
     * const careOutcome = await prisma.careOutcome.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CareOutcomeUpdateManyArgs>(args: SelectSubset<T, CareOutcomeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CareOutcomes and returns the data updated in the database.
     * @param {CareOutcomeUpdateManyAndReturnArgs} args - Arguments to update many CareOutcomes.
     * @example
     * // Update many CareOutcomes
     * const careOutcome = await prisma.careOutcome.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CareOutcomes and only return the `id`
     * const careOutcomeWithIdOnly = await prisma.careOutcome.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CareOutcomeUpdateManyAndReturnArgs>(args: SelectSubset<T, CareOutcomeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CareOutcomePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CareOutcome.
     * @param {CareOutcomeUpsertArgs} args - Arguments to update or create a CareOutcome.
     * @example
     * // Update or create a CareOutcome
     * const careOutcome = await prisma.careOutcome.upsert({
     *   create: {
     *     // ... data to create a CareOutcome
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CareOutcome we want to update
     *   }
     * })
     */
    upsert<T extends CareOutcomeUpsertArgs>(args: SelectSubset<T, CareOutcomeUpsertArgs<ExtArgs>>): Prisma__CareOutcomeClient<$Result.GetResult<Prisma.$CareOutcomePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CareOutcomes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CareOutcomeCountArgs} args - Arguments to filter CareOutcomes to count.
     * @example
     * // Count the number of CareOutcomes
     * const count = await prisma.careOutcome.count({
     *   where: {
     *     // ... the filter for the CareOutcomes we want to count
     *   }
     * })
    **/
    count<T extends CareOutcomeCountArgs>(
      args?: Subset<T, CareOutcomeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CareOutcomeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CareOutcome.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CareOutcomeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CareOutcomeAggregateArgs>(args: Subset<T, CareOutcomeAggregateArgs>): Prisma.PrismaPromise<GetCareOutcomeAggregateType<T>>

    /**
     * Group by CareOutcome.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CareOutcomeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CareOutcomeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CareOutcomeGroupByArgs['orderBy'] }
        : { orderBy?: CareOutcomeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CareOutcomeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCareOutcomeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CareOutcome model
   */
  readonly fields: CareOutcomeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CareOutcome.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CareOutcomeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CareOutcome model
   */ 
  interface CareOutcomeFieldRefs {
    readonly id: FieldRef<"CareOutcome", 'String'>
    readonly clientId: FieldRef<"CareOutcome", 'String'>
    readonly outcome: FieldRef<"CareOutcome", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CareOutcome findUnique
   */
  export type CareOutcomeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CareOutcome
     */
    select?: CareOutcomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CareOutcome
     */
    omit?: CareOutcomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CareOutcomeInclude<ExtArgs> | null
    /**
     * Filter, which CareOutcome to fetch.
     */
    where: CareOutcomeWhereUniqueInput
  }

  /**
   * CareOutcome findUniqueOrThrow
   */
  export type CareOutcomeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CareOutcome
     */
    select?: CareOutcomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CareOutcome
     */
    omit?: CareOutcomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CareOutcomeInclude<ExtArgs> | null
    /**
     * Filter, which CareOutcome to fetch.
     */
    where: CareOutcomeWhereUniqueInput
  }

  /**
   * CareOutcome findFirst
   */
  export type CareOutcomeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CareOutcome
     */
    select?: CareOutcomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CareOutcome
     */
    omit?: CareOutcomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CareOutcomeInclude<ExtArgs> | null
    /**
     * Filter, which CareOutcome to fetch.
     */
    where?: CareOutcomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CareOutcomes to fetch.
     */
    orderBy?: CareOutcomeOrderByWithRelationInput | CareOutcomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CareOutcomes.
     */
    cursor?: CareOutcomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CareOutcomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CareOutcomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CareOutcomes.
     */
    distinct?: CareOutcomeScalarFieldEnum | CareOutcomeScalarFieldEnum[]
  }

  /**
   * CareOutcome findFirstOrThrow
   */
  export type CareOutcomeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CareOutcome
     */
    select?: CareOutcomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CareOutcome
     */
    omit?: CareOutcomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CareOutcomeInclude<ExtArgs> | null
    /**
     * Filter, which CareOutcome to fetch.
     */
    where?: CareOutcomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CareOutcomes to fetch.
     */
    orderBy?: CareOutcomeOrderByWithRelationInput | CareOutcomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CareOutcomes.
     */
    cursor?: CareOutcomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CareOutcomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CareOutcomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CareOutcomes.
     */
    distinct?: CareOutcomeScalarFieldEnum | CareOutcomeScalarFieldEnum[]
  }

  /**
   * CareOutcome findMany
   */
  export type CareOutcomeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CareOutcome
     */
    select?: CareOutcomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CareOutcome
     */
    omit?: CareOutcomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CareOutcomeInclude<ExtArgs> | null
    /**
     * Filter, which CareOutcomes to fetch.
     */
    where?: CareOutcomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CareOutcomes to fetch.
     */
    orderBy?: CareOutcomeOrderByWithRelationInput | CareOutcomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CareOutcomes.
     */
    cursor?: CareOutcomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CareOutcomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CareOutcomes.
     */
    skip?: number
    distinct?: CareOutcomeScalarFieldEnum | CareOutcomeScalarFieldEnum[]
  }

  /**
   * CareOutcome create
   */
  export type CareOutcomeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CareOutcome
     */
    select?: CareOutcomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CareOutcome
     */
    omit?: CareOutcomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CareOutcomeInclude<ExtArgs> | null
    /**
     * The data needed to create a CareOutcome.
     */
    data: XOR<CareOutcomeCreateInput, CareOutcomeUncheckedCreateInput>
  }

  /**
   * CareOutcome createMany
   */
  export type CareOutcomeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CareOutcomes.
     */
    data: CareOutcomeCreateManyInput | CareOutcomeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CareOutcome createManyAndReturn
   */
  export type CareOutcomeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CareOutcome
     */
    select?: CareOutcomeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CareOutcome
     */
    omit?: CareOutcomeOmit<ExtArgs> | null
    /**
     * The data used to create many CareOutcomes.
     */
    data: CareOutcomeCreateManyInput | CareOutcomeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CareOutcomeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CareOutcome update
   */
  export type CareOutcomeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CareOutcome
     */
    select?: CareOutcomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CareOutcome
     */
    omit?: CareOutcomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CareOutcomeInclude<ExtArgs> | null
    /**
     * The data needed to update a CareOutcome.
     */
    data: XOR<CareOutcomeUpdateInput, CareOutcomeUncheckedUpdateInput>
    /**
     * Choose, which CareOutcome to update.
     */
    where: CareOutcomeWhereUniqueInput
  }

  /**
   * CareOutcome updateMany
   */
  export type CareOutcomeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CareOutcomes.
     */
    data: XOR<CareOutcomeUpdateManyMutationInput, CareOutcomeUncheckedUpdateManyInput>
    /**
     * Filter which CareOutcomes to update
     */
    where?: CareOutcomeWhereInput
    /**
     * Limit how many CareOutcomes to update.
     */
    limit?: number
  }

  /**
   * CareOutcome updateManyAndReturn
   */
  export type CareOutcomeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CareOutcome
     */
    select?: CareOutcomeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CareOutcome
     */
    omit?: CareOutcomeOmit<ExtArgs> | null
    /**
     * The data used to update CareOutcomes.
     */
    data: XOR<CareOutcomeUpdateManyMutationInput, CareOutcomeUncheckedUpdateManyInput>
    /**
     * Filter which CareOutcomes to update
     */
    where?: CareOutcomeWhereInput
    /**
     * Limit how many CareOutcomes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CareOutcomeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CareOutcome upsert
   */
  export type CareOutcomeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CareOutcome
     */
    select?: CareOutcomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CareOutcome
     */
    omit?: CareOutcomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CareOutcomeInclude<ExtArgs> | null
    /**
     * The filter to search for the CareOutcome to update in case it exists.
     */
    where: CareOutcomeWhereUniqueInput
    /**
     * In case the CareOutcome found by the `where` argument doesn't exist, create a new CareOutcome with this data.
     */
    create: XOR<CareOutcomeCreateInput, CareOutcomeUncheckedCreateInput>
    /**
     * In case the CareOutcome was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CareOutcomeUpdateInput, CareOutcomeUncheckedUpdateInput>
  }

  /**
   * CareOutcome delete
   */
  export type CareOutcomeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CareOutcome
     */
    select?: CareOutcomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CareOutcome
     */
    omit?: CareOutcomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CareOutcomeInclude<ExtArgs> | null
    /**
     * Filter which CareOutcome to delete.
     */
    where: CareOutcomeWhereUniqueInput
  }

  /**
   * CareOutcome deleteMany
   */
  export type CareOutcomeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CareOutcomes to delete
     */
    where?: CareOutcomeWhereInput
    /**
     * Limit how many CareOutcomes to delete.
     */
    limit?: number
  }

  /**
   * CareOutcome without action
   */
  export type CareOutcomeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CareOutcome
     */
    select?: CareOutcomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CareOutcome
     */
    omit?: CareOutcomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CareOutcomeInclude<ExtArgs> | null
  }


  /**
   * Model CommunicationLog
   */

  export type AggregateCommunicationLog = {
    _count: CommunicationLogCountAggregateOutputType | null
    _min: CommunicationLogMinAggregateOutputType | null
    _max: CommunicationLogMaxAggregateOutputType | null
  }

  export type CommunicationLogMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    message: string | null
    createdAt: Date | null
  }

  export type CommunicationLogMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    message: string | null
    createdAt: Date | null
  }

  export type CommunicationLogCountAggregateOutputType = {
    id: number
    clientId: number
    message: number
    createdAt: number
    _all: number
  }


  export type CommunicationLogMinAggregateInputType = {
    id?: true
    clientId?: true
    message?: true
    createdAt?: true
  }

  export type CommunicationLogMaxAggregateInputType = {
    id?: true
    clientId?: true
    message?: true
    createdAt?: true
  }

  export type CommunicationLogCountAggregateInputType = {
    id?: true
    clientId?: true
    message?: true
    createdAt?: true
    _all?: true
  }

  export type CommunicationLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CommunicationLog to aggregate.
     */
    where?: CommunicationLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommunicationLogs to fetch.
     */
    orderBy?: CommunicationLogOrderByWithRelationInput | CommunicationLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommunicationLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommunicationLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommunicationLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CommunicationLogs
    **/
    _count?: true | CommunicationLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommunicationLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommunicationLogMaxAggregateInputType
  }

  export type GetCommunicationLogAggregateType<T extends CommunicationLogAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunicationLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunicationLog[P]>
      : GetScalarType<T[P], AggregateCommunicationLog[P]>
  }




  export type CommunicationLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommunicationLogWhereInput
    orderBy?: CommunicationLogOrderByWithAggregationInput | CommunicationLogOrderByWithAggregationInput[]
    by: CommunicationLogScalarFieldEnum[] | CommunicationLogScalarFieldEnum
    having?: CommunicationLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommunicationLogCountAggregateInputType | true
    _min?: CommunicationLogMinAggregateInputType
    _max?: CommunicationLogMaxAggregateInputType
  }

  export type CommunicationLogGroupByOutputType = {
    id: string
    clientId: string
    message: string
    createdAt: Date
    _count: CommunicationLogCountAggregateOutputType | null
    _min: CommunicationLogMinAggregateOutputType | null
    _max: CommunicationLogMaxAggregateOutputType | null
  }

  type GetCommunicationLogGroupByPayload<T extends CommunicationLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommunicationLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommunicationLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommunicationLogGroupByOutputType[P]>
            : GetScalarType<T[P], CommunicationLogGroupByOutputType[P]>
        }
      >
    >


  export type CommunicationLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    message?: boolean
    createdAt?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["communicationLog"]>

  export type CommunicationLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    message?: boolean
    createdAt?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["communicationLog"]>

  export type CommunicationLogSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    message?: boolean
    createdAt?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["communicationLog"]>

  export type CommunicationLogSelectScalar = {
    id?: boolean
    clientId?: boolean
    message?: boolean
    createdAt?: boolean
  }

  export type CommunicationLogOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clientId" | "message" | "createdAt", ExtArgs["result"]["communicationLog"]>
  export type CommunicationLogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CommunicationLogIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CommunicationLogIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $CommunicationLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CommunicationLog"
    objects: {
      client: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      message: string
      createdAt: Date
    }, ExtArgs["result"]["communicationLog"]>
    composites: {}
  }

  type CommunicationLogGetPayload<S extends boolean | null | undefined | CommunicationLogDefaultArgs> = $Result.GetResult<Prisma.$CommunicationLogPayload, S>

  type CommunicationLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CommunicationLogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommunicationLogCountAggregateInputType | true
    }

  export interface CommunicationLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CommunicationLog'], meta: { name: 'CommunicationLog' } }
    /**
     * Find zero or one CommunicationLog that matches the filter.
     * @param {CommunicationLogFindUniqueArgs} args - Arguments to find a CommunicationLog
     * @example
     * // Get one CommunicationLog
     * const communicationLog = await prisma.communicationLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommunicationLogFindUniqueArgs>(args: SelectSubset<T, CommunicationLogFindUniqueArgs<ExtArgs>>): Prisma__CommunicationLogClient<$Result.GetResult<Prisma.$CommunicationLogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CommunicationLog that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CommunicationLogFindUniqueOrThrowArgs} args - Arguments to find a CommunicationLog
     * @example
     * // Get one CommunicationLog
     * const communicationLog = await prisma.communicationLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommunicationLogFindUniqueOrThrowArgs>(args: SelectSubset<T, CommunicationLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommunicationLogClient<$Result.GetResult<Prisma.$CommunicationLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CommunicationLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationLogFindFirstArgs} args - Arguments to find a CommunicationLog
     * @example
     * // Get one CommunicationLog
     * const communicationLog = await prisma.communicationLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommunicationLogFindFirstArgs>(args?: SelectSubset<T, CommunicationLogFindFirstArgs<ExtArgs>>): Prisma__CommunicationLogClient<$Result.GetResult<Prisma.$CommunicationLogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CommunicationLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationLogFindFirstOrThrowArgs} args - Arguments to find a CommunicationLog
     * @example
     * // Get one CommunicationLog
     * const communicationLog = await prisma.communicationLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommunicationLogFindFirstOrThrowArgs>(args?: SelectSubset<T, CommunicationLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommunicationLogClient<$Result.GetResult<Prisma.$CommunicationLogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CommunicationLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CommunicationLogs
     * const communicationLogs = await prisma.communicationLog.findMany()
     * 
     * // Get first 10 CommunicationLogs
     * const communicationLogs = await prisma.communicationLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const communicationLogWithIdOnly = await prisma.communicationLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CommunicationLogFindManyArgs>(args?: SelectSubset<T, CommunicationLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunicationLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CommunicationLog.
     * @param {CommunicationLogCreateArgs} args - Arguments to create a CommunicationLog.
     * @example
     * // Create one CommunicationLog
     * const CommunicationLog = await prisma.communicationLog.create({
     *   data: {
     *     // ... data to create a CommunicationLog
     *   }
     * })
     * 
     */
    create<T extends CommunicationLogCreateArgs>(args: SelectSubset<T, CommunicationLogCreateArgs<ExtArgs>>): Prisma__CommunicationLogClient<$Result.GetResult<Prisma.$CommunicationLogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CommunicationLogs.
     * @param {CommunicationLogCreateManyArgs} args - Arguments to create many CommunicationLogs.
     * @example
     * // Create many CommunicationLogs
     * const communicationLog = await prisma.communicationLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommunicationLogCreateManyArgs>(args?: SelectSubset<T, CommunicationLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CommunicationLogs and returns the data saved in the database.
     * @param {CommunicationLogCreateManyAndReturnArgs} args - Arguments to create many CommunicationLogs.
     * @example
     * // Create many CommunicationLogs
     * const communicationLog = await prisma.communicationLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CommunicationLogs and only return the `id`
     * const communicationLogWithIdOnly = await prisma.communicationLog.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CommunicationLogCreateManyAndReturnArgs>(args?: SelectSubset<T, CommunicationLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunicationLogPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CommunicationLog.
     * @param {CommunicationLogDeleteArgs} args - Arguments to delete one CommunicationLog.
     * @example
     * // Delete one CommunicationLog
     * const CommunicationLog = await prisma.communicationLog.delete({
     *   where: {
     *     // ... filter to delete one CommunicationLog
     *   }
     * })
     * 
     */
    delete<T extends CommunicationLogDeleteArgs>(args: SelectSubset<T, CommunicationLogDeleteArgs<ExtArgs>>): Prisma__CommunicationLogClient<$Result.GetResult<Prisma.$CommunicationLogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CommunicationLog.
     * @param {CommunicationLogUpdateArgs} args - Arguments to update one CommunicationLog.
     * @example
     * // Update one CommunicationLog
     * const communicationLog = await prisma.communicationLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommunicationLogUpdateArgs>(args: SelectSubset<T, CommunicationLogUpdateArgs<ExtArgs>>): Prisma__CommunicationLogClient<$Result.GetResult<Prisma.$CommunicationLogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CommunicationLogs.
     * @param {CommunicationLogDeleteManyArgs} args - Arguments to filter CommunicationLogs to delete.
     * @example
     * // Delete a few CommunicationLogs
     * const { count } = await prisma.communicationLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommunicationLogDeleteManyArgs>(args?: SelectSubset<T, CommunicationLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CommunicationLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CommunicationLogs
     * const communicationLog = await prisma.communicationLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommunicationLogUpdateManyArgs>(args: SelectSubset<T, CommunicationLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CommunicationLogs and returns the data updated in the database.
     * @param {CommunicationLogUpdateManyAndReturnArgs} args - Arguments to update many CommunicationLogs.
     * @example
     * // Update many CommunicationLogs
     * const communicationLog = await prisma.communicationLog.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CommunicationLogs and only return the `id`
     * const communicationLogWithIdOnly = await prisma.communicationLog.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CommunicationLogUpdateManyAndReturnArgs>(args: SelectSubset<T, CommunicationLogUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunicationLogPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CommunicationLog.
     * @param {CommunicationLogUpsertArgs} args - Arguments to update or create a CommunicationLog.
     * @example
     * // Update or create a CommunicationLog
     * const communicationLog = await prisma.communicationLog.upsert({
     *   create: {
     *     // ... data to create a CommunicationLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CommunicationLog we want to update
     *   }
     * })
     */
    upsert<T extends CommunicationLogUpsertArgs>(args: SelectSubset<T, CommunicationLogUpsertArgs<ExtArgs>>): Prisma__CommunicationLogClient<$Result.GetResult<Prisma.$CommunicationLogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CommunicationLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationLogCountArgs} args - Arguments to filter CommunicationLogs to count.
     * @example
     * // Count the number of CommunicationLogs
     * const count = await prisma.communicationLog.count({
     *   where: {
     *     // ... the filter for the CommunicationLogs we want to count
     *   }
     * })
    **/
    count<T extends CommunicationLogCountArgs>(
      args?: Subset<T, CommunicationLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommunicationLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CommunicationLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommunicationLogAggregateArgs>(args: Subset<T, CommunicationLogAggregateArgs>): Prisma.PrismaPromise<GetCommunicationLogAggregateType<T>>

    /**
     * Group by CommunicationLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunicationLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommunicationLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommunicationLogGroupByArgs['orderBy'] }
        : { orderBy?: CommunicationLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommunicationLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunicationLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CommunicationLog model
   */
  readonly fields: CommunicationLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CommunicationLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommunicationLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CommunicationLog model
   */ 
  interface CommunicationLogFieldRefs {
    readonly id: FieldRef<"CommunicationLog", 'String'>
    readonly clientId: FieldRef<"CommunicationLog", 'String'>
    readonly message: FieldRef<"CommunicationLog", 'String'>
    readonly createdAt: FieldRef<"CommunicationLog", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CommunicationLog findUnique
   */
  export type CommunicationLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationLog
     */
    select?: CommunicationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationLog
     */
    omit?: CommunicationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationLogInclude<ExtArgs> | null
    /**
     * Filter, which CommunicationLog to fetch.
     */
    where: CommunicationLogWhereUniqueInput
  }

  /**
   * CommunicationLog findUniqueOrThrow
   */
  export type CommunicationLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationLog
     */
    select?: CommunicationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationLog
     */
    omit?: CommunicationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationLogInclude<ExtArgs> | null
    /**
     * Filter, which CommunicationLog to fetch.
     */
    where: CommunicationLogWhereUniqueInput
  }

  /**
   * CommunicationLog findFirst
   */
  export type CommunicationLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationLog
     */
    select?: CommunicationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationLog
     */
    omit?: CommunicationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationLogInclude<ExtArgs> | null
    /**
     * Filter, which CommunicationLog to fetch.
     */
    where?: CommunicationLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommunicationLogs to fetch.
     */
    orderBy?: CommunicationLogOrderByWithRelationInput | CommunicationLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CommunicationLogs.
     */
    cursor?: CommunicationLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommunicationLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommunicationLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CommunicationLogs.
     */
    distinct?: CommunicationLogScalarFieldEnum | CommunicationLogScalarFieldEnum[]
  }

  /**
   * CommunicationLog findFirstOrThrow
   */
  export type CommunicationLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationLog
     */
    select?: CommunicationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationLog
     */
    omit?: CommunicationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationLogInclude<ExtArgs> | null
    /**
     * Filter, which CommunicationLog to fetch.
     */
    where?: CommunicationLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommunicationLogs to fetch.
     */
    orderBy?: CommunicationLogOrderByWithRelationInput | CommunicationLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CommunicationLogs.
     */
    cursor?: CommunicationLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommunicationLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommunicationLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CommunicationLogs.
     */
    distinct?: CommunicationLogScalarFieldEnum | CommunicationLogScalarFieldEnum[]
  }

  /**
   * CommunicationLog findMany
   */
  export type CommunicationLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationLog
     */
    select?: CommunicationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationLog
     */
    omit?: CommunicationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationLogInclude<ExtArgs> | null
    /**
     * Filter, which CommunicationLogs to fetch.
     */
    where?: CommunicationLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommunicationLogs to fetch.
     */
    orderBy?: CommunicationLogOrderByWithRelationInput | CommunicationLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CommunicationLogs.
     */
    cursor?: CommunicationLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommunicationLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommunicationLogs.
     */
    skip?: number
    distinct?: CommunicationLogScalarFieldEnum | CommunicationLogScalarFieldEnum[]
  }

  /**
   * CommunicationLog create
   */
  export type CommunicationLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationLog
     */
    select?: CommunicationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationLog
     */
    omit?: CommunicationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationLogInclude<ExtArgs> | null
    /**
     * The data needed to create a CommunicationLog.
     */
    data: XOR<CommunicationLogCreateInput, CommunicationLogUncheckedCreateInput>
  }

  /**
   * CommunicationLog createMany
   */
  export type CommunicationLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CommunicationLogs.
     */
    data: CommunicationLogCreateManyInput | CommunicationLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CommunicationLog createManyAndReturn
   */
  export type CommunicationLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationLog
     */
    select?: CommunicationLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationLog
     */
    omit?: CommunicationLogOmit<ExtArgs> | null
    /**
     * The data used to create many CommunicationLogs.
     */
    data: CommunicationLogCreateManyInput | CommunicationLogCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationLogIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CommunicationLog update
   */
  export type CommunicationLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationLog
     */
    select?: CommunicationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationLog
     */
    omit?: CommunicationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationLogInclude<ExtArgs> | null
    /**
     * The data needed to update a CommunicationLog.
     */
    data: XOR<CommunicationLogUpdateInput, CommunicationLogUncheckedUpdateInput>
    /**
     * Choose, which CommunicationLog to update.
     */
    where: CommunicationLogWhereUniqueInput
  }

  /**
   * CommunicationLog updateMany
   */
  export type CommunicationLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CommunicationLogs.
     */
    data: XOR<CommunicationLogUpdateManyMutationInput, CommunicationLogUncheckedUpdateManyInput>
    /**
     * Filter which CommunicationLogs to update
     */
    where?: CommunicationLogWhereInput
    /**
     * Limit how many CommunicationLogs to update.
     */
    limit?: number
  }

  /**
   * CommunicationLog updateManyAndReturn
   */
  export type CommunicationLogUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationLog
     */
    select?: CommunicationLogSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationLog
     */
    omit?: CommunicationLogOmit<ExtArgs> | null
    /**
     * The data used to update CommunicationLogs.
     */
    data: XOR<CommunicationLogUpdateManyMutationInput, CommunicationLogUncheckedUpdateManyInput>
    /**
     * Filter which CommunicationLogs to update
     */
    where?: CommunicationLogWhereInput
    /**
     * Limit how many CommunicationLogs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationLogIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CommunicationLog upsert
   */
  export type CommunicationLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationLog
     */
    select?: CommunicationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationLog
     */
    omit?: CommunicationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationLogInclude<ExtArgs> | null
    /**
     * The filter to search for the CommunicationLog to update in case it exists.
     */
    where: CommunicationLogWhereUniqueInput
    /**
     * In case the CommunicationLog found by the `where` argument doesn't exist, create a new CommunicationLog with this data.
     */
    create: XOR<CommunicationLogCreateInput, CommunicationLogUncheckedCreateInput>
    /**
     * In case the CommunicationLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommunicationLogUpdateInput, CommunicationLogUncheckedUpdateInput>
  }

  /**
   * CommunicationLog delete
   */
  export type CommunicationLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationLog
     */
    select?: CommunicationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationLog
     */
    omit?: CommunicationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationLogInclude<ExtArgs> | null
    /**
     * Filter which CommunicationLog to delete.
     */
    where: CommunicationLogWhereUniqueInput
  }

  /**
   * CommunicationLog deleteMany
   */
  export type CommunicationLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CommunicationLogs to delete
     */
    where?: CommunicationLogWhereInput
    /**
     * Limit how many CommunicationLogs to delete.
     */
    limit?: number
  }

  /**
   * CommunicationLog without action
   */
  export type CommunicationLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunicationLog
     */
    select?: CommunicationLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunicationLog
     */
    omit?: CommunicationLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunicationLogInclude<ExtArgs> | null
  }


  /**
   * Model RiskCategory
   */

  export type AggregateRiskCategory = {
    _count: RiskCategoryCountAggregateOutputType | null
    _min: RiskCategoryMinAggregateOutputType | null
    _max: RiskCategoryMaxAggregateOutputType | null
  }

  export type RiskCategoryMinAggregateOutputType = {
    id: string | null
    agencyId: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
  }

  export type RiskCategoryMaxAggregateOutputType = {
    id: string | null
    agencyId: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
  }

  export type RiskCategoryCountAggregateOutputType = {
    id: number
    agencyId: number
    name: number
    description: number
    createdAt: number
    _all: number
  }


  export type RiskCategoryMinAggregateInputType = {
    id?: true
    agencyId?: true
    name?: true
    description?: true
    createdAt?: true
  }

  export type RiskCategoryMaxAggregateInputType = {
    id?: true
    agencyId?: true
    name?: true
    description?: true
    createdAt?: true
  }

  export type RiskCategoryCountAggregateInputType = {
    id?: true
    agencyId?: true
    name?: true
    description?: true
    createdAt?: true
    _all?: true
  }

  export type RiskCategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RiskCategory to aggregate.
     */
    where?: RiskCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiskCategories to fetch.
     */
    orderBy?: RiskCategoryOrderByWithRelationInput | RiskCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RiskCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiskCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiskCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RiskCategories
    **/
    _count?: true | RiskCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RiskCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RiskCategoryMaxAggregateInputType
  }

  export type GetRiskCategoryAggregateType<T extends RiskCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateRiskCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRiskCategory[P]>
      : GetScalarType<T[P], AggregateRiskCategory[P]>
  }




  export type RiskCategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RiskCategoryWhereInput
    orderBy?: RiskCategoryOrderByWithAggregationInput | RiskCategoryOrderByWithAggregationInput[]
    by: RiskCategoryScalarFieldEnum[] | RiskCategoryScalarFieldEnum
    having?: RiskCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RiskCategoryCountAggregateInputType | true
    _min?: RiskCategoryMinAggregateInputType
    _max?: RiskCategoryMaxAggregateInputType
  }

  export type RiskCategoryGroupByOutputType = {
    id: string
    agencyId: string
    name: string
    description: string | null
    createdAt: Date
    _count: RiskCategoryCountAggregateOutputType | null
    _min: RiskCategoryMinAggregateOutputType | null
    _max: RiskCategoryMaxAggregateOutputType | null
  }

  type GetRiskCategoryGroupByPayload<T extends RiskCategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RiskCategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RiskCategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RiskCategoryGroupByOutputType[P]>
            : GetScalarType<T[P], RiskCategoryGroupByOutputType[P]>
        }
      >
    >


  export type RiskCategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    riskAssessments?: boolean | RiskCategory$riskAssessmentsArgs<ExtArgs>
    _count?: boolean | RiskCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["riskCategory"]>

  export type RiskCategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["riskCategory"]>

  export type RiskCategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["riskCategory"]>

  export type RiskCategorySelectScalar = {
    id?: boolean
    agencyId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
  }

  export type RiskCategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "agencyId" | "name" | "description" | "createdAt", ExtArgs["result"]["riskCategory"]>
  export type RiskCategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    riskAssessments?: boolean | RiskCategory$riskAssessmentsArgs<ExtArgs>
    _count?: boolean | RiskCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RiskCategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }
  export type RiskCategoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }

  export type $RiskCategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RiskCategory"
    objects: {
      agency: Prisma.$AgencyPayload<ExtArgs>
      riskAssessments: Prisma.$RiskAssessmentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      agencyId: string
      name: string
      description: string | null
      createdAt: Date
    }, ExtArgs["result"]["riskCategory"]>
    composites: {}
  }

  type RiskCategoryGetPayload<S extends boolean | null | undefined | RiskCategoryDefaultArgs> = $Result.GetResult<Prisma.$RiskCategoryPayload, S>

  type RiskCategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RiskCategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RiskCategoryCountAggregateInputType | true
    }

  export interface RiskCategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RiskCategory'], meta: { name: 'RiskCategory' } }
    /**
     * Find zero or one RiskCategory that matches the filter.
     * @param {RiskCategoryFindUniqueArgs} args - Arguments to find a RiskCategory
     * @example
     * // Get one RiskCategory
     * const riskCategory = await prisma.riskCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RiskCategoryFindUniqueArgs>(args: SelectSubset<T, RiskCategoryFindUniqueArgs<ExtArgs>>): Prisma__RiskCategoryClient<$Result.GetResult<Prisma.$RiskCategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RiskCategory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RiskCategoryFindUniqueOrThrowArgs} args - Arguments to find a RiskCategory
     * @example
     * // Get one RiskCategory
     * const riskCategory = await prisma.riskCategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RiskCategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, RiskCategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RiskCategoryClient<$Result.GetResult<Prisma.$RiskCategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RiskCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiskCategoryFindFirstArgs} args - Arguments to find a RiskCategory
     * @example
     * // Get one RiskCategory
     * const riskCategory = await prisma.riskCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RiskCategoryFindFirstArgs>(args?: SelectSubset<T, RiskCategoryFindFirstArgs<ExtArgs>>): Prisma__RiskCategoryClient<$Result.GetResult<Prisma.$RiskCategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RiskCategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiskCategoryFindFirstOrThrowArgs} args - Arguments to find a RiskCategory
     * @example
     * // Get one RiskCategory
     * const riskCategory = await prisma.riskCategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RiskCategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, RiskCategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__RiskCategoryClient<$Result.GetResult<Prisma.$RiskCategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RiskCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiskCategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RiskCategories
     * const riskCategories = await prisma.riskCategory.findMany()
     * 
     * // Get first 10 RiskCategories
     * const riskCategories = await prisma.riskCategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const riskCategoryWithIdOnly = await prisma.riskCategory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RiskCategoryFindManyArgs>(args?: SelectSubset<T, RiskCategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiskCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RiskCategory.
     * @param {RiskCategoryCreateArgs} args - Arguments to create a RiskCategory.
     * @example
     * // Create one RiskCategory
     * const RiskCategory = await prisma.riskCategory.create({
     *   data: {
     *     // ... data to create a RiskCategory
     *   }
     * })
     * 
     */
    create<T extends RiskCategoryCreateArgs>(args: SelectSubset<T, RiskCategoryCreateArgs<ExtArgs>>): Prisma__RiskCategoryClient<$Result.GetResult<Prisma.$RiskCategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RiskCategories.
     * @param {RiskCategoryCreateManyArgs} args - Arguments to create many RiskCategories.
     * @example
     * // Create many RiskCategories
     * const riskCategory = await prisma.riskCategory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RiskCategoryCreateManyArgs>(args?: SelectSubset<T, RiskCategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RiskCategories and returns the data saved in the database.
     * @param {RiskCategoryCreateManyAndReturnArgs} args - Arguments to create many RiskCategories.
     * @example
     * // Create many RiskCategories
     * const riskCategory = await prisma.riskCategory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RiskCategories and only return the `id`
     * const riskCategoryWithIdOnly = await prisma.riskCategory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RiskCategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, RiskCategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiskCategoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RiskCategory.
     * @param {RiskCategoryDeleteArgs} args - Arguments to delete one RiskCategory.
     * @example
     * // Delete one RiskCategory
     * const RiskCategory = await prisma.riskCategory.delete({
     *   where: {
     *     // ... filter to delete one RiskCategory
     *   }
     * })
     * 
     */
    delete<T extends RiskCategoryDeleteArgs>(args: SelectSubset<T, RiskCategoryDeleteArgs<ExtArgs>>): Prisma__RiskCategoryClient<$Result.GetResult<Prisma.$RiskCategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RiskCategory.
     * @param {RiskCategoryUpdateArgs} args - Arguments to update one RiskCategory.
     * @example
     * // Update one RiskCategory
     * const riskCategory = await prisma.riskCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RiskCategoryUpdateArgs>(args: SelectSubset<T, RiskCategoryUpdateArgs<ExtArgs>>): Prisma__RiskCategoryClient<$Result.GetResult<Prisma.$RiskCategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RiskCategories.
     * @param {RiskCategoryDeleteManyArgs} args - Arguments to filter RiskCategories to delete.
     * @example
     * // Delete a few RiskCategories
     * const { count } = await prisma.riskCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RiskCategoryDeleteManyArgs>(args?: SelectSubset<T, RiskCategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RiskCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiskCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RiskCategories
     * const riskCategory = await prisma.riskCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RiskCategoryUpdateManyArgs>(args: SelectSubset<T, RiskCategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RiskCategories and returns the data updated in the database.
     * @param {RiskCategoryUpdateManyAndReturnArgs} args - Arguments to update many RiskCategories.
     * @example
     * // Update many RiskCategories
     * const riskCategory = await prisma.riskCategory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RiskCategories and only return the `id`
     * const riskCategoryWithIdOnly = await prisma.riskCategory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RiskCategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, RiskCategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiskCategoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RiskCategory.
     * @param {RiskCategoryUpsertArgs} args - Arguments to update or create a RiskCategory.
     * @example
     * // Update or create a RiskCategory
     * const riskCategory = await prisma.riskCategory.upsert({
     *   create: {
     *     // ... data to create a RiskCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RiskCategory we want to update
     *   }
     * })
     */
    upsert<T extends RiskCategoryUpsertArgs>(args: SelectSubset<T, RiskCategoryUpsertArgs<ExtArgs>>): Prisma__RiskCategoryClient<$Result.GetResult<Prisma.$RiskCategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RiskCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiskCategoryCountArgs} args - Arguments to filter RiskCategories to count.
     * @example
     * // Count the number of RiskCategories
     * const count = await prisma.riskCategory.count({
     *   where: {
     *     // ... the filter for the RiskCategories we want to count
     *   }
     * })
    **/
    count<T extends RiskCategoryCountArgs>(
      args?: Subset<T, RiskCategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RiskCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RiskCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiskCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RiskCategoryAggregateArgs>(args: Subset<T, RiskCategoryAggregateArgs>): Prisma.PrismaPromise<GetRiskCategoryAggregateType<T>>

    /**
     * Group by RiskCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiskCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RiskCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RiskCategoryGroupByArgs['orderBy'] }
        : { orderBy?: RiskCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RiskCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRiskCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RiskCategory model
   */
  readonly fields: RiskCategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RiskCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RiskCategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agency<T extends AgencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyDefaultArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    riskAssessments<T extends RiskCategory$riskAssessmentsArgs<ExtArgs> = {}>(args?: Subset<T, RiskCategory$riskAssessmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiskAssessmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RiskCategory model
   */ 
  interface RiskCategoryFieldRefs {
    readonly id: FieldRef<"RiskCategory", 'String'>
    readonly agencyId: FieldRef<"RiskCategory", 'String'>
    readonly name: FieldRef<"RiskCategory", 'String'>
    readonly description: FieldRef<"RiskCategory", 'String'>
    readonly createdAt: FieldRef<"RiskCategory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RiskCategory findUnique
   */
  export type RiskCategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskCategory
     */
    select?: RiskCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskCategory
     */
    omit?: RiskCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskCategoryInclude<ExtArgs> | null
    /**
     * Filter, which RiskCategory to fetch.
     */
    where: RiskCategoryWhereUniqueInput
  }

  /**
   * RiskCategory findUniqueOrThrow
   */
  export type RiskCategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskCategory
     */
    select?: RiskCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskCategory
     */
    omit?: RiskCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskCategoryInclude<ExtArgs> | null
    /**
     * Filter, which RiskCategory to fetch.
     */
    where: RiskCategoryWhereUniqueInput
  }

  /**
   * RiskCategory findFirst
   */
  export type RiskCategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskCategory
     */
    select?: RiskCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskCategory
     */
    omit?: RiskCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskCategoryInclude<ExtArgs> | null
    /**
     * Filter, which RiskCategory to fetch.
     */
    where?: RiskCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiskCategories to fetch.
     */
    orderBy?: RiskCategoryOrderByWithRelationInput | RiskCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RiskCategories.
     */
    cursor?: RiskCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiskCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiskCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RiskCategories.
     */
    distinct?: RiskCategoryScalarFieldEnum | RiskCategoryScalarFieldEnum[]
  }

  /**
   * RiskCategory findFirstOrThrow
   */
  export type RiskCategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskCategory
     */
    select?: RiskCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskCategory
     */
    omit?: RiskCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskCategoryInclude<ExtArgs> | null
    /**
     * Filter, which RiskCategory to fetch.
     */
    where?: RiskCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiskCategories to fetch.
     */
    orderBy?: RiskCategoryOrderByWithRelationInput | RiskCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RiskCategories.
     */
    cursor?: RiskCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiskCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiskCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RiskCategories.
     */
    distinct?: RiskCategoryScalarFieldEnum | RiskCategoryScalarFieldEnum[]
  }

  /**
   * RiskCategory findMany
   */
  export type RiskCategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskCategory
     */
    select?: RiskCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskCategory
     */
    omit?: RiskCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskCategoryInclude<ExtArgs> | null
    /**
     * Filter, which RiskCategories to fetch.
     */
    where?: RiskCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiskCategories to fetch.
     */
    orderBy?: RiskCategoryOrderByWithRelationInput | RiskCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RiskCategories.
     */
    cursor?: RiskCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiskCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiskCategories.
     */
    skip?: number
    distinct?: RiskCategoryScalarFieldEnum | RiskCategoryScalarFieldEnum[]
  }

  /**
   * RiskCategory create
   */
  export type RiskCategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskCategory
     */
    select?: RiskCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskCategory
     */
    omit?: RiskCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskCategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a RiskCategory.
     */
    data: XOR<RiskCategoryCreateInput, RiskCategoryUncheckedCreateInput>
  }

  /**
   * RiskCategory createMany
   */
  export type RiskCategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RiskCategories.
     */
    data: RiskCategoryCreateManyInput | RiskCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RiskCategory createManyAndReturn
   */
  export type RiskCategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskCategory
     */
    select?: RiskCategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RiskCategory
     */
    omit?: RiskCategoryOmit<ExtArgs> | null
    /**
     * The data used to create many RiskCategories.
     */
    data: RiskCategoryCreateManyInput | RiskCategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskCategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RiskCategory update
   */
  export type RiskCategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskCategory
     */
    select?: RiskCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskCategory
     */
    omit?: RiskCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskCategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a RiskCategory.
     */
    data: XOR<RiskCategoryUpdateInput, RiskCategoryUncheckedUpdateInput>
    /**
     * Choose, which RiskCategory to update.
     */
    where: RiskCategoryWhereUniqueInput
  }

  /**
   * RiskCategory updateMany
   */
  export type RiskCategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RiskCategories.
     */
    data: XOR<RiskCategoryUpdateManyMutationInput, RiskCategoryUncheckedUpdateManyInput>
    /**
     * Filter which RiskCategories to update
     */
    where?: RiskCategoryWhereInput
    /**
     * Limit how many RiskCategories to update.
     */
    limit?: number
  }

  /**
   * RiskCategory updateManyAndReturn
   */
  export type RiskCategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskCategory
     */
    select?: RiskCategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RiskCategory
     */
    omit?: RiskCategoryOmit<ExtArgs> | null
    /**
     * The data used to update RiskCategories.
     */
    data: XOR<RiskCategoryUpdateManyMutationInput, RiskCategoryUncheckedUpdateManyInput>
    /**
     * Filter which RiskCategories to update
     */
    where?: RiskCategoryWhereInput
    /**
     * Limit how many RiskCategories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskCategoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RiskCategory upsert
   */
  export type RiskCategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskCategory
     */
    select?: RiskCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskCategory
     */
    omit?: RiskCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskCategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the RiskCategory to update in case it exists.
     */
    where: RiskCategoryWhereUniqueInput
    /**
     * In case the RiskCategory found by the `where` argument doesn't exist, create a new RiskCategory with this data.
     */
    create: XOR<RiskCategoryCreateInput, RiskCategoryUncheckedCreateInput>
    /**
     * In case the RiskCategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RiskCategoryUpdateInput, RiskCategoryUncheckedUpdateInput>
  }

  /**
   * RiskCategory delete
   */
  export type RiskCategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskCategory
     */
    select?: RiskCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskCategory
     */
    omit?: RiskCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskCategoryInclude<ExtArgs> | null
    /**
     * Filter which RiskCategory to delete.
     */
    where: RiskCategoryWhereUniqueInput
  }

  /**
   * RiskCategory deleteMany
   */
  export type RiskCategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RiskCategories to delete
     */
    where?: RiskCategoryWhereInput
    /**
     * Limit how many RiskCategories to delete.
     */
    limit?: number
  }

  /**
   * RiskCategory.riskAssessments
   */
  export type RiskCategory$riskAssessmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskAssessment
     */
    select?: RiskAssessmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskAssessment
     */
    omit?: RiskAssessmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskAssessmentInclude<ExtArgs> | null
    where?: RiskAssessmentWhereInput
    orderBy?: RiskAssessmentOrderByWithRelationInput | RiskAssessmentOrderByWithRelationInput[]
    cursor?: RiskAssessmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RiskAssessmentScalarFieldEnum | RiskAssessmentScalarFieldEnum[]
  }

  /**
   * RiskCategory without action
   */
  export type RiskCategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskCategory
     */
    select?: RiskCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskCategory
     */
    omit?: RiskCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskCategoryInclude<ExtArgs> | null
  }


  /**
   * Model RiskAssessment
   */

  export type AggregateRiskAssessment = {
    _count: RiskAssessmentCountAggregateOutputType | null
    _avg: RiskAssessmentAvgAggregateOutputType | null
    _sum: RiskAssessmentSumAggregateOutputType | null
    _min: RiskAssessmentMinAggregateOutputType | null
    _max: RiskAssessmentMaxAggregateOutputType | null
  }

  export type RiskAssessmentAvgAggregateOutputType = {
    likelihood: number | null
    severity: number | null
    riskScore: number | null
  }

  export type RiskAssessmentSumAggregateOutputType = {
    likelihood: number | null
    severity: number | null
    riskScore: number | null
  }

  export type RiskAssessmentMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    riskCategoryId: string | null
    description: string | null
    affectedParties: string | null
    mitigationStrategy: string | null
    likelihood: number | null
    severity: number | null
    riskScore: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RiskAssessmentMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    riskCategoryId: string | null
    description: string | null
    affectedParties: string | null
    mitigationStrategy: string | null
    likelihood: number | null
    severity: number | null
    riskScore: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RiskAssessmentCountAggregateOutputType = {
    id: number
    clientId: number
    riskCategoryId: number
    description: number
    affectedParties: number
    mitigationStrategy: number
    likelihood: number
    severity: number
    riskScore: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RiskAssessmentAvgAggregateInputType = {
    likelihood?: true
    severity?: true
    riskScore?: true
  }

  export type RiskAssessmentSumAggregateInputType = {
    likelihood?: true
    severity?: true
    riskScore?: true
  }

  export type RiskAssessmentMinAggregateInputType = {
    id?: true
    clientId?: true
    riskCategoryId?: true
    description?: true
    affectedParties?: true
    mitigationStrategy?: true
    likelihood?: true
    severity?: true
    riskScore?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RiskAssessmentMaxAggregateInputType = {
    id?: true
    clientId?: true
    riskCategoryId?: true
    description?: true
    affectedParties?: true
    mitigationStrategy?: true
    likelihood?: true
    severity?: true
    riskScore?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RiskAssessmentCountAggregateInputType = {
    id?: true
    clientId?: true
    riskCategoryId?: true
    description?: true
    affectedParties?: true
    mitigationStrategy?: true
    likelihood?: true
    severity?: true
    riskScore?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RiskAssessmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RiskAssessment to aggregate.
     */
    where?: RiskAssessmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiskAssessments to fetch.
     */
    orderBy?: RiskAssessmentOrderByWithRelationInput | RiskAssessmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RiskAssessmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiskAssessments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiskAssessments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RiskAssessments
    **/
    _count?: true | RiskAssessmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RiskAssessmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RiskAssessmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RiskAssessmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RiskAssessmentMaxAggregateInputType
  }

  export type GetRiskAssessmentAggregateType<T extends RiskAssessmentAggregateArgs> = {
        [P in keyof T & keyof AggregateRiskAssessment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRiskAssessment[P]>
      : GetScalarType<T[P], AggregateRiskAssessment[P]>
  }




  export type RiskAssessmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RiskAssessmentWhereInput
    orderBy?: RiskAssessmentOrderByWithAggregationInput | RiskAssessmentOrderByWithAggregationInput[]
    by: RiskAssessmentScalarFieldEnum[] | RiskAssessmentScalarFieldEnum
    having?: RiskAssessmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RiskAssessmentCountAggregateInputType | true
    _avg?: RiskAssessmentAvgAggregateInputType
    _sum?: RiskAssessmentSumAggregateInputType
    _min?: RiskAssessmentMinAggregateInputType
    _max?: RiskAssessmentMaxAggregateInputType
  }

  export type RiskAssessmentGroupByOutputType = {
    id: string
    clientId: string
    riskCategoryId: string
    description: string
    affectedParties: string
    mitigationStrategy: string
    likelihood: number
    severity: number
    riskScore: number
    createdAt: Date
    updatedAt: Date
    _count: RiskAssessmentCountAggregateOutputType | null
    _avg: RiskAssessmentAvgAggregateOutputType | null
    _sum: RiskAssessmentSumAggregateOutputType | null
    _min: RiskAssessmentMinAggregateOutputType | null
    _max: RiskAssessmentMaxAggregateOutputType | null
  }

  type GetRiskAssessmentGroupByPayload<T extends RiskAssessmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RiskAssessmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RiskAssessmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RiskAssessmentGroupByOutputType[P]>
            : GetScalarType<T[P], RiskAssessmentGroupByOutputType[P]>
        }
      >
    >


  export type RiskAssessmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    riskCategoryId?: boolean
    description?: boolean
    affectedParties?: boolean
    mitigationStrategy?: boolean
    likelihood?: boolean
    severity?: boolean
    riskScore?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
    riskCategory?: boolean | RiskCategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["riskAssessment"]>

  export type RiskAssessmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    riskCategoryId?: boolean
    description?: boolean
    affectedParties?: boolean
    mitigationStrategy?: boolean
    likelihood?: boolean
    severity?: boolean
    riskScore?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
    riskCategory?: boolean | RiskCategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["riskAssessment"]>

  export type RiskAssessmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    riskCategoryId?: boolean
    description?: boolean
    affectedParties?: boolean
    mitigationStrategy?: boolean
    likelihood?: boolean
    severity?: boolean
    riskScore?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
    riskCategory?: boolean | RiskCategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["riskAssessment"]>

  export type RiskAssessmentSelectScalar = {
    id?: boolean
    clientId?: boolean
    riskCategoryId?: boolean
    description?: boolean
    affectedParties?: boolean
    mitigationStrategy?: boolean
    likelihood?: boolean
    severity?: boolean
    riskScore?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RiskAssessmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clientId" | "riskCategoryId" | "description" | "affectedParties" | "mitigationStrategy" | "likelihood" | "severity" | "riskScore" | "createdAt" | "updatedAt", ExtArgs["result"]["riskAssessment"]>
  export type RiskAssessmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
    riskCategory?: boolean | RiskCategoryDefaultArgs<ExtArgs>
  }
  export type RiskAssessmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
    riskCategory?: boolean | RiskCategoryDefaultArgs<ExtArgs>
  }
  export type RiskAssessmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
    riskCategory?: boolean | RiskCategoryDefaultArgs<ExtArgs>
  }

  export type $RiskAssessmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RiskAssessment"
    objects: {
      client: Prisma.$UserPayload<ExtArgs>
      riskCategory: Prisma.$RiskCategoryPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      riskCategoryId: string
      description: string
      affectedParties: string
      mitigationStrategy: string
      likelihood: number
      severity: number
      riskScore: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["riskAssessment"]>
    composites: {}
  }

  type RiskAssessmentGetPayload<S extends boolean | null | undefined | RiskAssessmentDefaultArgs> = $Result.GetResult<Prisma.$RiskAssessmentPayload, S>

  type RiskAssessmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RiskAssessmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RiskAssessmentCountAggregateInputType | true
    }

  export interface RiskAssessmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RiskAssessment'], meta: { name: 'RiskAssessment' } }
    /**
     * Find zero or one RiskAssessment that matches the filter.
     * @param {RiskAssessmentFindUniqueArgs} args - Arguments to find a RiskAssessment
     * @example
     * // Get one RiskAssessment
     * const riskAssessment = await prisma.riskAssessment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RiskAssessmentFindUniqueArgs>(args: SelectSubset<T, RiskAssessmentFindUniqueArgs<ExtArgs>>): Prisma__RiskAssessmentClient<$Result.GetResult<Prisma.$RiskAssessmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RiskAssessment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RiskAssessmentFindUniqueOrThrowArgs} args - Arguments to find a RiskAssessment
     * @example
     * // Get one RiskAssessment
     * const riskAssessment = await prisma.riskAssessment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RiskAssessmentFindUniqueOrThrowArgs>(args: SelectSubset<T, RiskAssessmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RiskAssessmentClient<$Result.GetResult<Prisma.$RiskAssessmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RiskAssessment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiskAssessmentFindFirstArgs} args - Arguments to find a RiskAssessment
     * @example
     * // Get one RiskAssessment
     * const riskAssessment = await prisma.riskAssessment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RiskAssessmentFindFirstArgs>(args?: SelectSubset<T, RiskAssessmentFindFirstArgs<ExtArgs>>): Prisma__RiskAssessmentClient<$Result.GetResult<Prisma.$RiskAssessmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RiskAssessment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiskAssessmentFindFirstOrThrowArgs} args - Arguments to find a RiskAssessment
     * @example
     * // Get one RiskAssessment
     * const riskAssessment = await prisma.riskAssessment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RiskAssessmentFindFirstOrThrowArgs>(args?: SelectSubset<T, RiskAssessmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__RiskAssessmentClient<$Result.GetResult<Prisma.$RiskAssessmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RiskAssessments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiskAssessmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RiskAssessments
     * const riskAssessments = await prisma.riskAssessment.findMany()
     * 
     * // Get first 10 RiskAssessments
     * const riskAssessments = await prisma.riskAssessment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const riskAssessmentWithIdOnly = await prisma.riskAssessment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RiskAssessmentFindManyArgs>(args?: SelectSubset<T, RiskAssessmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiskAssessmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RiskAssessment.
     * @param {RiskAssessmentCreateArgs} args - Arguments to create a RiskAssessment.
     * @example
     * // Create one RiskAssessment
     * const RiskAssessment = await prisma.riskAssessment.create({
     *   data: {
     *     // ... data to create a RiskAssessment
     *   }
     * })
     * 
     */
    create<T extends RiskAssessmentCreateArgs>(args: SelectSubset<T, RiskAssessmentCreateArgs<ExtArgs>>): Prisma__RiskAssessmentClient<$Result.GetResult<Prisma.$RiskAssessmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RiskAssessments.
     * @param {RiskAssessmentCreateManyArgs} args - Arguments to create many RiskAssessments.
     * @example
     * // Create many RiskAssessments
     * const riskAssessment = await prisma.riskAssessment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RiskAssessmentCreateManyArgs>(args?: SelectSubset<T, RiskAssessmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RiskAssessments and returns the data saved in the database.
     * @param {RiskAssessmentCreateManyAndReturnArgs} args - Arguments to create many RiskAssessments.
     * @example
     * // Create many RiskAssessments
     * const riskAssessment = await prisma.riskAssessment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RiskAssessments and only return the `id`
     * const riskAssessmentWithIdOnly = await prisma.riskAssessment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RiskAssessmentCreateManyAndReturnArgs>(args?: SelectSubset<T, RiskAssessmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiskAssessmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RiskAssessment.
     * @param {RiskAssessmentDeleteArgs} args - Arguments to delete one RiskAssessment.
     * @example
     * // Delete one RiskAssessment
     * const RiskAssessment = await prisma.riskAssessment.delete({
     *   where: {
     *     // ... filter to delete one RiskAssessment
     *   }
     * })
     * 
     */
    delete<T extends RiskAssessmentDeleteArgs>(args: SelectSubset<T, RiskAssessmentDeleteArgs<ExtArgs>>): Prisma__RiskAssessmentClient<$Result.GetResult<Prisma.$RiskAssessmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RiskAssessment.
     * @param {RiskAssessmentUpdateArgs} args - Arguments to update one RiskAssessment.
     * @example
     * // Update one RiskAssessment
     * const riskAssessment = await prisma.riskAssessment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RiskAssessmentUpdateArgs>(args: SelectSubset<T, RiskAssessmentUpdateArgs<ExtArgs>>): Prisma__RiskAssessmentClient<$Result.GetResult<Prisma.$RiskAssessmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RiskAssessments.
     * @param {RiskAssessmentDeleteManyArgs} args - Arguments to filter RiskAssessments to delete.
     * @example
     * // Delete a few RiskAssessments
     * const { count } = await prisma.riskAssessment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RiskAssessmentDeleteManyArgs>(args?: SelectSubset<T, RiskAssessmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RiskAssessments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiskAssessmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RiskAssessments
     * const riskAssessment = await prisma.riskAssessment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RiskAssessmentUpdateManyArgs>(args: SelectSubset<T, RiskAssessmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RiskAssessments and returns the data updated in the database.
     * @param {RiskAssessmentUpdateManyAndReturnArgs} args - Arguments to update many RiskAssessments.
     * @example
     * // Update many RiskAssessments
     * const riskAssessment = await prisma.riskAssessment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RiskAssessments and only return the `id`
     * const riskAssessmentWithIdOnly = await prisma.riskAssessment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RiskAssessmentUpdateManyAndReturnArgs>(args: SelectSubset<T, RiskAssessmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RiskAssessmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RiskAssessment.
     * @param {RiskAssessmentUpsertArgs} args - Arguments to update or create a RiskAssessment.
     * @example
     * // Update or create a RiskAssessment
     * const riskAssessment = await prisma.riskAssessment.upsert({
     *   create: {
     *     // ... data to create a RiskAssessment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RiskAssessment we want to update
     *   }
     * })
     */
    upsert<T extends RiskAssessmentUpsertArgs>(args: SelectSubset<T, RiskAssessmentUpsertArgs<ExtArgs>>): Prisma__RiskAssessmentClient<$Result.GetResult<Prisma.$RiskAssessmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RiskAssessments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiskAssessmentCountArgs} args - Arguments to filter RiskAssessments to count.
     * @example
     * // Count the number of RiskAssessments
     * const count = await prisma.riskAssessment.count({
     *   where: {
     *     // ... the filter for the RiskAssessments we want to count
     *   }
     * })
    **/
    count<T extends RiskAssessmentCountArgs>(
      args?: Subset<T, RiskAssessmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RiskAssessmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RiskAssessment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiskAssessmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RiskAssessmentAggregateArgs>(args: Subset<T, RiskAssessmentAggregateArgs>): Prisma.PrismaPromise<GetRiskAssessmentAggregateType<T>>

    /**
     * Group by RiskAssessment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiskAssessmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RiskAssessmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RiskAssessmentGroupByArgs['orderBy'] }
        : { orderBy?: RiskAssessmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RiskAssessmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRiskAssessmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RiskAssessment model
   */
  readonly fields: RiskAssessmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RiskAssessment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RiskAssessmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    riskCategory<T extends RiskCategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RiskCategoryDefaultArgs<ExtArgs>>): Prisma__RiskCategoryClient<$Result.GetResult<Prisma.$RiskCategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RiskAssessment model
   */ 
  interface RiskAssessmentFieldRefs {
    readonly id: FieldRef<"RiskAssessment", 'String'>
    readonly clientId: FieldRef<"RiskAssessment", 'String'>
    readonly riskCategoryId: FieldRef<"RiskAssessment", 'String'>
    readonly description: FieldRef<"RiskAssessment", 'String'>
    readonly affectedParties: FieldRef<"RiskAssessment", 'String'>
    readonly mitigationStrategy: FieldRef<"RiskAssessment", 'String'>
    readonly likelihood: FieldRef<"RiskAssessment", 'Int'>
    readonly severity: FieldRef<"RiskAssessment", 'Int'>
    readonly riskScore: FieldRef<"RiskAssessment", 'Int'>
    readonly createdAt: FieldRef<"RiskAssessment", 'DateTime'>
    readonly updatedAt: FieldRef<"RiskAssessment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RiskAssessment findUnique
   */
  export type RiskAssessmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskAssessment
     */
    select?: RiskAssessmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskAssessment
     */
    omit?: RiskAssessmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskAssessmentInclude<ExtArgs> | null
    /**
     * Filter, which RiskAssessment to fetch.
     */
    where: RiskAssessmentWhereUniqueInput
  }

  /**
   * RiskAssessment findUniqueOrThrow
   */
  export type RiskAssessmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskAssessment
     */
    select?: RiskAssessmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskAssessment
     */
    omit?: RiskAssessmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskAssessmentInclude<ExtArgs> | null
    /**
     * Filter, which RiskAssessment to fetch.
     */
    where: RiskAssessmentWhereUniqueInput
  }

  /**
   * RiskAssessment findFirst
   */
  export type RiskAssessmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskAssessment
     */
    select?: RiskAssessmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskAssessment
     */
    omit?: RiskAssessmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskAssessmentInclude<ExtArgs> | null
    /**
     * Filter, which RiskAssessment to fetch.
     */
    where?: RiskAssessmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiskAssessments to fetch.
     */
    orderBy?: RiskAssessmentOrderByWithRelationInput | RiskAssessmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RiskAssessments.
     */
    cursor?: RiskAssessmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiskAssessments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiskAssessments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RiskAssessments.
     */
    distinct?: RiskAssessmentScalarFieldEnum | RiskAssessmentScalarFieldEnum[]
  }

  /**
   * RiskAssessment findFirstOrThrow
   */
  export type RiskAssessmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskAssessment
     */
    select?: RiskAssessmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskAssessment
     */
    omit?: RiskAssessmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskAssessmentInclude<ExtArgs> | null
    /**
     * Filter, which RiskAssessment to fetch.
     */
    where?: RiskAssessmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiskAssessments to fetch.
     */
    orderBy?: RiskAssessmentOrderByWithRelationInput | RiskAssessmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RiskAssessments.
     */
    cursor?: RiskAssessmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiskAssessments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiskAssessments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RiskAssessments.
     */
    distinct?: RiskAssessmentScalarFieldEnum | RiskAssessmentScalarFieldEnum[]
  }

  /**
   * RiskAssessment findMany
   */
  export type RiskAssessmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskAssessment
     */
    select?: RiskAssessmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskAssessment
     */
    omit?: RiskAssessmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskAssessmentInclude<ExtArgs> | null
    /**
     * Filter, which RiskAssessments to fetch.
     */
    where?: RiskAssessmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RiskAssessments to fetch.
     */
    orderBy?: RiskAssessmentOrderByWithRelationInput | RiskAssessmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RiskAssessments.
     */
    cursor?: RiskAssessmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RiskAssessments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RiskAssessments.
     */
    skip?: number
    distinct?: RiskAssessmentScalarFieldEnum | RiskAssessmentScalarFieldEnum[]
  }

  /**
   * RiskAssessment create
   */
  export type RiskAssessmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskAssessment
     */
    select?: RiskAssessmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskAssessment
     */
    omit?: RiskAssessmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskAssessmentInclude<ExtArgs> | null
    /**
     * The data needed to create a RiskAssessment.
     */
    data: XOR<RiskAssessmentCreateInput, RiskAssessmentUncheckedCreateInput>
  }

  /**
   * RiskAssessment createMany
   */
  export type RiskAssessmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RiskAssessments.
     */
    data: RiskAssessmentCreateManyInput | RiskAssessmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RiskAssessment createManyAndReturn
   */
  export type RiskAssessmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskAssessment
     */
    select?: RiskAssessmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RiskAssessment
     */
    omit?: RiskAssessmentOmit<ExtArgs> | null
    /**
     * The data used to create many RiskAssessments.
     */
    data: RiskAssessmentCreateManyInput | RiskAssessmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskAssessmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RiskAssessment update
   */
  export type RiskAssessmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskAssessment
     */
    select?: RiskAssessmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskAssessment
     */
    omit?: RiskAssessmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskAssessmentInclude<ExtArgs> | null
    /**
     * The data needed to update a RiskAssessment.
     */
    data: XOR<RiskAssessmentUpdateInput, RiskAssessmentUncheckedUpdateInput>
    /**
     * Choose, which RiskAssessment to update.
     */
    where: RiskAssessmentWhereUniqueInput
  }

  /**
   * RiskAssessment updateMany
   */
  export type RiskAssessmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RiskAssessments.
     */
    data: XOR<RiskAssessmentUpdateManyMutationInput, RiskAssessmentUncheckedUpdateManyInput>
    /**
     * Filter which RiskAssessments to update
     */
    where?: RiskAssessmentWhereInput
    /**
     * Limit how many RiskAssessments to update.
     */
    limit?: number
  }

  /**
   * RiskAssessment updateManyAndReturn
   */
  export type RiskAssessmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskAssessment
     */
    select?: RiskAssessmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RiskAssessment
     */
    omit?: RiskAssessmentOmit<ExtArgs> | null
    /**
     * The data used to update RiskAssessments.
     */
    data: XOR<RiskAssessmentUpdateManyMutationInput, RiskAssessmentUncheckedUpdateManyInput>
    /**
     * Filter which RiskAssessments to update
     */
    where?: RiskAssessmentWhereInput
    /**
     * Limit how many RiskAssessments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskAssessmentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RiskAssessment upsert
   */
  export type RiskAssessmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskAssessment
     */
    select?: RiskAssessmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskAssessment
     */
    omit?: RiskAssessmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskAssessmentInclude<ExtArgs> | null
    /**
     * The filter to search for the RiskAssessment to update in case it exists.
     */
    where: RiskAssessmentWhereUniqueInput
    /**
     * In case the RiskAssessment found by the `where` argument doesn't exist, create a new RiskAssessment with this data.
     */
    create: XOR<RiskAssessmentCreateInput, RiskAssessmentUncheckedCreateInput>
    /**
     * In case the RiskAssessment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RiskAssessmentUpdateInput, RiskAssessmentUncheckedUpdateInput>
  }

  /**
   * RiskAssessment delete
   */
  export type RiskAssessmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskAssessment
     */
    select?: RiskAssessmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskAssessment
     */
    omit?: RiskAssessmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskAssessmentInclude<ExtArgs> | null
    /**
     * Filter which RiskAssessment to delete.
     */
    where: RiskAssessmentWhereUniqueInput
  }

  /**
   * RiskAssessment deleteMany
   */
  export type RiskAssessmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RiskAssessments to delete
     */
    where?: RiskAssessmentWhereInput
    /**
     * Limit how many RiskAssessments to delete.
     */
    limit?: number
  }

  /**
   * RiskAssessment without action
   */
  export type RiskAssessmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RiskAssessment
     */
    select?: RiskAssessmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RiskAssessment
     */
    omit?: RiskAssessmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RiskAssessmentInclude<ExtArgs> | null
  }


  /**
   * Model Reminder
   */

  export type AggregateReminder = {
    _count: ReminderCountAggregateOutputType | null
    _min: ReminderMinAggregateOutputType | null
    _max: ReminderMaxAggregateOutputType | null
  }

  export type ReminderMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    title: string | null
    message: string | null
    dueDate: Date | null
    completed: boolean | null
    createdAt: Date | null
  }

  export type ReminderMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    title: string | null
    message: string | null
    dueDate: Date | null
    completed: boolean | null
    createdAt: Date | null
  }

  export type ReminderCountAggregateOutputType = {
    id: number
    clientId: number
    title: number
    message: number
    dueDate: number
    completed: number
    createdAt: number
    _all: number
  }


  export type ReminderMinAggregateInputType = {
    id?: true
    clientId?: true
    title?: true
    message?: true
    dueDate?: true
    completed?: true
    createdAt?: true
  }

  export type ReminderMaxAggregateInputType = {
    id?: true
    clientId?: true
    title?: true
    message?: true
    dueDate?: true
    completed?: true
    createdAt?: true
  }

  export type ReminderCountAggregateInputType = {
    id?: true
    clientId?: true
    title?: true
    message?: true
    dueDate?: true
    completed?: true
    createdAt?: true
    _all?: true
  }

  export type ReminderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reminder to aggregate.
     */
    where?: ReminderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reminders to fetch.
     */
    orderBy?: ReminderOrderByWithRelationInput | ReminderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReminderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reminders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reminders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reminders
    **/
    _count?: true | ReminderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReminderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReminderMaxAggregateInputType
  }

  export type GetReminderAggregateType<T extends ReminderAggregateArgs> = {
        [P in keyof T & keyof AggregateReminder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReminder[P]>
      : GetScalarType<T[P], AggregateReminder[P]>
  }




  export type ReminderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReminderWhereInput
    orderBy?: ReminderOrderByWithAggregationInput | ReminderOrderByWithAggregationInput[]
    by: ReminderScalarFieldEnum[] | ReminderScalarFieldEnum
    having?: ReminderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReminderCountAggregateInputType | true
    _min?: ReminderMinAggregateInputType
    _max?: ReminderMaxAggregateInputType
  }

  export type ReminderGroupByOutputType = {
    id: string
    clientId: string
    title: string
    message: string | null
    dueDate: Date
    completed: boolean
    createdAt: Date
    _count: ReminderCountAggregateOutputType | null
    _min: ReminderMinAggregateOutputType | null
    _max: ReminderMaxAggregateOutputType | null
  }

  type GetReminderGroupByPayload<T extends ReminderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReminderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReminderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReminderGroupByOutputType[P]>
            : GetScalarType<T[P], ReminderGroupByOutputType[P]>
        }
      >
    >


  export type ReminderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    title?: boolean
    message?: boolean
    dueDate?: boolean
    completed?: boolean
    createdAt?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reminder"]>

  export type ReminderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    title?: boolean
    message?: boolean
    dueDate?: boolean
    completed?: boolean
    createdAt?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reminder"]>

  export type ReminderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    title?: boolean
    message?: boolean
    dueDate?: boolean
    completed?: boolean
    createdAt?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reminder"]>

  export type ReminderSelectScalar = {
    id?: boolean
    clientId?: boolean
    title?: boolean
    message?: boolean
    dueDate?: boolean
    completed?: boolean
    createdAt?: boolean
  }

  export type ReminderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clientId" | "title" | "message" | "dueDate" | "completed" | "createdAt", ExtArgs["result"]["reminder"]>
  export type ReminderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ReminderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ReminderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ReminderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Reminder"
    objects: {
      client: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      title: string
      message: string | null
      dueDate: Date
      completed: boolean
      createdAt: Date
    }, ExtArgs["result"]["reminder"]>
    composites: {}
  }

  type ReminderGetPayload<S extends boolean | null | undefined | ReminderDefaultArgs> = $Result.GetResult<Prisma.$ReminderPayload, S>

  type ReminderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReminderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReminderCountAggregateInputType | true
    }

  export interface ReminderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reminder'], meta: { name: 'Reminder' } }
    /**
     * Find zero or one Reminder that matches the filter.
     * @param {ReminderFindUniqueArgs} args - Arguments to find a Reminder
     * @example
     * // Get one Reminder
     * const reminder = await prisma.reminder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReminderFindUniqueArgs>(args: SelectSubset<T, ReminderFindUniqueArgs<ExtArgs>>): Prisma__ReminderClient<$Result.GetResult<Prisma.$ReminderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reminder that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReminderFindUniqueOrThrowArgs} args - Arguments to find a Reminder
     * @example
     * // Get one Reminder
     * const reminder = await prisma.reminder.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReminderFindUniqueOrThrowArgs>(args: SelectSubset<T, ReminderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReminderClient<$Result.GetResult<Prisma.$ReminderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reminder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReminderFindFirstArgs} args - Arguments to find a Reminder
     * @example
     * // Get one Reminder
     * const reminder = await prisma.reminder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReminderFindFirstArgs>(args?: SelectSubset<T, ReminderFindFirstArgs<ExtArgs>>): Prisma__ReminderClient<$Result.GetResult<Prisma.$ReminderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reminder that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReminderFindFirstOrThrowArgs} args - Arguments to find a Reminder
     * @example
     * // Get one Reminder
     * const reminder = await prisma.reminder.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReminderFindFirstOrThrowArgs>(args?: SelectSubset<T, ReminderFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReminderClient<$Result.GetResult<Prisma.$ReminderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reminders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReminderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reminders
     * const reminders = await prisma.reminder.findMany()
     * 
     * // Get first 10 Reminders
     * const reminders = await prisma.reminder.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reminderWithIdOnly = await prisma.reminder.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReminderFindManyArgs>(args?: SelectSubset<T, ReminderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReminderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reminder.
     * @param {ReminderCreateArgs} args - Arguments to create a Reminder.
     * @example
     * // Create one Reminder
     * const Reminder = await prisma.reminder.create({
     *   data: {
     *     // ... data to create a Reminder
     *   }
     * })
     * 
     */
    create<T extends ReminderCreateArgs>(args: SelectSubset<T, ReminderCreateArgs<ExtArgs>>): Prisma__ReminderClient<$Result.GetResult<Prisma.$ReminderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reminders.
     * @param {ReminderCreateManyArgs} args - Arguments to create many Reminders.
     * @example
     * // Create many Reminders
     * const reminder = await prisma.reminder.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReminderCreateManyArgs>(args?: SelectSubset<T, ReminderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reminders and returns the data saved in the database.
     * @param {ReminderCreateManyAndReturnArgs} args - Arguments to create many Reminders.
     * @example
     * // Create many Reminders
     * const reminder = await prisma.reminder.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reminders and only return the `id`
     * const reminderWithIdOnly = await prisma.reminder.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReminderCreateManyAndReturnArgs>(args?: SelectSubset<T, ReminderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReminderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Reminder.
     * @param {ReminderDeleteArgs} args - Arguments to delete one Reminder.
     * @example
     * // Delete one Reminder
     * const Reminder = await prisma.reminder.delete({
     *   where: {
     *     // ... filter to delete one Reminder
     *   }
     * })
     * 
     */
    delete<T extends ReminderDeleteArgs>(args: SelectSubset<T, ReminderDeleteArgs<ExtArgs>>): Prisma__ReminderClient<$Result.GetResult<Prisma.$ReminderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reminder.
     * @param {ReminderUpdateArgs} args - Arguments to update one Reminder.
     * @example
     * // Update one Reminder
     * const reminder = await prisma.reminder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReminderUpdateArgs>(args: SelectSubset<T, ReminderUpdateArgs<ExtArgs>>): Prisma__ReminderClient<$Result.GetResult<Prisma.$ReminderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reminders.
     * @param {ReminderDeleteManyArgs} args - Arguments to filter Reminders to delete.
     * @example
     * // Delete a few Reminders
     * const { count } = await prisma.reminder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReminderDeleteManyArgs>(args?: SelectSubset<T, ReminderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reminders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReminderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reminders
     * const reminder = await prisma.reminder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReminderUpdateManyArgs>(args: SelectSubset<T, ReminderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reminders and returns the data updated in the database.
     * @param {ReminderUpdateManyAndReturnArgs} args - Arguments to update many Reminders.
     * @example
     * // Update many Reminders
     * const reminder = await prisma.reminder.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reminders and only return the `id`
     * const reminderWithIdOnly = await prisma.reminder.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReminderUpdateManyAndReturnArgs>(args: SelectSubset<T, ReminderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReminderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Reminder.
     * @param {ReminderUpsertArgs} args - Arguments to update or create a Reminder.
     * @example
     * // Update or create a Reminder
     * const reminder = await prisma.reminder.upsert({
     *   create: {
     *     // ... data to create a Reminder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reminder we want to update
     *   }
     * })
     */
    upsert<T extends ReminderUpsertArgs>(args: SelectSubset<T, ReminderUpsertArgs<ExtArgs>>): Prisma__ReminderClient<$Result.GetResult<Prisma.$ReminderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reminders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReminderCountArgs} args - Arguments to filter Reminders to count.
     * @example
     * // Count the number of Reminders
     * const count = await prisma.reminder.count({
     *   where: {
     *     // ... the filter for the Reminders we want to count
     *   }
     * })
    **/
    count<T extends ReminderCountArgs>(
      args?: Subset<T, ReminderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReminderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reminder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReminderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReminderAggregateArgs>(args: Subset<T, ReminderAggregateArgs>): Prisma.PrismaPromise<GetReminderAggregateType<T>>

    /**
     * Group by Reminder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReminderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReminderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReminderGroupByArgs['orderBy'] }
        : { orderBy?: ReminderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReminderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReminderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Reminder model
   */
  readonly fields: ReminderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Reminder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReminderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Reminder model
   */ 
  interface ReminderFieldRefs {
    readonly id: FieldRef<"Reminder", 'String'>
    readonly clientId: FieldRef<"Reminder", 'String'>
    readonly title: FieldRef<"Reminder", 'String'>
    readonly message: FieldRef<"Reminder", 'String'>
    readonly dueDate: FieldRef<"Reminder", 'DateTime'>
    readonly completed: FieldRef<"Reminder", 'Boolean'>
    readonly createdAt: FieldRef<"Reminder", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Reminder findUnique
   */
  export type ReminderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reminder
     */
    select?: ReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reminder
     */
    omit?: ReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReminderInclude<ExtArgs> | null
    /**
     * Filter, which Reminder to fetch.
     */
    where: ReminderWhereUniqueInput
  }

  /**
   * Reminder findUniqueOrThrow
   */
  export type ReminderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reminder
     */
    select?: ReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reminder
     */
    omit?: ReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReminderInclude<ExtArgs> | null
    /**
     * Filter, which Reminder to fetch.
     */
    where: ReminderWhereUniqueInput
  }

  /**
   * Reminder findFirst
   */
  export type ReminderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reminder
     */
    select?: ReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reminder
     */
    omit?: ReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReminderInclude<ExtArgs> | null
    /**
     * Filter, which Reminder to fetch.
     */
    where?: ReminderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reminders to fetch.
     */
    orderBy?: ReminderOrderByWithRelationInput | ReminderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reminders.
     */
    cursor?: ReminderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reminders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reminders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reminders.
     */
    distinct?: ReminderScalarFieldEnum | ReminderScalarFieldEnum[]
  }

  /**
   * Reminder findFirstOrThrow
   */
  export type ReminderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reminder
     */
    select?: ReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reminder
     */
    omit?: ReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReminderInclude<ExtArgs> | null
    /**
     * Filter, which Reminder to fetch.
     */
    where?: ReminderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reminders to fetch.
     */
    orderBy?: ReminderOrderByWithRelationInput | ReminderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reminders.
     */
    cursor?: ReminderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reminders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reminders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reminders.
     */
    distinct?: ReminderScalarFieldEnum | ReminderScalarFieldEnum[]
  }

  /**
   * Reminder findMany
   */
  export type ReminderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reminder
     */
    select?: ReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reminder
     */
    omit?: ReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReminderInclude<ExtArgs> | null
    /**
     * Filter, which Reminders to fetch.
     */
    where?: ReminderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reminders to fetch.
     */
    orderBy?: ReminderOrderByWithRelationInput | ReminderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reminders.
     */
    cursor?: ReminderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reminders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reminders.
     */
    skip?: number
    distinct?: ReminderScalarFieldEnum | ReminderScalarFieldEnum[]
  }

  /**
   * Reminder create
   */
  export type ReminderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reminder
     */
    select?: ReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reminder
     */
    omit?: ReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReminderInclude<ExtArgs> | null
    /**
     * The data needed to create a Reminder.
     */
    data: XOR<ReminderCreateInput, ReminderUncheckedCreateInput>
  }

  /**
   * Reminder createMany
   */
  export type ReminderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reminders.
     */
    data: ReminderCreateManyInput | ReminderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Reminder createManyAndReturn
   */
  export type ReminderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reminder
     */
    select?: ReminderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reminder
     */
    omit?: ReminderOmit<ExtArgs> | null
    /**
     * The data used to create many Reminders.
     */
    data: ReminderCreateManyInput | ReminderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReminderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reminder update
   */
  export type ReminderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reminder
     */
    select?: ReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reminder
     */
    omit?: ReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReminderInclude<ExtArgs> | null
    /**
     * The data needed to update a Reminder.
     */
    data: XOR<ReminderUpdateInput, ReminderUncheckedUpdateInput>
    /**
     * Choose, which Reminder to update.
     */
    where: ReminderWhereUniqueInput
  }

  /**
   * Reminder updateMany
   */
  export type ReminderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reminders.
     */
    data: XOR<ReminderUpdateManyMutationInput, ReminderUncheckedUpdateManyInput>
    /**
     * Filter which Reminders to update
     */
    where?: ReminderWhereInput
    /**
     * Limit how many Reminders to update.
     */
    limit?: number
  }

  /**
   * Reminder updateManyAndReturn
   */
  export type ReminderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reminder
     */
    select?: ReminderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reminder
     */
    omit?: ReminderOmit<ExtArgs> | null
    /**
     * The data used to update Reminders.
     */
    data: XOR<ReminderUpdateManyMutationInput, ReminderUncheckedUpdateManyInput>
    /**
     * Filter which Reminders to update
     */
    where?: ReminderWhereInput
    /**
     * Limit how many Reminders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReminderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reminder upsert
   */
  export type ReminderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reminder
     */
    select?: ReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reminder
     */
    omit?: ReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReminderInclude<ExtArgs> | null
    /**
     * The filter to search for the Reminder to update in case it exists.
     */
    where: ReminderWhereUniqueInput
    /**
     * In case the Reminder found by the `where` argument doesn't exist, create a new Reminder with this data.
     */
    create: XOR<ReminderCreateInput, ReminderUncheckedCreateInput>
    /**
     * In case the Reminder was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReminderUpdateInput, ReminderUncheckedUpdateInput>
  }

  /**
   * Reminder delete
   */
  export type ReminderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reminder
     */
    select?: ReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reminder
     */
    omit?: ReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReminderInclude<ExtArgs> | null
    /**
     * Filter which Reminder to delete.
     */
    where: ReminderWhereUniqueInput
  }

  /**
   * Reminder deleteMany
   */
  export type ReminderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reminders to delete
     */
    where?: ReminderWhereInput
    /**
     * Limit how many Reminders to delete.
     */
    limit?: number
  }

  /**
   * Reminder without action
   */
  export type ReminderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reminder
     */
    select?: ReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reminder
     */
    omit?: ReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReminderInclude<ExtArgs> | null
  }


  /**
   * Model Notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    title: string | null
    message: string | null
    type: $Enums.NotificationType | null
    read: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    title: string | null
    message: string | null
    type: $Enums.NotificationType | null
    read: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    userId: number
    title: number
    message: number
    type: number
    read: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type NotificationMinAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    message?: true
    type?: true
    read?: true
    createdAt?: true
    updatedAt?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    message?: true
    type?: true
    read?: true
    createdAt?: true
    updatedAt?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    message?: true
    type?: true
    read?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notification to aggregate.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithAggregationInput | NotificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: NotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: string
    userId: string
    title: string
    message: string
    type: $Enums.NotificationType
    read: boolean
    createdAt: Date
    updatedAt: Date
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type NotificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    read?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    read?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    read?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectScalar = {
    id?: boolean
    userId?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    read?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type NotificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "title" | "message" | "type" | "read" | "createdAt" | "updatedAt", ExtArgs["result"]["notification"]>
  export type NotificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type NotificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type NotificationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $NotificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notification"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      title: string
      message: string
      type: $Enums.NotificationType
      read: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type NotificationGetPayload<S extends boolean | null | undefined | NotificationDefaultArgs> = $Result.GetResult<Prisma.$NotificationPayload, S>

  type NotificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NotificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface NotificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notification'], meta: { name: 'Notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {NotificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificationFindUniqueArgs>(args: SelectSubset<T, NotificationFindUniqueArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NotificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificationFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificationFindFirstArgs>(args?: SelectSubset<T, NotificationFindFirstArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificationFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificationFindManyArgs>(args?: SelectSubset<T, NotificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notification.
     * @param {NotificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends NotificationCreateArgs>(args: SelectSubset<T, NotificationCreateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {NotificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificationCreateManyArgs>(args?: SelectSubset<T, NotificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {NotificationCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificationCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notification.
     * @param {NotificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends NotificationDeleteArgs>(args: SelectSubset<T, NotificationDeleteArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notification.
     * @param {NotificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificationUpdateArgs>(args: SelectSubset<T, NotificationUpdateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {NotificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificationDeleteManyArgs>(args?: SelectSubset<T, NotificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificationUpdateManyArgs>(args: SelectSubset<T, NotificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications and returns the data updated in the database.
     * @param {NotificationUpdateManyAndReturnArgs} args - Arguments to update many Notifications.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends NotificationUpdateManyAndReturnArgs>(args: SelectSubset<T, NotificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notification.
     * @param {NotificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends NotificationUpsertArgs>(args: SelectSubset<T, NotificationUpsertArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends NotificationCountArgs>(
      args?: Subset<T, NotificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notification model
   */
  readonly fields: NotificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notification model
   */ 
  interface NotificationFieldRefs {
    readonly id: FieldRef<"Notification", 'String'>
    readonly userId: FieldRef<"Notification", 'String'>
    readonly title: FieldRef<"Notification", 'String'>
    readonly message: FieldRef<"Notification", 'String'>
    readonly type: FieldRef<"Notification", 'NotificationType'>
    readonly read: FieldRef<"Notification", 'Boolean'>
    readonly createdAt: FieldRef<"Notification", 'DateTime'>
    readonly updatedAt: FieldRef<"Notification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Notification findUnique
   */
  export type NotificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findUniqueOrThrow
   */
  export type NotificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findFirst
   */
  export type NotificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findFirstOrThrow
   */
  export type NotificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findMany
   */
  export type NotificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notifications to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification create
   */
  export type NotificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Notification.
     */
    data: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
  }

  /**
   * Notification createMany
   */
  export type NotificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notification createManyAndReturn
   */
  export type NotificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification update
   */
  export type NotificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Notification.
     */
    data: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    /**
     * Choose, which Notification to update.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification updateMany
   */
  export type NotificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
  }

  /**
   * Notification updateManyAndReturn
   */
  export type NotificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification upsert
   */
  export type NotificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Notification to update in case it exists.
     */
    where: NotificationWhereUniqueInput
    /**
     * In case the Notification found by the `where` argument doesn't exist, create a new Notification with this data.
     */
    create: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    /**
     * In case the Notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
  }

  /**
   * Notification delete
   */
  export type NotificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter which Notification to delete.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification deleteMany
   */
  export type NotificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notifications to delete
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to delete.
     */
    limit?: number
  }

  /**
   * Notification without action
   */
  export type NotificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const InvitationScalarFieldEnum: {
    id: 'id',
    email: 'email',
    token: 'token',
    role: 'role',
    subRole: 'subRole',
    expiresAt: 'expiresAt',
    status: 'status',
    createdAt: 'createdAt',
    inviterId: 'inviterId'
  };

  export type InvitationScalarFieldEnum = (typeof InvitationScalarFieldEnum)[keyof typeof InvitationScalarFieldEnum]


  export const AgencyScalarFieldEnum: {
    id: 'id',
    name: 'name',
    isActive: 'isActive',
    isSuspended: 'isSuspended',
    hasScheduleV2: 'hasScheduleV2',
    hasEMAR: 'hasEMAR',
    hasFinance: 'hasFinance',
    isWeek1And2ScheduleEnabled: 'isWeek1And2ScheduleEnabled',
    hasPoliciesAndProcedures: 'hasPoliciesAndProcedures',
    isTestAccount: 'isTestAccount',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AgencyScalarFieldEnum = (typeof AgencyScalarFieldEnum)[keyof typeof AgencyScalarFieldEnum]


  export const ClientCareAssignmentScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    userId: 'userId',
    isDecisionMaker: 'isDecisionMaker',
    assignedAt: 'assignedAt'
  };

  export type ClientCareAssignmentScalarFieldEnum = (typeof ClientCareAssignmentScalarFieldEnum)[keyof typeof ClientCareAssignmentScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    cognitoId: 'cognitoId',
    email: 'email',
    firstName: 'firstName',
    lastName: 'lastName',
    role: 'role',
    subRole: 'subRole',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    agencyId: 'agencyId',
    invitedById: 'invitedById',
    title: 'title',
    addressLine1: 'addressLine1',
    addressLine2: 'addressLine2',
    townOrCity: 'townOrCity',
    county: 'county',
    postalCode: 'postalCode',
    propertyAccess: 'propertyAccess',
    phoneNumber: 'phoneNumber',
    nhsNumber: 'nhsNumber',
    dnraOrder: 'dnraOrder',
    chargeRate: 'chargeRate',
    mobility: 'mobility',
    likesDislikes: 'likesDislikes',
    dateOfBirth: 'dateOfBirth',
    languages: 'languages',
    allergies: 'allergies',
    interests: 'interests',
    history: 'history',
    preferredName: 'preferredName'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const CommunicationPreferenceScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    email: 'email',
    sms: 'sms',
    phone: 'phone',
    notes: 'notes'
  };

  export type CommunicationPreferenceScalarFieldEnum = (typeof CommunicationPreferenceScalarFieldEnum)[keyof typeof CommunicationPreferenceScalarFieldEnum]


  export const FamilyAccessScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    name: 'name',
    relation: 'relation',
    phone: 'phone',
    email: 'email'
  };

  export type FamilyAccessScalarFieldEnum = (typeof FamilyAccessScalarFieldEnum)[keyof typeof FamilyAccessScalarFieldEnum]


  export const MedicationDatabaseLinkScalarFieldEnum: {
    id: 'id',
    name: 'name',
    isSpecialist: 'isSpecialist',
    url: 'url',
    source: 'source',
    agencyId: 'agencyId'
  };

  export type MedicationDatabaseLinkScalarFieldEnum = (typeof MedicationDatabaseLinkScalarFieldEnum)[keyof typeof MedicationDatabaseLinkScalarFieldEnum]


  export const VisitTypeScalarFieldEnum: {
    id: 'id',
    agencyId: 'agencyId',
    name: 'name',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type VisitTypeScalarFieldEnum = (typeof VisitTypeScalarFieldEnum)[keyof typeof VisitTypeScalarFieldEnum]


  export const ScheduleScalarFieldEnum: {
    id: 'id',
    agencyId: 'agencyId',
    clientId: 'clientId',
    userId: 'userId',
    date: 'date',
    startTime: 'startTime',
    endTime: 'endTime',
    status: 'status',
    type: 'type',
    notes: 'notes',
    chargeRate: 'chargeRate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    visitTypeId: 'visitTypeId'
  };

  export type ScheduleScalarFieldEnum = (typeof ScheduleScalarFieldEnum)[keyof typeof ScheduleScalarFieldEnum]


  export const ReportScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    agencyId: 'agencyId',
    userId: 'userId',
    condition: 'condition',
    summary: 'summary',
    checkInTime: 'checkInTime',
    checkOutTime: 'checkOutTime',
    createdAt: 'createdAt',
    checkInDistance: 'checkInDistance',
    checkOutDistance: 'checkOutDistance',
    checkInLocation: 'checkInLocation',
    checkOutLocation: 'checkOutLocation',
    hasSignature: 'hasSignature',
    signatureImageUrl: 'signatureImageUrl',
    status: 'status',
    lastEditedAt: 'lastEditedAt',
    lastEditedBy: 'lastEditedBy',
    lastEditReason: 'lastEditReason'
  };

  export type ReportScalarFieldEnum = (typeof ReportScalarFieldEnum)[keyof typeof ReportScalarFieldEnum]


  export const ReportTaskScalarFieldEnum: {
    id: 'id',
    reportId: 'reportId',
    taskName: 'taskName',
    completed: 'completed',
    notes: 'notes',
    taskIcon: 'taskIcon',
    taskType: 'taskType',
    completedAt: 'completedAt'
  };

  export type ReportTaskScalarFieldEnum = (typeof ReportTaskScalarFieldEnum)[keyof typeof ReportTaskScalarFieldEnum]


  export const ReportAlertScalarFieldEnum: {
    id: 'id',
    reportId: 'reportId',
    type: 'type',
    message: 'message',
    severity: 'severity',
    createdAt: 'createdAt',
    resolved: 'resolved',
    resolvedAt: 'resolvedAt',
    resolvedBy: 'resolvedBy'
  };

  export type ReportAlertScalarFieldEnum = (typeof ReportAlertScalarFieldEnum)[keyof typeof ReportAlertScalarFieldEnum]


  export const BodyMapObservationScalarFieldEnum: {
    id: 'id',
    reportId: 'reportId',
    bodyPart: 'bodyPart',
    condition: 'condition',
    notes: 'notes',
    createdAt: 'createdAt'
  };

  export type BodyMapObservationScalarFieldEnum = (typeof BodyMapObservationScalarFieldEnum)[keyof typeof BodyMapObservationScalarFieldEnum]


  export const ReportEditScalarFieldEnum: {
    id: 'id',
    reportId: 'reportId',
    editedBy: 'editedBy',
    editedAt: 'editedAt',
    reason: 'reason',
    changesJson: 'changesJson'
  };

  export type ReportEditScalarFieldEnum = (typeof ReportEditScalarFieldEnum)[keyof typeof ReportEditScalarFieldEnum]


  export const MedicationRecordScalarFieldEnum: {
    id: 'id',
    medicationId: 'medicationId',
    clientId: 'clientId',
    userId: 'userId',
    dosage: 'dosage',
    frequency: 'frequency',
    startDate: 'startDate',
    endDate: 'endDate',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    morningDose: 'morningDose',
    lunchDose: 'lunchDose',
    eveningDose: 'eveningDose',
    bedtimeDose: 'bedtimeDose',
    asNeededDose: 'asNeededDose'
  };

  export type MedicationRecordScalarFieldEnum = (typeof MedicationRecordScalarFieldEnum)[keyof typeof MedicationRecordScalarFieldEnum]


  export const MedicationAdministrationScalarFieldEnum: {
    id: 'id',
    medicationRecordId: 'medicationRecordId',
    administeredById: 'administeredById',
    administeredAt: 'administeredAt',
    doseType: 'doseType',
    doseTaken: 'doseTaken',
    notes: 'notes',
    createdAt: 'createdAt',
    reportId: 'reportId'
  };

  export type MedicationAdministrationScalarFieldEnum = (typeof MedicationAdministrationScalarFieldEnum)[keyof typeof MedicationAdministrationScalarFieldEnum]


  export const InvoiceScalarFieldEnum: {
    id: 'id',
    agencyId: 'agencyId',
    clientId: 'clientId',
    amount: 'amount',
    description: 'description',
    issuedAt: 'issuedAt',
    dueDate: 'dueDate',
    status: 'status'
  };

  export type InvoiceScalarFieldEnum = (typeof InvoiceScalarFieldEnum)[keyof typeof InvoiceScalarFieldEnum]


  export const MileageRecordScalarFieldEnum: {
    id: 'id',
    agencyId: 'agencyId',
    clientId: 'clientId',
    userId: 'userId',
    date: 'date',
    startMileage: 'startMileage',
    endMileage: 'endMileage',
    totalMiles: 'totalMiles',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type MileageRecordScalarFieldEnum = (typeof MileageRecordScalarFieldEnum)[keyof typeof MileageRecordScalarFieldEnum]


  export const DocumentScalarFieldEnum: {
    id: 'id',
    title: 'title',
    fileUrl: 'fileUrl',
    uploadedAt: 'uploadedAt',
    userId: 'userId',
    clientId: 'clientId',
    agencyId: 'agencyId'
  };

  export type DocumentScalarFieldEnum = (typeof DocumentScalarFieldEnum)[keyof typeof DocumentScalarFieldEnum]


  export const ProfileScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    phone: 'phone',
    avatarUrl: 'avatarUrl',
    address: 'address'
  };

  export type ProfileScalarFieldEnum = (typeof ProfileScalarFieldEnum)[keyof typeof ProfileScalarFieldEnum]


  export const IncidentReportScalarFieldEnum: {
    id: 'id',
    reporterId: 'reporterId',
    agencyId: 'agencyId',
    description: 'description',
    severity: 'severity',
    reportedAt: 'reportedAt'
  };

  export type IncidentReportScalarFieldEnum = (typeof IncidentReportScalarFieldEnum)[keyof typeof IncidentReportScalarFieldEnum]


  export const MessageScalarFieldEnum: {
    id: 'id',
    senderId: 'senderId',
    receiverId: 'receiverId',
    content: 'content',
    sentAt: 'sentAt'
  };

  export type MessageScalarFieldEnum = (typeof MessageScalarFieldEnum)[keyof typeof MessageScalarFieldEnum]


  export const KeyContactScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    name: 'name',
    relation: 'relation',
    phone: 'phone',
    email: 'email'
  };

  export type KeyContactScalarFieldEnum = (typeof KeyContactScalarFieldEnum)[keyof typeof KeyContactScalarFieldEnum]


  export const CareOutcomeScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    outcome: 'outcome'
  };

  export type CareOutcomeScalarFieldEnum = (typeof CareOutcomeScalarFieldEnum)[keyof typeof CareOutcomeScalarFieldEnum]


  export const CommunicationLogScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    message: 'message',
    createdAt: 'createdAt'
  };

  export type CommunicationLogScalarFieldEnum = (typeof CommunicationLogScalarFieldEnum)[keyof typeof CommunicationLogScalarFieldEnum]


  export const RiskCategoryScalarFieldEnum: {
    id: 'id',
    agencyId: 'agencyId',
    name: 'name',
    description: 'description',
    createdAt: 'createdAt'
  };

  export type RiskCategoryScalarFieldEnum = (typeof RiskCategoryScalarFieldEnum)[keyof typeof RiskCategoryScalarFieldEnum]


  export const RiskAssessmentScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    riskCategoryId: 'riskCategoryId',
    description: 'description',
    affectedParties: 'affectedParties',
    mitigationStrategy: 'mitigationStrategy',
    likelihood: 'likelihood',
    severity: 'severity',
    riskScore: 'riskScore',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RiskAssessmentScalarFieldEnum = (typeof RiskAssessmentScalarFieldEnum)[keyof typeof RiskAssessmentScalarFieldEnum]


  export const ReminderScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    title: 'title',
    message: 'message',
    dueDate: 'dueDate',
    completed: 'completed',
    createdAt: 'createdAt'
  };

  export type ReminderScalarFieldEnum = (typeof ReminderScalarFieldEnum)[keyof typeof ReminderScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    title: 'title',
    message: 'message',
    type: 'type',
    read: 'read',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Role'
   */
  export type EnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role'>
    


  /**
   * Reference to a field of type 'Role[]'
   */
  export type ListEnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role[]'>
    


  /**
   * Reference to a field of type 'SubRole'
   */
  export type EnumSubRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubRole'>
    


  /**
   * Reference to a field of type 'SubRole[]'
   */
  export type ListEnumSubRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubRole[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'InvitationStatus'
   */
  export type EnumInvitationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InvitationStatus'>
    


  /**
   * Reference to a field of type 'InvitationStatus[]'
   */
  export type ListEnumInvitationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InvitationStatus[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'ScheduleType'
   */
  export type EnumScheduleTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ScheduleType'>
    


  /**
   * Reference to a field of type 'ScheduleType[]'
   */
  export type ListEnumScheduleTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ScheduleType[]'>
    


  /**
   * Reference to a field of type 'ReportStatus'
   */
  export type EnumReportStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReportStatus'>
    


  /**
   * Reference to a field of type 'ReportStatus[]'
   */
  export type ListEnumReportStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReportStatus[]'>
    


  /**
   * Reference to a field of type 'AlertType'
   */
  export type EnumAlertTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AlertType'>
    


  /**
   * Reference to a field of type 'AlertType[]'
   */
  export type ListEnumAlertTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AlertType[]'>
    


  /**
   * Reference to a field of type 'AlertSeverity'
   */
  export type EnumAlertSeverityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AlertSeverity'>
    


  /**
   * Reference to a field of type 'AlertSeverity[]'
   */
  export type ListEnumAlertSeverityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AlertSeverity[]'>
    


  /**
   * Reference to a field of type 'DoseType'
   */
  export type EnumDoseTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DoseType'>
    


  /**
   * Reference to a field of type 'DoseType[]'
   */
  export type ListEnumDoseTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DoseType[]'>
    


  /**
   * Reference to a field of type 'InvoiceStatus'
   */
  export type EnumInvoiceStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InvoiceStatus'>
    


  /**
   * Reference to a field of type 'InvoiceStatus[]'
   */
  export type ListEnumInvoiceStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InvoiceStatus[]'>
    


  /**
   * Reference to a field of type 'SeverityLevel'
   */
  export type EnumSeverityLevelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SeverityLevel'>
    


  /**
   * Reference to a field of type 'SeverityLevel[]'
   */
  export type ListEnumSeverityLevelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SeverityLevel[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'NotificationType'
   */
  export type EnumNotificationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NotificationType'>
    


  /**
   * Reference to a field of type 'NotificationType[]'
   */
  export type ListEnumNotificationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NotificationType[]'>
    
  /**
   * Deep Input Types
   */


  export type InvitationWhereInput = {
    AND?: InvitationWhereInput | InvitationWhereInput[]
    OR?: InvitationWhereInput[]
    NOT?: InvitationWhereInput | InvitationWhereInput[]
    id?: StringFilter<"Invitation"> | string
    email?: StringFilter<"Invitation"> | string
    token?: StringFilter<"Invitation"> | string
    role?: EnumRoleFilter<"Invitation"> | $Enums.Role
    subRole?: EnumSubRoleNullableFilter<"Invitation"> | $Enums.SubRole | null
    expiresAt?: DateTimeFilter<"Invitation"> | Date | string
    status?: EnumInvitationStatusFilter<"Invitation"> | $Enums.InvitationStatus
    createdAt?: DateTimeFilter<"Invitation"> | Date | string
    inviterId?: StringFilter<"Invitation"> | string
    inviter?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type InvitationOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    token?: SortOrder
    role?: SortOrder
    subRole?: SortOrderInput | SortOrder
    expiresAt?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    inviterId?: SortOrder
    inviter?: UserOrderByWithRelationInput
  }

  export type InvitationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    token?: string
    AND?: InvitationWhereInput | InvitationWhereInput[]
    OR?: InvitationWhereInput[]
    NOT?: InvitationWhereInput | InvitationWhereInput[]
    role?: EnumRoleFilter<"Invitation"> | $Enums.Role
    subRole?: EnumSubRoleNullableFilter<"Invitation"> | $Enums.SubRole | null
    expiresAt?: DateTimeFilter<"Invitation"> | Date | string
    status?: EnumInvitationStatusFilter<"Invitation"> | $Enums.InvitationStatus
    createdAt?: DateTimeFilter<"Invitation"> | Date | string
    inviterId?: StringFilter<"Invitation"> | string
    inviter?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "email" | "token">

  export type InvitationOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    token?: SortOrder
    role?: SortOrder
    subRole?: SortOrderInput | SortOrder
    expiresAt?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    inviterId?: SortOrder
    _count?: InvitationCountOrderByAggregateInput
    _max?: InvitationMaxOrderByAggregateInput
    _min?: InvitationMinOrderByAggregateInput
  }

  export type InvitationScalarWhereWithAggregatesInput = {
    AND?: InvitationScalarWhereWithAggregatesInput | InvitationScalarWhereWithAggregatesInput[]
    OR?: InvitationScalarWhereWithAggregatesInput[]
    NOT?: InvitationScalarWhereWithAggregatesInput | InvitationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Invitation"> | string
    email?: StringWithAggregatesFilter<"Invitation"> | string
    token?: StringWithAggregatesFilter<"Invitation"> | string
    role?: EnumRoleWithAggregatesFilter<"Invitation"> | $Enums.Role
    subRole?: EnumSubRoleNullableWithAggregatesFilter<"Invitation"> | $Enums.SubRole | null
    expiresAt?: DateTimeWithAggregatesFilter<"Invitation"> | Date | string
    status?: EnumInvitationStatusWithAggregatesFilter<"Invitation"> | $Enums.InvitationStatus
    createdAt?: DateTimeWithAggregatesFilter<"Invitation"> | Date | string
    inviterId?: StringWithAggregatesFilter<"Invitation"> | string
  }

  export type AgencyWhereInput = {
    AND?: AgencyWhereInput | AgencyWhereInput[]
    OR?: AgencyWhereInput[]
    NOT?: AgencyWhereInput | AgencyWhereInput[]
    id?: StringFilter<"Agency"> | string
    name?: StringFilter<"Agency"> | string
    isActive?: BoolFilter<"Agency"> | boolean
    isSuspended?: BoolFilter<"Agency"> | boolean
    hasScheduleV2?: BoolFilter<"Agency"> | boolean
    hasEMAR?: BoolFilter<"Agency"> | boolean
    hasFinance?: BoolFilter<"Agency"> | boolean
    isWeek1And2ScheduleEnabled?: BoolFilter<"Agency"> | boolean
    hasPoliciesAndProcedures?: BoolFilter<"Agency"> | boolean
    isTestAccount?: BoolFilter<"Agency"> | boolean
    createdAt?: DateTimeFilter<"Agency"> | Date | string
    updatedAt?: DateTimeFilter<"Agency"> | Date | string
    users?: UserListRelationFilter
    schedules?: ScheduleListRelationFilter
    invoices?: InvoiceListRelationFilter
    mileageRecords?: MileageRecordListRelationFilter
    documents?: DocumentListRelationFilter
    incidentReports?: IncidentReportListRelationFilter
    medications?: MedicationDatabaseLinkListRelationFilter
    visitTypes?: VisitTypeListRelationFilter
    riskCategories?: RiskCategoryListRelationFilter
    Report?: ReportListRelationFilter
  }

  export type AgencyOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    isActive?: SortOrder
    isSuspended?: SortOrder
    hasScheduleV2?: SortOrder
    hasEMAR?: SortOrder
    hasFinance?: SortOrder
    isWeek1And2ScheduleEnabled?: SortOrder
    hasPoliciesAndProcedures?: SortOrder
    isTestAccount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    users?: UserOrderByRelationAggregateInput
    schedules?: ScheduleOrderByRelationAggregateInput
    invoices?: InvoiceOrderByRelationAggregateInput
    mileageRecords?: MileageRecordOrderByRelationAggregateInput
    documents?: DocumentOrderByRelationAggregateInput
    incidentReports?: IncidentReportOrderByRelationAggregateInput
    medications?: MedicationDatabaseLinkOrderByRelationAggregateInput
    visitTypes?: VisitTypeOrderByRelationAggregateInput
    riskCategories?: RiskCategoryOrderByRelationAggregateInput
    Report?: ReportOrderByRelationAggregateInput
  }

  export type AgencyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AgencyWhereInput | AgencyWhereInput[]
    OR?: AgencyWhereInput[]
    NOT?: AgencyWhereInput | AgencyWhereInput[]
    name?: StringFilter<"Agency"> | string
    isActive?: BoolFilter<"Agency"> | boolean
    isSuspended?: BoolFilter<"Agency"> | boolean
    hasScheduleV2?: BoolFilter<"Agency"> | boolean
    hasEMAR?: BoolFilter<"Agency"> | boolean
    hasFinance?: BoolFilter<"Agency"> | boolean
    isWeek1And2ScheduleEnabled?: BoolFilter<"Agency"> | boolean
    hasPoliciesAndProcedures?: BoolFilter<"Agency"> | boolean
    isTestAccount?: BoolFilter<"Agency"> | boolean
    createdAt?: DateTimeFilter<"Agency"> | Date | string
    updatedAt?: DateTimeFilter<"Agency"> | Date | string
    users?: UserListRelationFilter
    schedules?: ScheduleListRelationFilter
    invoices?: InvoiceListRelationFilter
    mileageRecords?: MileageRecordListRelationFilter
    documents?: DocumentListRelationFilter
    incidentReports?: IncidentReportListRelationFilter
    medications?: MedicationDatabaseLinkListRelationFilter
    visitTypes?: VisitTypeListRelationFilter
    riskCategories?: RiskCategoryListRelationFilter
    Report?: ReportListRelationFilter
  }, "id">

  export type AgencyOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    isActive?: SortOrder
    isSuspended?: SortOrder
    hasScheduleV2?: SortOrder
    hasEMAR?: SortOrder
    hasFinance?: SortOrder
    isWeek1And2ScheduleEnabled?: SortOrder
    hasPoliciesAndProcedures?: SortOrder
    isTestAccount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AgencyCountOrderByAggregateInput
    _max?: AgencyMaxOrderByAggregateInput
    _min?: AgencyMinOrderByAggregateInput
  }

  export type AgencyScalarWhereWithAggregatesInput = {
    AND?: AgencyScalarWhereWithAggregatesInput | AgencyScalarWhereWithAggregatesInput[]
    OR?: AgencyScalarWhereWithAggregatesInput[]
    NOT?: AgencyScalarWhereWithAggregatesInput | AgencyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Agency"> | string
    name?: StringWithAggregatesFilter<"Agency"> | string
    isActive?: BoolWithAggregatesFilter<"Agency"> | boolean
    isSuspended?: BoolWithAggregatesFilter<"Agency"> | boolean
    hasScheduleV2?: BoolWithAggregatesFilter<"Agency"> | boolean
    hasEMAR?: BoolWithAggregatesFilter<"Agency"> | boolean
    hasFinance?: BoolWithAggregatesFilter<"Agency"> | boolean
    isWeek1And2ScheduleEnabled?: BoolWithAggregatesFilter<"Agency"> | boolean
    hasPoliciesAndProcedures?: BoolWithAggregatesFilter<"Agency"> | boolean
    isTestAccount?: BoolWithAggregatesFilter<"Agency"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Agency"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Agency"> | Date | string
  }

  export type ClientCareAssignmentWhereInput = {
    AND?: ClientCareAssignmentWhereInput | ClientCareAssignmentWhereInput[]
    OR?: ClientCareAssignmentWhereInput[]
    NOT?: ClientCareAssignmentWhereInput | ClientCareAssignmentWhereInput[]
    id?: StringFilter<"ClientCareAssignment"> | string
    clientId?: StringFilter<"ClientCareAssignment"> | string
    userId?: StringFilter<"ClientCareAssignment"> | string
    isDecisionMaker?: BoolFilter<"ClientCareAssignment"> | boolean
    assignedAt?: DateTimeFilter<"ClientCareAssignment"> | Date | string
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ClientCareAssignmentOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    isDecisionMaker?: SortOrder
    assignedAt?: SortOrder
    client?: UserOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type ClientCareAssignmentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    clientId_userId?: ClientCareAssignmentClientIdUserIdCompoundUniqueInput
    AND?: ClientCareAssignmentWhereInput | ClientCareAssignmentWhereInput[]
    OR?: ClientCareAssignmentWhereInput[]
    NOT?: ClientCareAssignmentWhereInput | ClientCareAssignmentWhereInput[]
    clientId?: StringFilter<"ClientCareAssignment"> | string
    userId?: StringFilter<"ClientCareAssignment"> | string
    isDecisionMaker?: BoolFilter<"ClientCareAssignment"> | boolean
    assignedAt?: DateTimeFilter<"ClientCareAssignment"> | Date | string
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "clientId_userId">

  export type ClientCareAssignmentOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    isDecisionMaker?: SortOrder
    assignedAt?: SortOrder
    _count?: ClientCareAssignmentCountOrderByAggregateInput
    _max?: ClientCareAssignmentMaxOrderByAggregateInput
    _min?: ClientCareAssignmentMinOrderByAggregateInput
  }

  export type ClientCareAssignmentScalarWhereWithAggregatesInput = {
    AND?: ClientCareAssignmentScalarWhereWithAggregatesInput | ClientCareAssignmentScalarWhereWithAggregatesInput[]
    OR?: ClientCareAssignmentScalarWhereWithAggregatesInput[]
    NOT?: ClientCareAssignmentScalarWhereWithAggregatesInput | ClientCareAssignmentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ClientCareAssignment"> | string
    clientId?: StringWithAggregatesFilter<"ClientCareAssignment"> | string
    userId?: StringWithAggregatesFilter<"ClientCareAssignment"> | string
    isDecisionMaker?: BoolWithAggregatesFilter<"ClientCareAssignment"> | boolean
    assignedAt?: DateTimeWithAggregatesFilter<"ClientCareAssignment"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    cognitoId?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    role?: EnumRoleFilter<"User"> | $Enums.Role
    subRole?: EnumSubRoleNullableFilter<"User"> | $Enums.SubRole | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    agencyId?: StringNullableFilter<"User"> | string | null
    invitedById?: StringNullableFilter<"User"> | string | null
    title?: StringNullableFilter<"User"> | string | null
    addressLine1?: StringNullableFilter<"User"> | string | null
    addressLine2?: StringNullableFilter<"User"> | string | null
    townOrCity?: StringNullableFilter<"User"> | string | null
    county?: StringNullableFilter<"User"> | string | null
    postalCode?: StringNullableFilter<"User"> | string | null
    propertyAccess?: StringNullableFilter<"User"> | string | null
    phoneNumber?: StringNullableFilter<"User"> | string | null
    nhsNumber?: StringNullableFilter<"User"> | string | null
    dnraOrder?: BoolNullableFilter<"User"> | boolean | null
    chargeRate?: FloatNullableFilter<"User"> | number | null
    mobility?: StringNullableFilter<"User"> | string | null
    likesDislikes?: StringNullableFilter<"User"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"User"> | Date | string | null
    languages?: StringNullableFilter<"User"> | string | null
    allergies?: StringNullableFilter<"User"> | string | null
    interests?: StringNullableFilter<"User"> | string | null
    history?: StringNullableFilter<"User"> | string | null
    preferredName?: StringNullableFilter<"User"> | string | null
    sentInvitations?: InvitationListRelationFilter
    agency?: XOR<AgencyNullableScalarRelationFilter, AgencyWhereInput> | null
    invitedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    invitedUsers?: UserListRelationFilter
    communicationPreference?: XOR<CommunicationPreferenceNullableScalarRelationFilter, CommunicationPreferenceWhereInput> | null
    careAssignments?: ClientCareAssignmentListRelationFilter
    clientAssignments?: ClientCareAssignmentListRelationFilter
    careWorkerSchedules?: ScheduleListRelationFilter
    clientSchedules?: ScheduleListRelationFilter
    careReports?: ReportListRelationFilter
    clientReports?: ReportListRelationFilter
    careWorkerMedications?: MedicationRecordListRelationFilter
    clientMedications?: MedicationRecordListRelationFilter
    careWorkerMileage?: MileageRecordListRelationFilter
    clientMileage?: MileageRecordListRelationFilter
    profile?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
    sentMessages?: MessageListRelationFilter
    receivedMessages?: MessageListRelationFilter
    medicationRecords?: MedicationRecordListRelationFilter
    mileageRecords?: MileageRecordListRelationFilter
    documents?: DocumentListRelationFilter
    incidentReports?: IncidentReportListRelationFilter
    keyContacts?: KeyContactListRelationFilter
    careOutcomes?: CareOutcomeListRelationFilter
    Invoice?: InvoiceListRelationFilter
    Document?: DocumentListRelationFilter
    Notification?: NotificationListRelationFilter
    riskAssessments?: RiskAssessmentListRelationFilter
    familyAccess?: FamilyAccessListRelationFilter
    communicationLogs?: CommunicationLogListRelationFilter
    reminders?: ReminderListRelationFilter
    medicationAdministrations?: MedicationAdministrationListRelationFilter
    reportEdits?: ReportEditListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    cognitoId?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    subRole?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrderInput | SortOrder
    invitedById?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    addressLine1?: SortOrderInput | SortOrder
    addressLine2?: SortOrderInput | SortOrder
    townOrCity?: SortOrderInput | SortOrder
    county?: SortOrderInput | SortOrder
    postalCode?: SortOrderInput | SortOrder
    propertyAccess?: SortOrderInput | SortOrder
    phoneNumber?: SortOrderInput | SortOrder
    nhsNumber?: SortOrderInput | SortOrder
    dnraOrder?: SortOrderInput | SortOrder
    chargeRate?: SortOrderInput | SortOrder
    mobility?: SortOrderInput | SortOrder
    likesDislikes?: SortOrderInput | SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    languages?: SortOrderInput | SortOrder
    allergies?: SortOrderInput | SortOrder
    interests?: SortOrderInput | SortOrder
    history?: SortOrderInput | SortOrder
    preferredName?: SortOrderInput | SortOrder
    sentInvitations?: InvitationOrderByRelationAggregateInput
    agency?: AgencyOrderByWithRelationInput
    invitedBy?: UserOrderByWithRelationInput
    invitedUsers?: UserOrderByRelationAggregateInput
    communicationPreference?: CommunicationPreferenceOrderByWithRelationInput
    careAssignments?: ClientCareAssignmentOrderByRelationAggregateInput
    clientAssignments?: ClientCareAssignmentOrderByRelationAggregateInput
    careWorkerSchedules?: ScheduleOrderByRelationAggregateInput
    clientSchedules?: ScheduleOrderByRelationAggregateInput
    careReports?: ReportOrderByRelationAggregateInput
    clientReports?: ReportOrderByRelationAggregateInput
    careWorkerMedications?: MedicationRecordOrderByRelationAggregateInput
    clientMedications?: MedicationRecordOrderByRelationAggregateInput
    careWorkerMileage?: MileageRecordOrderByRelationAggregateInput
    clientMileage?: MileageRecordOrderByRelationAggregateInput
    profile?: ProfileOrderByWithRelationInput
    sentMessages?: MessageOrderByRelationAggregateInput
    receivedMessages?: MessageOrderByRelationAggregateInput
    medicationRecords?: MedicationRecordOrderByRelationAggregateInput
    mileageRecords?: MileageRecordOrderByRelationAggregateInput
    documents?: DocumentOrderByRelationAggregateInput
    incidentReports?: IncidentReportOrderByRelationAggregateInput
    keyContacts?: KeyContactOrderByRelationAggregateInput
    careOutcomes?: CareOutcomeOrderByRelationAggregateInput
    Invoice?: InvoiceOrderByRelationAggregateInput
    Document?: DocumentOrderByRelationAggregateInput
    Notification?: NotificationOrderByRelationAggregateInput
    riskAssessments?: RiskAssessmentOrderByRelationAggregateInput
    familyAccess?: FamilyAccessOrderByRelationAggregateInput
    communicationLogs?: CommunicationLogOrderByRelationAggregateInput
    reminders?: ReminderOrderByRelationAggregateInput
    medicationAdministrations?: MedicationAdministrationOrderByRelationAggregateInput
    reportEdits?: ReportEditOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    cognitoId?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    role?: EnumRoleFilter<"User"> | $Enums.Role
    subRole?: EnumSubRoleNullableFilter<"User"> | $Enums.SubRole | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    agencyId?: StringNullableFilter<"User"> | string | null
    invitedById?: StringNullableFilter<"User"> | string | null
    title?: StringNullableFilter<"User"> | string | null
    addressLine1?: StringNullableFilter<"User"> | string | null
    addressLine2?: StringNullableFilter<"User"> | string | null
    townOrCity?: StringNullableFilter<"User"> | string | null
    county?: StringNullableFilter<"User"> | string | null
    postalCode?: StringNullableFilter<"User"> | string | null
    propertyAccess?: StringNullableFilter<"User"> | string | null
    phoneNumber?: StringNullableFilter<"User"> | string | null
    nhsNumber?: StringNullableFilter<"User"> | string | null
    dnraOrder?: BoolNullableFilter<"User"> | boolean | null
    chargeRate?: FloatNullableFilter<"User"> | number | null
    mobility?: StringNullableFilter<"User"> | string | null
    likesDislikes?: StringNullableFilter<"User"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"User"> | Date | string | null
    languages?: StringNullableFilter<"User"> | string | null
    allergies?: StringNullableFilter<"User"> | string | null
    interests?: StringNullableFilter<"User"> | string | null
    history?: StringNullableFilter<"User"> | string | null
    preferredName?: StringNullableFilter<"User"> | string | null
    sentInvitations?: InvitationListRelationFilter
    agency?: XOR<AgencyNullableScalarRelationFilter, AgencyWhereInput> | null
    invitedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    invitedUsers?: UserListRelationFilter
    communicationPreference?: XOR<CommunicationPreferenceNullableScalarRelationFilter, CommunicationPreferenceWhereInput> | null
    careAssignments?: ClientCareAssignmentListRelationFilter
    clientAssignments?: ClientCareAssignmentListRelationFilter
    careWorkerSchedules?: ScheduleListRelationFilter
    clientSchedules?: ScheduleListRelationFilter
    careReports?: ReportListRelationFilter
    clientReports?: ReportListRelationFilter
    careWorkerMedications?: MedicationRecordListRelationFilter
    clientMedications?: MedicationRecordListRelationFilter
    careWorkerMileage?: MileageRecordListRelationFilter
    clientMileage?: MileageRecordListRelationFilter
    profile?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
    sentMessages?: MessageListRelationFilter
    receivedMessages?: MessageListRelationFilter
    medicationRecords?: MedicationRecordListRelationFilter
    mileageRecords?: MileageRecordListRelationFilter
    documents?: DocumentListRelationFilter
    incidentReports?: IncidentReportListRelationFilter
    keyContacts?: KeyContactListRelationFilter
    careOutcomes?: CareOutcomeListRelationFilter
    Invoice?: InvoiceListRelationFilter
    Document?: DocumentListRelationFilter
    Notification?: NotificationListRelationFilter
    riskAssessments?: RiskAssessmentListRelationFilter
    familyAccess?: FamilyAccessListRelationFilter
    communicationLogs?: CommunicationLogListRelationFilter
    reminders?: ReminderListRelationFilter
    medicationAdministrations?: MedicationAdministrationListRelationFilter
    reportEdits?: ReportEditListRelationFilter
  }, "id" | "cognitoId" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    cognitoId?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    subRole?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrderInput | SortOrder
    invitedById?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    addressLine1?: SortOrderInput | SortOrder
    addressLine2?: SortOrderInput | SortOrder
    townOrCity?: SortOrderInput | SortOrder
    county?: SortOrderInput | SortOrder
    postalCode?: SortOrderInput | SortOrder
    propertyAccess?: SortOrderInput | SortOrder
    phoneNumber?: SortOrderInput | SortOrder
    nhsNumber?: SortOrderInput | SortOrder
    dnraOrder?: SortOrderInput | SortOrder
    chargeRate?: SortOrderInput | SortOrder
    mobility?: SortOrderInput | SortOrder
    likesDislikes?: SortOrderInput | SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    languages?: SortOrderInput | SortOrder
    allergies?: SortOrderInput | SortOrder
    interests?: SortOrderInput | SortOrder
    history?: SortOrderInput | SortOrder
    preferredName?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    cognitoId?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    firstName?: StringWithAggregatesFilter<"User"> | string
    lastName?: StringWithAggregatesFilter<"User"> | string
    role?: EnumRoleWithAggregatesFilter<"User"> | $Enums.Role
    subRole?: EnumSubRoleNullableWithAggregatesFilter<"User"> | $Enums.SubRole | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    agencyId?: StringNullableWithAggregatesFilter<"User"> | string | null
    invitedById?: StringNullableWithAggregatesFilter<"User"> | string | null
    title?: StringNullableWithAggregatesFilter<"User"> | string | null
    addressLine1?: StringNullableWithAggregatesFilter<"User"> | string | null
    addressLine2?: StringNullableWithAggregatesFilter<"User"> | string | null
    townOrCity?: StringNullableWithAggregatesFilter<"User"> | string | null
    county?: StringNullableWithAggregatesFilter<"User"> | string | null
    postalCode?: StringNullableWithAggregatesFilter<"User"> | string | null
    propertyAccess?: StringNullableWithAggregatesFilter<"User"> | string | null
    phoneNumber?: StringNullableWithAggregatesFilter<"User"> | string | null
    nhsNumber?: StringNullableWithAggregatesFilter<"User"> | string | null
    dnraOrder?: BoolNullableWithAggregatesFilter<"User"> | boolean | null
    chargeRate?: FloatNullableWithAggregatesFilter<"User"> | number | null
    mobility?: StringNullableWithAggregatesFilter<"User"> | string | null
    likesDislikes?: StringNullableWithAggregatesFilter<"User"> | string | null
    dateOfBirth?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    languages?: StringNullableWithAggregatesFilter<"User"> | string | null
    allergies?: StringNullableWithAggregatesFilter<"User"> | string | null
    interests?: StringNullableWithAggregatesFilter<"User"> | string | null
    history?: StringNullableWithAggregatesFilter<"User"> | string | null
    preferredName?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type CommunicationPreferenceWhereInput = {
    AND?: CommunicationPreferenceWhereInput | CommunicationPreferenceWhereInput[]
    OR?: CommunicationPreferenceWhereInput[]
    NOT?: CommunicationPreferenceWhereInput | CommunicationPreferenceWhereInput[]
    id?: StringFilter<"CommunicationPreference"> | string
    userId?: StringFilter<"CommunicationPreference"> | string
    email?: BoolFilter<"CommunicationPreference"> | boolean
    sms?: BoolFilter<"CommunicationPreference"> | boolean
    phone?: BoolFilter<"CommunicationPreference"> | boolean
    notes?: StringNullableFilter<"CommunicationPreference"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type CommunicationPreferenceOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    email?: SortOrder
    sms?: SortOrder
    phone?: SortOrder
    notes?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type CommunicationPreferenceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: CommunicationPreferenceWhereInput | CommunicationPreferenceWhereInput[]
    OR?: CommunicationPreferenceWhereInput[]
    NOT?: CommunicationPreferenceWhereInput | CommunicationPreferenceWhereInput[]
    email?: BoolFilter<"CommunicationPreference"> | boolean
    sms?: BoolFilter<"CommunicationPreference"> | boolean
    phone?: BoolFilter<"CommunicationPreference"> | boolean
    notes?: StringNullableFilter<"CommunicationPreference"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "userId">

  export type CommunicationPreferenceOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    email?: SortOrder
    sms?: SortOrder
    phone?: SortOrder
    notes?: SortOrderInput | SortOrder
    _count?: CommunicationPreferenceCountOrderByAggregateInput
    _max?: CommunicationPreferenceMaxOrderByAggregateInput
    _min?: CommunicationPreferenceMinOrderByAggregateInput
  }

  export type CommunicationPreferenceScalarWhereWithAggregatesInput = {
    AND?: CommunicationPreferenceScalarWhereWithAggregatesInput | CommunicationPreferenceScalarWhereWithAggregatesInput[]
    OR?: CommunicationPreferenceScalarWhereWithAggregatesInput[]
    NOT?: CommunicationPreferenceScalarWhereWithAggregatesInput | CommunicationPreferenceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CommunicationPreference"> | string
    userId?: StringWithAggregatesFilter<"CommunicationPreference"> | string
    email?: BoolWithAggregatesFilter<"CommunicationPreference"> | boolean
    sms?: BoolWithAggregatesFilter<"CommunicationPreference"> | boolean
    phone?: BoolWithAggregatesFilter<"CommunicationPreference"> | boolean
    notes?: StringNullableWithAggregatesFilter<"CommunicationPreference"> | string | null
  }

  export type FamilyAccessWhereInput = {
    AND?: FamilyAccessWhereInput | FamilyAccessWhereInput[]
    OR?: FamilyAccessWhereInput[]
    NOT?: FamilyAccessWhereInput | FamilyAccessWhereInput[]
    id?: StringFilter<"FamilyAccess"> | string
    clientId?: StringFilter<"FamilyAccess"> | string
    name?: StringFilter<"FamilyAccess"> | string
    relation?: StringFilter<"FamilyAccess"> | string
    phone?: StringFilter<"FamilyAccess"> | string
    email?: StringNullableFilter<"FamilyAccess"> | string | null
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type FamilyAccessOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    relation?: SortOrder
    phone?: SortOrder
    email?: SortOrderInput | SortOrder
    client?: UserOrderByWithRelationInput
  }

  export type FamilyAccessWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FamilyAccessWhereInput | FamilyAccessWhereInput[]
    OR?: FamilyAccessWhereInput[]
    NOT?: FamilyAccessWhereInput | FamilyAccessWhereInput[]
    clientId?: StringFilter<"FamilyAccess"> | string
    name?: StringFilter<"FamilyAccess"> | string
    relation?: StringFilter<"FamilyAccess"> | string
    phone?: StringFilter<"FamilyAccess"> | string
    email?: StringNullableFilter<"FamilyAccess"> | string | null
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type FamilyAccessOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    relation?: SortOrder
    phone?: SortOrder
    email?: SortOrderInput | SortOrder
    _count?: FamilyAccessCountOrderByAggregateInput
    _max?: FamilyAccessMaxOrderByAggregateInput
    _min?: FamilyAccessMinOrderByAggregateInput
  }

  export type FamilyAccessScalarWhereWithAggregatesInput = {
    AND?: FamilyAccessScalarWhereWithAggregatesInput | FamilyAccessScalarWhereWithAggregatesInput[]
    OR?: FamilyAccessScalarWhereWithAggregatesInput[]
    NOT?: FamilyAccessScalarWhereWithAggregatesInput | FamilyAccessScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FamilyAccess"> | string
    clientId?: StringWithAggregatesFilter<"FamilyAccess"> | string
    name?: StringWithAggregatesFilter<"FamilyAccess"> | string
    relation?: StringWithAggregatesFilter<"FamilyAccess"> | string
    phone?: StringWithAggregatesFilter<"FamilyAccess"> | string
    email?: StringNullableWithAggregatesFilter<"FamilyAccess"> | string | null
  }

  export type MedicationDatabaseLinkWhereInput = {
    AND?: MedicationDatabaseLinkWhereInput | MedicationDatabaseLinkWhereInput[]
    OR?: MedicationDatabaseLinkWhereInput[]
    NOT?: MedicationDatabaseLinkWhereInput | MedicationDatabaseLinkWhereInput[]
    id?: StringFilter<"MedicationDatabaseLink"> | string
    name?: StringFilter<"MedicationDatabaseLink"> | string
    isSpecialist?: BoolFilter<"MedicationDatabaseLink"> | boolean
    url?: StringFilter<"MedicationDatabaseLink"> | string
    source?: StringFilter<"MedicationDatabaseLink"> | string
    agencyId?: StringFilter<"MedicationDatabaseLink"> | string
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
    MedicationRecord?: MedicationRecordListRelationFilter
  }

  export type MedicationDatabaseLinkOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    isSpecialist?: SortOrder
    url?: SortOrder
    source?: SortOrder
    agencyId?: SortOrder
    agency?: AgencyOrderByWithRelationInput
    MedicationRecord?: MedicationRecordOrderByRelationAggregateInput
  }

  export type MedicationDatabaseLinkWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MedicationDatabaseLinkWhereInput | MedicationDatabaseLinkWhereInput[]
    OR?: MedicationDatabaseLinkWhereInput[]
    NOT?: MedicationDatabaseLinkWhereInput | MedicationDatabaseLinkWhereInput[]
    name?: StringFilter<"MedicationDatabaseLink"> | string
    isSpecialist?: BoolFilter<"MedicationDatabaseLink"> | boolean
    url?: StringFilter<"MedicationDatabaseLink"> | string
    source?: StringFilter<"MedicationDatabaseLink"> | string
    agencyId?: StringFilter<"MedicationDatabaseLink"> | string
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
    MedicationRecord?: MedicationRecordListRelationFilter
  }, "id">

  export type MedicationDatabaseLinkOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    isSpecialist?: SortOrder
    url?: SortOrder
    source?: SortOrder
    agencyId?: SortOrder
    _count?: MedicationDatabaseLinkCountOrderByAggregateInput
    _max?: MedicationDatabaseLinkMaxOrderByAggregateInput
    _min?: MedicationDatabaseLinkMinOrderByAggregateInput
  }

  export type MedicationDatabaseLinkScalarWhereWithAggregatesInput = {
    AND?: MedicationDatabaseLinkScalarWhereWithAggregatesInput | MedicationDatabaseLinkScalarWhereWithAggregatesInput[]
    OR?: MedicationDatabaseLinkScalarWhereWithAggregatesInput[]
    NOT?: MedicationDatabaseLinkScalarWhereWithAggregatesInput | MedicationDatabaseLinkScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MedicationDatabaseLink"> | string
    name?: StringWithAggregatesFilter<"MedicationDatabaseLink"> | string
    isSpecialist?: BoolWithAggregatesFilter<"MedicationDatabaseLink"> | boolean
    url?: StringWithAggregatesFilter<"MedicationDatabaseLink"> | string
    source?: StringWithAggregatesFilter<"MedicationDatabaseLink"> | string
    agencyId?: StringWithAggregatesFilter<"MedicationDatabaseLink"> | string
  }

  export type VisitTypeWhereInput = {
    AND?: VisitTypeWhereInput | VisitTypeWhereInput[]
    OR?: VisitTypeWhereInput[]
    NOT?: VisitTypeWhereInput | VisitTypeWhereInput[]
    id?: StringFilter<"VisitType"> | string
    agencyId?: StringFilter<"VisitType"> | string
    name?: StringFilter<"VisitType"> | string
    description?: StringNullableFilter<"VisitType"> | string | null
    createdAt?: DateTimeFilter<"VisitType"> | Date | string
    updatedAt?: DateTimeFilter<"VisitType"> | Date | string
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
    schedules?: ScheduleListRelationFilter
  }

  export type VisitTypeOrderByWithRelationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agency?: AgencyOrderByWithRelationInput
    schedules?: ScheduleOrderByRelationAggregateInput
  }

  export type VisitTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: VisitTypeWhereInput | VisitTypeWhereInput[]
    OR?: VisitTypeWhereInput[]
    NOT?: VisitTypeWhereInput | VisitTypeWhereInput[]
    agencyId?: StringFilter<"VisitType"> | string
    name?: StringFilter<"VisitType"> | string
    description?: StringNullableFilter<"VisitType"> | string | null
    createdAt?: DateTimeFilter<"VisitType"> | Date | string
    updatedAt?: DateTimeFilter<"VisitType"> | Date | string
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
    schedules?: ScheduleListRelationFilter
  }, "id">

  export type VisitTypeOrderByWithAggregationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: VisitTypeCountOrderByAggregateInput
    _max?: VisitTypeMaxOrderByAggregateInput
    _min?: VisitTypeMinOrderByAggregateInput
  }

  export type VisitTypeScalarWhereWithAggregatesInput = {
    AND?: VisitTypeScalarWhereWithAggregatesInput | VisitTypeScalarWhereWithAggregatesInput[]
    OR?: VisitTypeScalarWhereWithAggregatesInput[]
    NOT?: VisitTypeScalarWhereWithAggregatesInput | VisitTypeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"VisitType"> | string
    agencyId?: StringWithAggregatesFilter<"VisitType"> | string
    name?: StringWithAggregatesFilter<"VisitType"> | string
    description?: StringNullableWithAggregatesFilter<"VisitType"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"VisitType"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"VisitType"> | Date | string
  }

  export type ScheduleWhereInput = {
    AND?: ScheduleWhereInput | ScheduleWhereInput[]
    OR?: ScheduleWhereInput[]
    NOT?: ScheduleWhereInput | ScheduleWhereInput[]
    id?: StringFilter<"Schedule"> | string
    agencyId?: StringFilter<"Schedule"> | string
    clientId?: StringFilter<"Schedule"> | string
    userId?: StringFilter<"Schedule"> | string
    date?: DateTimeFilter<"Schedule"> | Date | string
    startTime?: StringFilter<"Schedule"> | string
    endTime?: StringFilter<"Schedule"> | string
    status?: StringFilter<"Schedule"> | string
    type?: EnumScheduleTypeFilter<"Schedule"> | $Enums.ScheduleType
    notes?: StringNullableFilter<"Schedule"> | string | null
    chargeRate?: FloatNullableFilter<"Schedule"> | number | null
    createdAt?: DateTimeFilter<"Schedule"> | Date | string
    updatedAt?: DateTimeFilter<"Schedule"> | Date | string
    visitTypeId?: StringNullableFilter<"Schedule"> | string | null
    visitType?: XOR<VisitTypeNullableScalarRelationFilter, VisitTypeWhereInput> | null
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ScheduleOrderByWithRelationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    date?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    status?: SortOrder
    type?: SortOrder
    notes?: SortOrderInput | SortOrder
    chargeRate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    visitTypeId?: SortOrderInput | SortOrder
    visitType?: VisitTypeOrderByWithRelationInput
    agency?: AgencyOrderByWithRelationInput
    client?: UserOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type ScheduleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ScheduleWhereInput | ScheduleWhereInput[]
    OR?: ScheduleWhereInput[]
    NOT?: ScheduleWhereInput | ScheduleWhereInput[]
    agencyId?: StringFilter<"Schedule"> | string
    clientId?: StringFilter<"Schedule"> | string
    userId?: StringFilter<"Schedule"> | string
    date?: DateTimeFilter<"Schedule"> | Date | string
    startTime?: StringFilter<"Schedule"> | string
    endTime?: StringFilter<"Schedule"> | string
    status?: StringFilter<"Schedule"> | string
    type?: EnumScheduleTypeFilter<"Schedule"> | $Enums.ScheduleType
    notes?: StringNullableFilter<"Schedule"> | string | null
    chargeRate?: FloatNullableFilter<"Schedule"> | number | null
    createdAt?: DateTimeFilter<"Schedule"> | Date | string
    updatedAt?: DateTimeFilter<"Schedule"> | Date | string
    visitTypeId?: StringNullableFilter<"Schedule"> | string | null
    visitType?: XOR<VisitTypeNullableScalarRelationFilter, VisitTypeWhereInput> | null
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type ScheduleOrderByWithAggregationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    date?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    status?: SortOrder
    type?: SortOrder
    notes?: SortOrderInput | SortOrder
    chargeRate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    visitTypeId?: SortOrderInput | SortOrder
    _count?: ScheduleCountOrderByAggregateInput
    _avg?: ScheduleAvgOrderByAggregateInput
    _max?: ScheduleMaxOrderByAggregateInput
    _min?: ScheduleMinOrderByAggregateInput
    _sum?: ScheduleSumOrderByAggregateInput
  }

  export type ScheduleScalarWhereWithAggregatesInput = {
    AND?: ScheduleScalarWhereWithAggregatesInput | ScheduleScalarWhereWithAggregatesInput[]
    OR?: ScheduleScalarWhereWithAggregatesInput[]
    NOT?: ScheduleScalarWhereWithAggregatesInput | ScheduleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Schedule"> | string
    agencyId?: StringWithAggregatesFilter<"Schedule"> | string
    clientId?: StringWithAggregatesFilter<"Schedule"> | string
    userId?: StringWithAggregatesFilter<"Schedule"> | string
    date?: DateTimeWithAggregatesFilter<"Schedule"> | Date | string
    startTime?: StringWithAggregatesFilter<"Schedule"> | string
    endTime?: StringWithAggregatesFilter<"Schedule"> | string
    status?: StringWithAggregatesFilter<"Schedule"> | string
    type?: EnumScheduleTypeWithAggregatesFilter<"Schedule"> | $Enums.ScheduleType
    notes?: StringNullableWithAggregatesFilter<"Schedule"> | string | null
    chargeRate?: FloatNullableWithAggregatesFilter<"Schedule"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Schedule"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Schedule"> | Date | string
    visitTypeId?: StringNullableWithAggregatesFilter<"Schedule"> | string | null
  }

  export type ReportWhereInput = {
    AND?: ReportWhereInput | ReportWhereInput[]
    OR?: ReportWhereInput[]
    NOT?: ReportWhereInput | ReportWhereInput[]
    id?: StringFilter<"Report"> | string
    clientId?: StringFilter<"Report"> | string
    agencyId?: StringFilter<"Report"> | string
    userId?: StringFilter<"Report"> | string
    condition?: StringFilter<"Report"> | string
    summary?: StringFilter<"Report"> | string
    checkInTime?: DateTimeFilter<"Report"> | Date | string
    checkOutTime?: DateTimeNullableFilter<"Report"> | Date | string | null
    createdAt?: DateTimeFilter<"Report"> | Date | string
    checkInDistance?: FloatNullableFilter<"Report"> | number | null
    checkOutDistance?: FloatNullableFilter<"Report"> | number | null
    checkInLocation?: StringNullableFilter<"Report"> | string | null
    checkOutLocation?: StringNullableFilter<"Report"> | string | null
    hasSignature?: BoolFilter<"Report"> | boolean
    signatureImageUrl?: StringNullableFilter<"Report"> | string | null
    status?: EnumReportStatusFilter<"Report"> | $Enums.ReportStatus
    lastEditedAt?: DateTimeNullableFilter<"Report"> | Date | string | null
    lastEditedBy?: StringNullableFilter<"Report"> | string | null
    lastEditReason?: StringNullableFilter<"Report"> | string | null
    tasksCompleted?: ReportTaskListRelationFilter
    alerts?: ReportAlertListRelationFilter
    bodyMapObservations?: BodyMapObservationListRelationFilter
    medicationAdministrations?: MedicationAdministrationListRelationFilter
    editHistory?: ReportEditListRelationFilter
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
    caregiver?: XOR<UserScalarRelationFilter, UserWhereInput>
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
  }

  export type ReportOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    agencyId?: SortOrder
    userId?: SortOrder
    condition?: SortOrder
    summary?: SortOrder
    checkInTime?: SortOrder
    checkOutTime?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    checkInDistance?: SortOrderInput | SortOrder
    checkOutDistance?: SortOrderInput | SortOrder
    checkInLocation?: SortOrderInput | SortOrder
    checkOutLocation?: SortOrderInput | SortOrder
    hasSignature?: SortOrder
    signatureImageUrl?: SortOrderInput | SortOrder
    status?: SortOrder
    lastEditedAt?: SortOrderInput | SortOrder
    lastEditedBy?: SortOrderInput | SortOrder
    lastEditReason?: SortOrderInput | SortOrder
    tasksCompleted?: ReportTaskOrderByRelationAggregateInput
    alerts?: ReportAlertOrderByRelationAggregateInput
    bodyMapObservations?: BodyMapObservationOrderByRelationAggregateInput
    medicationAdministrations?: MedicationAdministrationOrderByRelationAggregateInput
    editHistory?: ReportEditOrderByRelationAggregateInput
    client?: UserOrderByWithRelationInput
    caregiver?: UserOrderByWithRelationInput
    agency?: AgencyOrderByWithRelationInput
  }

  export type ReportWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReportWhereInput | ReportWhereInput[]
    OR?: ReportWhereInput[]
    NOT?: ReportWhereInput | ReportWhereInput[]
    clientId?: StringFilter<"Report"> | string
    agencyId?: StringFilter<"Report"> | string
    userId?: StringFilter<"Report"> | string
    condition?: StringFilter<"Report"> | string
    summary?: StringFilter<"Report"> | string
    checkInTime?: DateTimeFilter<"Report"> | Date | string
    checkOutTime?: DateTimeNullableFilter<"Report"> | Date | string | null
    createdAt?: DateTimeFilter<"Report"> | Date | string
    checkInDistance?: FloatNullableFilter<"Report"> | number | null
    checkOutDistance?: FloatNullableFilter<"Report"> | number | null
    checkInLocation?: StringNullableFilter<"Report"> | string | null
    checkOutLocation?: StringNullableFilter<"Report"> | string | null
    hasSignature?: BoolFilter<"Report"> | boolean
    signatureImageUrl?: StringNullableFilter<"Report"> | string | null
    status?: EnumReportStatusFilter<"Report"> | $Enums.ReportStatus
    lastEditedAt?: DateTimeNullableFilter<"Report"> | Date | string | null
    lastEditedBy?: StringNullableFilter<"Report"> | string | null
    lastEditReason?: StringNullableFilter<"Report"> | string | null
    tasksCompleted?: ReportTaskListRelationFilter
    alerts?: ReportAlertListRelationFilter
    bodyMapObservations?: BodyMapObservationListRelationFilter
    medicationAdministrations?: MedicationAdministrationListRelationFilter
    editHistory?: ReportEditListRelationFilter
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
    caregiver?: XOR<UserScalarRelationFilter, UserWhereInput>
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
  }, "id">

  export type ReportOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    agencyId?: SortOrder
    userId?: SortOrder
    condition?: SortOrder
    summary?: SortOrder
    checkInTime?: SortOrder
    checkOutTime?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    checkInDistance?: SortOrderInput | SortOrder
    checkOutDistance?: SortOrderInput | SortOrder
    checkInLocation?: SortOrderInput | SortOrder
    checkOutLocation?: SortOrderInput | SortOrder
    hasSignature?: SortOrder
    signatureImageUrl?: SortOrderInput | SortOrder
    status?: SortOrder
    lastEditedAt?: SortOrderInput | SortOrder
    lastEditedBy?: SortOrderInput | SortOrder
    lastEditReason?: SortOrderInput | SortOrder
    _count?: ReportCountOrderByAggregateInput
    _avg?: ReportAvgOrderByAggregateInput
    _max?: ReportMaxOrderByAggregateInput
    _min?: ReportMinOrderByAggregateInput
    _sum?: ReportSumOrderByAggregateInput
  }

  export type ReportScalarWhereWithAggregatesInput = {
    AND?: ReportScalarWhereWithAggregatesInput | ReportScalarWhereWithAggregatesInput[]
    OR?: ReportScalarWhereWithAggregatesInput[]
    NOT?: ReportScalarWhereWithAggregatesInput | ReportScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Report"> | string
    clientId?: StringWithAggregatesFilter<"Report"> | string
    agencyId?: StringWithAggregatesFilter<"Report"> | string
    userId?: StringWithAggregatesFilter<"Report"> | string
    condition?: StringWithAggregatesFilter<"Report"> | string
    summary?: StringWithAggregatesFilter<"Report"> | string
    checkInTime?: DateTimeWithAggregatesFilter<"Report"> | Date | string
    checkOutTime?: DateTimeNullableWithAggregatesFilter<"Report"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Report"> | Date | string
    checkInDistance?: FloatNullableWithAggregatesFilter<"Report"> | number | null
    checkOutDistance?: FloatNullableWithAggregatesFilter<"Report"> | number | null
    checkInLocation?: StringNullableWithAggregatesFilter<"Report"> | string | null
    checkOutLocation?: StringNullableWithAggregatesFilter<"Report"> | string | null
    hasSignature?: BoolWithAggregatesFilter<"Report"> | boolean
    signatureImageUrl?: StringNullableWithAggregatesFilter<"Report"> | string | null
    status?: EnumReportStatusWithAggregatesFilter<"Report"> | $Enums.ReportStatus
    lastEditedAt?: DateTimeNullableWithAggregatesFilter<"Report"> | Date | string | null
    lastEditedBy?: StringNullableWithAggregatesFilter<"Report"> | string | null
    lastEditReason?: StringNullableWithAggregatesFilter<"Report"> | string | null
  }

  export type ReportTaskWhereInput = {
    AND?: ReportTaskWhereInput | ReportTaskWhereInput[]
    OR?: ReportTaskWhereInput[]
    NOT?: ReportTaskWhereInput | ReportTaskWhereInput[]
    id?: StringFilter<"ReportTask"> | string
    reportId?: StringFilter<"ReportTask"> | string
    taskName?: StringFilter<"ReportTask"> | string
    completed?: BoolFilter<"ReportTask"> | boolean
    notes?: StringNullableFilter<"ReportTask"> | string | null
    taskIcon?: StringNullableFilter<"ReportTask"> | string | null
    taskType?: StringNullableFilter<"ReportTask"> | string | null
    completedAt?: DateTimeNullableFilter<"ReportTask"> | Date | string | null
    report?: XOR<ReportScalarRelationFilter, ReportWhereInput>
  }

  export type ReportTaskOrderByWithRelationInput = {
    id?: SortOrder
    reportId?: SortOrder
    taskName?: SortOrder
    completed?: SortOrder
    notes?: SortOrderInput | SortOrder
    taskIcon?: SortOrderInput | SortOrder
    taskType?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    report?: ReportOrderByWithRelationInput
  }

  export type ReportTaskWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReportTaskWhereInput | ReportTaskWhereInput[]
    OR?: ReportTaskWhereInput[]
    NOT?: ReportTaskWhereInput | ReportTaskWhereInput[]
    reportId?: StringFilter<"ReportTask"> | string
    taskName?: StringFilter<"ReportTask"> | string
    completed?: BoolFilter<"ReportTask"> | boolean
    notes?: StringNullableFilter<"ReportTask"> | string | null
    taskIcon?: StringNullableFilter<"ReportTask"> | string | null
    taskType?: StringNullableFilter<"ReportTask"> | string | null
    completedAt?: DateTimeNullableFilter<"ReportTask"> | Date | string | null
    report?: XOR<ReportScalarRelationFilter, ReportWhereInput>
  }, "id">

  export type ReportTaskOrderByWithAggregationInput = {
    id?: SortOrder
    reportId?: SortOrder
    taskName?: SortOrder
    completed?: SortOrder
    notes?: SortOrderInput | SortOrder
    taskIcon?: SortOrderInput | SortOrder
    taskType?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    _count?: ReportTaskCountOrderByAggregateInput
    _max?: ReportTaskMaxOrderByAggregateInput
    _min?: ReportTaskMinOrderByAggregateInput
  }

  export type ReportTaskScalarWhereWithAggregatesInput = {
    AND?: ReportTaskScalarWhereWithAggregatesInput | ReportTaskScalarWhereWithAggregatesInput[]
    OR?: ReportTaskScalarWhereWithAggregatesInput[]
    NOT?: ReportTaskScalarWhereWithAggregatesInput | ReportTaskScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ReportTask"> | string
    reportId?: StringWithAggregatesFilter<"ReportTask"> | string
    taskName?: StringWithAggregatesFilter<"ReportTask"> | string
    completed?: BoolWithAggregatesFilter<"ReportTask"> | boolean
    notes?: StringNullableWithAggregatesFilter<"ReportTask"> | string | null
    taskIcon?: StringNullableWithAggregatesFilter<"ReportTask"> | string | null
    taskType?: StringNullableWithAggregatesFilter<"ReportTask"> | string | null
    completedAt?: DateTimeNullableWithAggregatesFilter<"ReportTask"> | Date | string | null
  }

  export type ReportAlertWhereInput = {
    AND?: ReportAlertWhereInput | ReportAlertWhereInput[]
    OR?: ReportAlertWhereInput[]
    NOT?: ReportAlertWhereInput | ReportAlertWhereInput[]
    id?: StringFilter<"ReportAlert"> | string
    reportId?: StringFilter<"ReportAlert"> | string
    type?: EnumAlertTypeFilter<"ReportAlert"> | $Enums.AlertType
    message?: StringFilter<"ReportAlert"> | string
    severity?: EnumAlertSeverityFilter<"ReportAlert"> | $Enums.AlertSeverity
    createdAt?: DateTimeFilter<"ReportAlert"> | Date | string
    resolved?: BoolFilter<"ReportAlert"> | boolean
    resolvedAt?: DateTimeNullableFilter<"ReportAlert"> | Date | string | null
    resolvedBy?: StringNullableFilter<"ReportAlert"> | string | null
    report?: XOR<ReportScalarRelationFilter, ReportWhereInput>
  }

  export type ReportAlertOrderByWithRelationInput = {
    id?: SortOrder
    reportId?: SortOrder
    type?: SortOrder
    message?: SortOrder
    severity?: SortOrder
    createdAt?: SortOrder
    resolved?: SortOrder
    resolvedAt?: SortOrderInput | SortOrder
    resolvedBy?: SortOrderInput | SortOrder
    report?: ReportOrderByWithRelationInput
  }

  export type ReportAlertWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReportAlertWhereInput | ReportAlertWhereInput[]
    OR?: ReportAlertWhereInput[]
    NOT?: ReportAlertWhereInput | ReportAlertWhereInput[]
    reportId?: StringFilter<"ReportAlert"> | string
    type?: EnumAlertTypeFilter<"ReportAlert"> | $Enums.AlertType
    message?: StringFilter<"ReportAlert"> | string
    severity?: EnumAlertSeverityFilter<"ReportAlert"> | $Enums.AlertSeverity
    createdAt?: DateTimeFilter<"ReportAlert"> | Date | string
    resolved?: BoolFilter<"ReportAlert"> | boolean
    resolvedAt?: DateTimeNullableFilter<"ReportAlert"> | Date | string | null
    resolvedBy?: StringNullableFilter<"ReportAlert"> | string | null
    report?: XOR<ReportScalarRelationFilter, ReportWhereInput>
  }, "id">

  export type ReportAlertOrderByWithAggregationInput = {
    id?: SortOrder
    reportId?: SortOrder
    type?: SortOrder
    message?: SortOrder
    severity?: SortOrder
    createdAt?: SortOrder
    resolved?: SortOrder
    resolvedAt?: SortOrderInput | SortOrder
    resolvedBy?: SortOrderInput | SortOrder
    _count?: ReportAlertCountOrderByAggregateInput
    _max?: ReportAlertMaxOrderByAggregateInput
    _min?: ReportAlertMinOrderByAggregateInput
  }

  export type ReportAlertScalarWhereWithAggregatesInput = {
    AND?: ReportAlertScalarWhereWithAggregatesInput | ReportAlertScalarWhereWithAggregatesInput[]
    OR?: ReportAlertScalarWhereWithAggregatesInput[]
    NOT?: ReportAlertScalarWhereWithAggregatesInput | ReportAlertScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ReportAlert"> | string
    reportId?: StringWithAggregatesFilter<"ReportAlert"> | string
    type?: EnumAlertTypeWithAggregatesFilter<"ReportAlert"> | $Enums.AlertType
    message?: StringWithAggregatesFilter<"ReportAlert"> | string
    severity?: EnumAlertSeverityWithAggregatesFilter<"ReportAlert"> | $Enums.AlertSeverity
    createdAt?: DateTimeWithAggregatesFilter<"ReportAlert"> | Date | string
    resolved?: BoolWithAggregatesFilter<"ReportAlert"> | boolean
    resolvedAt?: DateTimeNullableWithAggregatesFilter<"ReportAlert"> | Date | string | null
    resolvedBy?: StringNullableWithAggregatesFilter<"ReportAlert"> | string | null
  }

  export type BodyMapObservationWhereInput = {
    AND?: BodyMapObservationWhereInput | BodyMapObservationWhereInput[]
    OR?: BodyMapObservationWhereInput[]
    NOT?: BodyMapObservationWhereInput | BodyMapObservationWhereInput[]
    id?: StringFilter<"BodyMapObservation"> | string
    reportId?: StringFilter<"BodyMapObservation"> | string
    bodyPart?: StringFilter<"BodyMapObservation"> | string
    condition?: StringFilter<"BodyMapObservation"> | string
    notes?: StringNullableFilter<"BodyMapObservation"> | string | null
    createdAt?: DateTimeFilter<"BodyMapObservation"> | Date | string
    report?: XOR<ReportScalarRelationFilter, ReportWhereInput>
  }

  export type BodyMapObservationOrderByWithRelationInput = {
    id?: SortOrder
    reportId?: SortOrder
    bodyPart?: SortOrder
    condition?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    report?: ReportOrderByWithRelationInput
  }

  export type BodyMapObservationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BodyMapObservationWhereInput | BodyMapObservationWhereInput[]
    OR?: BodyMapObservationWhereInput[]
    NOT?: BodyMapObservationWhereInput | BodyMapObservationWhereInput[]
    reportId?: StringFilter<"BodyMapObservation"> | string
    bodyPart?: StringFilter<"BodyMapObservation"> | string
    condition?: StringFilter<"BodyMapObservation"> | string
    notes?: StringNullableFilter<"BodyMapObservation"> | string | null
    createdAt?: DateTimeFilter<"BodyMapObservation"> | Date | string
    report?: XOR<ReportScalarRelationFilter, ReportWhereInput>
  }, "id">

  export type BodyMapObservationOrderByWithAggregationInput = {
    id?: SortOrder
    reportId?: SortOrder
    bodyPart?: SortOrder
    condition?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: BodyMapObservationCountOrderByAggregateInput
    _max?: BodyMapObservationMaxOrderByAggregateInput
    _min?: BodyMapObservationMinOrderByAggregateInput
  }

  export type BodyMapObservationScalarWhereWithAggregatesInput = {
    AND?: BodyMapObservationScalarWhereWithAggregatesInput | BodyMapObservationScalarWhereWithAggregatesInput[]
    OR?: BodyMapObservationScalarWhereWithAggregatesInput[]
    NOT?: BodyMapObservationScalarWhereWithAggregatesInput | BodyMapObservationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BodyMapObservation"> | string
    reportId?: StringWithAggregatesFilter<"BodyMapObservation"> | string
    bodyPart?: StringWithAggregatesFilter<"BodyMapObservation"> | string
    condition?: StringWithAggregatesFilter<"BodyMapObservation"> | string
    notes?: StringNullableWithAggregatesFilter<"BodyMapObservation"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"BodyMapObservation"> | Date | string
  }

  export type ReportEditWhereInput = {
    AND?: ReportEditWhereInput | ReportEditWhereInput[]
    OR?: ReportEditWhereInput[]
    NOT?: ReportEditWhereInput | ReportEditWhereInput[]
    id?: StringFilter<"ReportEdit"> | string
    reportId?: StringFilter<"ReportEdit"> | string
    editedBy?: StringFilter<"ReportEdit"> | string
    editedAt?: DateTimeFilter<"ReportEdit"> | Date | string
    reason?: StringFilter<"ReportEdit"> | string
    changesJson?: StringFilter<"ReportEdit"> | string
    report?: XOR<ReportScalarRelationFilter, ReportWhereInput>
    editor?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ReportEditOrderByWithRelationInput = {
    id?: SortOrder
    reportId?: SortOrder
    editedBy?: SortOrder
    editedAt?: SortOrder
    reason?: SortOrder
    changesJson?: SortOrder
    report?: ReportOrderByWithRelationInput
    editor?: UserOrderByWithRelationInput
  }

  export type ReportEditWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReportEditWhereInput | ReportEditWhereInput[]
    OR?: ReportEditWhereInput[]
    NOT?: ReportEditWhereInput | ReportEditWhereInput[]
    reportId?: StringFilter<"ReportEdit"> | string
    editedBy?: StringFilter<"ReportEdit"> | string
    editedAt?: DateTimeFilter<"ReportEdit"> | Date | string
    reason?: StringFilter<"ReportEdit"> | string
    changesJson?: StringFilter<"ReportEdit"> | string
    report?: XOR<ReportScalarRelationFilter, ReportWhereInput>
    editor?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type ReportEditOrderByWithAggregationInput = {
    id?: SortOrder
    reportId?: SortOrder
    editedBy?: SortOrder
    editedAt?: SortOrder
    reason?: SortOrder
    changesJson?: SortOrder
    _count?: ReportEditCountOrderByAggregateInput
    _max?: ReportEditMaxOrderByAggregateInput
    _min?: ReportEditMinOrderByAggregateInput
  }

  export type ReportEditScalarWhereWithAggregatesInput = {
    AND?: ReportEditScalarWhereWithAggregatesInput | ReportEditScalarWhereWithAggregatesInput[]
    OR?: ReportEditScalarWhereWithAggregatesInput[]
    NOT?: ReportEditScalarWhereWithAggregatesInput | ReportEditScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ReportEdit"> | string
    reportId?: StringWithAggregatesFilter<"ReportEdit"> | string
    editedBy?: StringWithAggregatesFilter<"ReportEdit"> | string
    editedAt?: DateTimeWithAggregatesFilter<"ReportEdit"> | Date | string
    reason?: StringWithAggregatesFilter<"ReportEdit"> | string
    changesJson?: StringWithAggregatesFilter<"ReportEdit"> | string
  }

  export type MedicationRecordWhereInput = {
    AND?: MedicationRecordWhereInput | MedicationRecordWhereInput[]
    OR?: MedicationRecordWhereInput[]
    NOT?: MedicationRecordWhereInput | MedicationRecordWhereInput[]
    id?: StringFilter<"MedicationRecord"> | string
    medicationId?: StringFilter<"MedicationRecord"> | string
    clientId?: StringFilter<"MedicationRecord"> | string
    userId?: StringFilter<"MedicationRecord"> | string
    dosage?: StringFilter<"MedicationRecord"> | string
    frequency?: StringFilter<"MedicationRecord"> | string
    startDate?: DateTimeFilter<"MedicationRecord"> | Date | string
    endDate?: DateTimeNullableFilter<"MedicationRecord"> | Date | string | null
    notes?: StringNullableFilter<"MedicationRecord"> | string | null
    createdAt?: DateTimeFilter<"MedicationRecord"> | Date | string
    updatedAt?: DateTimeFilter<"MedicationRecord"> | Date | string
    morningDose?: BoolFilter<"MedicationRecord"> | boolean
    lunchDose?: BoolFilter<"MedicationRecord"> | boolean
    eveningDose?: BoolFilter<"MedicationRecord"> | boolean
    bedtimeDose?: BoolFilter<"MedicationRecord"> | boolean
    asNeededDose?: BoolFilter<"MedicationRecord"> | boolean
    medication?: XOR<MedicationDatabaseLinkScalarRelationFilter, MedicationDatabaseLinkWhereInput>
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    administrationRecords?: MedicationAdministrationListRelationFilter
  }

  export type MedicationRecordOrderByWithRelationInput = {
    id?: SortOrder
    medicationId?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    dosage?: SortOrder
    frequency?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    morningDose?: SortOrder
    lunchDose?: SortOrder
    eveningDose?: SortOrder
    bedtimeDose?: SortOrder
    asNeededDose?: SortOrder
    medication?: MedicationDatabaseLinkOrderByWithRelationInput
    client?: UserOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    User?: UserOrderByWithRelationInput
    administrationRecords?: MedicationAdministrationOrderByRelationAggregateInput
  }

  export type MedicationRecordWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MedicationRecordWhereInput | MedicationRecordWhereInput[]
    OR?: MedicationRecordWhereInput[]
    NOT?: MedicationRecordWhereInput | MedicationRecordWhereInput[]
    medicationId?: StringFilter<"MedicationRecord"> | string
    clientId?: StringFilter<"MedicationRecord"> | string
    userId?: StringFilter<"MedicationRecord"> | string
    dosage?: StringFilter<"MedicationRecord"> | string
    frequency?: StringFilter<"MedicationRecord"> | string
    startDate?: DateTimeFilter<"MedicationRecord"> | Date | string
    endDate?: DateTimeNullableFilter<"MedicationRecord"> | Date | string | null
    notes?: StringNullableFilter<"MedicationRecord"> | string | null
    createdAt?: DateTimeFilter<"MedicationRecord"> | Date | string
    updatedAt?: DateTimeFilter<"MedicationRecord"> | Date | string
    morningDose?: BoolFilter<"MedicationRecord"> | boolean
    lunchDose?: BoolFilter<"MedicationRecord"> | boolean
    eveningDose?: BoolFilter<"MedicationRecord"> | boolean
    bedtimeDose?: BoolFilter<"MedicationRecord"> | boolean
    asNeededDose?: BoolFilter<"MedicationRecord"> | boolean
    medication?: XOR<MedicationDatabaseLinkScalarRelationFilter, MedicationDatabaseLinkWhereInput>
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    administrationRecords?: MedicationAdministrationListRelationFilter
  }, "id">

  export type MedicationRecordOrderByWithAggregationInput = {
    id?: SortOrder
    medicationId?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    dosage?: SortOrder
    frequency?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    morningDose?: SortOrder
    lunchDose?: SortOrder
    eveningDose?: SortOrder
    bedtimeDose?: SortOrder
    asNeededDose?: SortOrder
    _count?: MedicationRecordCountOrderByAggregateInput
    _max?: MedicationRecordMaxOrderByAggregateInput
    _min?: MedicationRecordMinOrderByAggregateInput
  }

  export type MedicationRecordScalarWhereWithAggregatesInput = {
    AND?: MedicationRecordScalarWhereWithAggregatesInput | MedicationRecordScalarWhereWithAggregatesInput[]
    OR?: MedicationRecordScalarWhereWithAggregatesInput[]
    NOT?: MedicationRecordScalarWhereWithAggregatesInput | MedicationRecordScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MedicationRecord"> | string
    medicationId?: StringWithAggregatesFilter<"MedicationRecord"> | string
    clientId?: StringWithAggregatesFilter<"MedicationRecord"> | string
    userId?: StringWithAggregatesFilter<"MedicationRecord"> | string
    dosage?: StringWithAggregatesFilter<"MedicationRecord"> | string
    frequency?: StringWithAggregatesFilter<"MedicationRecord"> | string
    startDate?: DateTimeWithAggregatesFilter<"MedicationRecord"> | Date | string
    endDate?: DateTimeNullableWithAggregatesFilter<"MedicationRecord"> | Date | string | null
    notes?: StringNullableWithAggregatesFilter<"MedicationRecord"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"MedicationRecord"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MedicationRecord"> | Date | string
    morningDose?: BoolWithAggregatesFilter<"MedicationRecord"> | boolean
    lunchDose?: BoolWithAggregatesFilter<"MedicationRecord"> | boolean
    eveningDose?: BoolWithAggregatesFilter<"MedicationRecord"> | boolean
    bedtimeDose?: BoolWithAggregatesFilter<"MedicationRecord"> | boolean
    asNeededDose?: BoolWithAggregatesFilter<"MedicationRecord"> | boolean
  }

  export type MedicationAdministrationWhereInput = {
    AND?: MedicationAdministrationWhereInput | MedicationAdministrationWhereInput[]
    OR?: MedicationAdministrationWhereInput[]
    NOT?: MedicationAdministrationWhereInput | MedicationAdministrationWhereInput[]
    id?: StringFilter<"MedicationAdministration"> | string
    medicationRecordId?: StringFilter<"MedicationAdministration"> | string
    administeredById?: StringFilter<"MedicationAdministration"> | string
    administeredAt?: DateTimeFilter<"MedicationAdministration"> | Date | string
    doseType?: EnumDoseTypeFilter<"MedicationAdministration"> | $Enums.DoseType
    doseTaken?: BoolFilter<"MedicationAdministration"> | boolean
    notes?: StringNullableFilter<"MedicationAdministration"> | string | null
    createdAt?: DateTimeFilter<"MedicationAdministration"> | Date | string
    reportId?: StringNullableFilter<"MedicationAdministration"> | string | null
    medicationRecord?: XOR<MedicationRecordScalarRelationFilter, MedicationRecordWhereInput>
    administeredBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    report?: XOR<ReportNullableScalarRelationFilter, ReportWhereInput> | null
  }

  export type MedicationAdministrationOrderByWithRelationInput = {
    id?: SortOrder
    medicationRecordId?: SortOrder
    administeredById?: SortOrder
    administeredAt?: SortOrder
    doseType?: SortOrder
    doseTaken?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    reportId?: SortOrderInput | SortOrder
    medicationRecord?: MedicationRecordOrderByWithRelationInput
    administeredBy?: UserOrderByWithRelationInput
    report?: ReportOrderByWithRelationInput
  }

  export type MedicationAdministrationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MedicationAdministrationWhereInput | MedicationAdministrationWhereInput[]
    OR?: MedicationAdministrationWhereInput[]
    NOT?: MedicationAdministrationWhereInput | MedicationAdministrationWhereInput[]
    medicationRecordId?: StringFilter<"MedicationAdministration"> | string
    administeredById?: StringFilter<"MedicationAdministration"> | string
    administeredAt?: DateTimeFilter<"MedicationAdministration"> | Date | string
    doseType?: EnumDoseTypeFilter<"MedicationAdministration"> | $Enums.DoseType
    doseTaken?: BoolFilter<"MedicationAdministration"> | boolean
    notes?: StringNullableFilter<"MedicationAdministration"> | string | null
    createdAt?: DateTimeFilter<"MedicationAdministration"> | Date | string
    reportId?: StringNullableFilter<"MedicationAdministration"> | string | null
    medicationRecord?: XOR<MedicationRecordScalarRelationFilter, MedicationRecordWhereInput>
    administeredBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    report?: XOR<ReportNullableScalarRelationFilter, ReportWhereInput> | null
  }, "id">

  export type MedicationAdministrationOrderByWithAggregationInput = {
    id?: SortOrder
    medicationRecordId?: SortOrder
    administeredById?: SortOrder
    administeredAt?: SortOrder
    doseType?: SortOrder
    doseTaken?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    reportId?: SortOrderInput | SortOrder
    _count?: MedicationAdministrationCountOrderByAggregateInput
    _max?: MedicationAdministrationMaxOrderByAggregateInput
    _min?: MedicationAdministrationMinOrderByAggregateInput
  }

  export type MedicationAdministrationScalarWhereWithAggregatesInput = {
    AND?: MedicationAdministrationScalarWhereWithAggregatesInput | MedicationAdministrationScalarWhereWithAggregatesInput[]
    OR?: MedicationAdministrationScalarWhereWithAggregatesInput[]
    NOT?: MedicationAdministrationScalarWhereWithAggregatesInput | MedicationAdministrationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MedicationAdministration"> | string
    medicationRecordId?: StringWithAggregatesFilter<"MedicationAdministration"> | string
    administeredById?: StringWithAggregatesFilter<"MedicationAdministration"> | string
    administeredAt?: DateTimeWithAggregatesFilter<"MedicationAdministration"> | Date | string
    doseType?: EnumDoseTypeWithAggregatesFilter<"MedicationAdministration"> | $Enums.DoseType
    doseTaken?: BoolWithAggregatesFilter<"MedicationAdministration"> | boolean
    notes?: StringNullableWithAggregatesFilter<"MedicationAdministration"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"MedicationAdministration"> | Date | string
    reportId?: StringNullableWithAggregatesFilter<"MedicationAdministration"> | string | null
  }

  export type InvoiceWhereInput = {
    AND?: InvoiceWhereInput | InvoiceWhereInput[]
    OR?: InvoiceWhereInput[]
    NOT?: InvoiceWhereInput | InvoiceWhereInput[]
    id?: StringFilter<"Invoice"> | string
    agencyId?: StringFilter<"Invoice"> | string
    clientId?: StringNullableFilter<"Invoice"> | string | null
    amount?: FloatFilter<"Invoice"> | number
    description?: StringFilter<"Invoice"> | string
    issuedAt?: DateTimeFilter<"Invoice"> | Date | string
    dueDate?: DateTimeFilter<"Invoice"> | Date | string
    status?: EnumInvoiceStatusFilter<"Invoice"> | $Enums.InvoiceStatus
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
    client?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type InvoiceOrderByWithRelationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    clientId?: SortOrderInput | SortOrder
    amount?: SortOrder
    description?: SortOrder
    issuedAt?: SortOrder
    dueDate?: SortOrder
    status?: SortOrder
    agency?: AgencyOrderByWithRelationInput
    client?: UserOrderByWithRelationInput
  }

  export type InvoiceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: InvoiceWhereInput | InvoiceWhereInput[]
    OR?: InvoiceWhereInput[]
    NOT?: InvoiceWhereInput | InvoiceWhereInput[]
    agencyId?: StringFilter<"Invoice"> | string
    clientId?: StringNullableFilter<"Invoice"> | string | null
    amount?: FloatFilter<"Invoice"> | number
    description?: StringFilter<"Invoice"> | string
    issuedAt?: DateTimeFilter<"Invoice"> | Date | string
    dueDate?: DateTimeFilter<"Invoice"> | Date | string
    status?: EnumInvoiceStatusFilter<"Invoice"> | $Enums.InvoiceStatus
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
    client?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type InvoiceOrderByWithAggregationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    clientId?: SortOrderInput | SortOrder
    amount?: SortOrder
    description?: SortOrder
    issuedAt?: SortOrder
    dueDate?: SortOrder
    status?: SortOrder
    _count?: InvoiceCountOrderByAggregateInput
    _avg?: InvoiceAvgOrderByAggregateInput
    _max?: InvoiceMaxOrderByAggregateInput
    _min?: InvoiceMinOrderByAggregateInput
    _sum?: InvoiceSumOrderByAggregateInput
  }

  export type InvoiceScalarWhereWithAggregatesInput = {
    AND?: InvoiceScalarWhereWithAggregatesInput | InvoiceScalarWhereWithAggregatesInput[]
    OR?: InvoiceScalarWhereWithAggregatesInput[]
    NOT?: InvoiceScalarWhereWithAggregatesInput | InvoiceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Invoice"> | string
    agencyId?: StringWithAggregatesFilter<"Invoice"> | string
    clientId?: StringNullableWithAggregatesFilter<"Invoice"> | string | null
    amount?: FloatWithAggregatesFilter<"Invoice"> | number
    description?: StringWithAggregatesFilter<"Invoice"> | string
    issuedAt?: DateTimeWithAggregatesFilter<"Invoice"> | Date | string
    dueDate?: DateTimeWithAggregatesFilter<"Invoice"> | Date | string
    status?: EnumInvoiceStatusWithAggregatesFilter<"Invoice"> | $Enums.InvoiceStatus
  }

  export type MileageRecordWhereInput = {
    AND?: MileageRecordWhereInput | MileageRecordWhereInput[]
    OR?: MileageRecordWhereInput[]
    NOT?: MileageRecordWhereInput | MileageRecordWhereInput[]
    id?: StringFilter<"MileageRecord"> | string
    agencyId?: StringFilter<"MileageRecord"> | string
    clientId?: StringFilter<"MileageRecord"> | string
    userId?: StringFilter<"MileageRecord"> | string
    date?: DateTimeFilter<"MileageRecord"> | Date | string
    startMileage?: FloatFilter<"MileageRecord"> | number
    endMileage?: FloatFilter<"MileageRecord"> | number
    totalMiles?: FloatFilter<"MileageRecord"> | number
    notes?: StringNullableFilter<"MileageRecord"> | string | null
    createdAt?: DateTimeFilter<"MileageRecord"> | Date | string
    updatedAt?: DateTimeFilter<"MileageRecord"> | Date | string
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type MileageRecordOrderByWithRelationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    date?: SortOrder
    startMileage?: SortOrder
    endMileage?: SortOrder
    totalMiles?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agency?: AgencyOrderByWithRelationInput
    client?: UserOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    User?: UserOrderByWithRelationInput
  }

  export type MileageRecordWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MileageRecordWhereInput | MileageRecordWhereInput[]
    OR?: MileageRecordWhereInput[]
    NOT?: MileageRecordWhereInput | MileageRecordWhereInput[]
    agencyId?: StringFilter<"MileageRecord"> | string
    clientId?: StringFilter<"MileageRecord"> | string
    userId?: StringFilter<"MileageRecord"> | string
    date?: DateTimeFilter<"MileageRecord"> | Date | string
    startMileage?: FloatFilter<"MileageRecord"> | number
    endMileage?: FloatFilter<"MileageRecord"> | number
    totalMiles?: FloatFilter<"MileageRecord"> | number
    notes?: StringNullableFilter<"MileageRecord"> | string | null
    createdAt?: DateTimeFilter<"MileageRecord"> | Date | string
    updatedAt?: DateTimeFilter<"MileageRecord"> | Date | string
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type MileageRecordOrderByWithAggregationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    date?: SortOrder
    startMileage?: SortOrder
    endMileage?: SortOrder
    totalMiles?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: MileageRecordCountOrderByAggregateInput
    _avg?: MileageRecordAvgOrderByAggregateInput
    _max?: MileageRecordMaxOrderByAggregateInput
    _min?: MileageRecordMinOrderByAggregateInput
    _sum?: MileageRecordSumOrderByAggregateInput
  }

  export type MileageRecordScalarWhereWithAggregatesInput = {
    AND?: MileageRecordScalarWhereWithAggregatesInput | MileageRecordScalarWhereWithAggregatesInput[]
    OR?: MileageRecordScalarWhereWithAggregatesInput[]
    NOT?: MileageRecordScalarWhereWithAggregatesInput | MileageRecordScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MileageRecord"> | string
    agencyId?: StringWithAggregatesFilter<"MileageRecord"> | string
    clientId?: StringWithAggregatesFilter<"MileageRecord"> | string
    userId?: StringWithAggregatesFilter<"MileageRecord"> | string
    date?: DateTimeWithAggregatesFilter<"MileageRecord"> | Date | string
    startMileage?: FloatWithAggregatesFilter<"MileageRecord"> | number
    endMileage?: FloatWithAggregatesFilter<"MileageRecord"> | number
    totalMiles?: FloatWithAggregatesFilter<"MileageRecord"> | number
    notes?: StringNullableWithAggregatesFilter<"MileageRecord"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"MileageRecord"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MileageRecord"> | Date | string
  }

  export type DocumentWhereInput = {
    AND?: DocumentWhereInput | DocumentWhereInput[]
    OR?: DocumentWhereInput[]
    NOT?: DocumentWhereInput | DocumentWhereInput[]
    id?: StringFilter<"Document"> | string
    title?: StringFilter<"Document"> | string
    fileUrl?: StringFilter<"Document"> | string
    uploadedAt?: DateTimeFilter<"Document"> | Date | string
    userId?: StringNullableFilter<"Document"> | string | null
    clientId?: StringNullableFilter<"Document"> | string | null
    agencyId?: StringNullableFilter<"Document"> | string | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    client?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    agency?: XOR<AgencyNullableScalarRelationFilter, AgencyWhereInput> | null
  }

  export type DocumentOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    fileUrl?: SortOrder
    uploadedAt?: SortOrder
    userId?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    agencyId?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    client?: UserOrderByWithRelationInput
    agency?: AgencyOrderByWithRelationInput
  }

  export type DocumentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DocumentWhereInput | DocumentWhereInput[]
    OR?: DocumentWhereInput[]
    NOT?: DocumentWhereInput | DocumentWhereInput[]
    title?: StringFilter<"Document"> | string
    fileUrl?: StringFilter<"Document"> | string
    uploadedAt?: DateTimeFilter<"Document"> | Date | string
    userId?: StringNullableFilter<"Document"> | string | null
    clientId?: StringNullableFilter<"Document"> | string | null
    agencyId?: StringNullableFilter<"Document"> | string | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    client?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    agency?: XOR<AgencyNullableScalarRelationFilter, AgencyWhereInput> | null
  }, "id">

  export type DocumentOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    fileUrl?: SortOrder
    uploadedAt?: SortOrder
    userId?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    agencyId?: SortOrderInput | SortOrder
    _count?: DocumentCountOrderByAggregateInput
    _max?: DocumentMaxOrderByAggregateInput
    _min?: DocumentMinOrderByAggregateInput
  }

  export type DocumentScalarWhereWithAggregatesInput = {
    AND?: DocumentScalarWhereWithAggregatesInput | DocumentScalarWhereWithAggregatesInput[]
    OR?: DocumentScalarWhereWithAggregatesInput[]
    NOT?: DocumentScalarWhereWithAggregatesInput | DocumentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Document"> | string
    title?: StringWithAggregatesFilter<"Document"> | string
    fileUrl?: StringWithAggregatesFilter<"Document"> | string
    uploadedAt?: DateTimeWithAggregatesFilter<"Document"> | Date | string
    userId?: StringNullableWithAggregatesFilter<"Document"> | string | null
    clientId?: StringNullableWithAggregatesFilter<"Document"> | string | null
    agencyId?: StringNullableWithAggregatesFilter<"Document"> | string | null
  }

  export type ProfileWhereInput = {
    AND?: ProfileWhereInput | ProfileWhereInput[]
    OR?: ProfileWhereInput[]
    NOT?: ProfileWhereInput | ProfileWhereInput[]
    id?: StringFilter<"Profile"> | string
    userId?: StringFilter<"Profile"> | string
    phone?: StringNullableFilter<"Profile"> | string | null
    avatarUrl?: StringNullableFilter<"Profile"> | string | null
    address?: StringNullableFilter<"Profile"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ProfileOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    phone?: SortOrderInput | SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type ProfileWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: ProfileWhereInput | ProfileWhereInput[]
    OR?: ProfileWhereInput[]
    NOT?: ProfileWhereInput | ProfileWhereInput[]
    phone?: StringNullableFilter<"Profile"> | string | null
    avatarUrl?: StringNullableFilter<"Profile"> | string | null
    address?: StringNullableFilter<"Profile"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "userId">

  export type ProfileOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    phone?: SortOrderInput | SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    _count?: ProfileCountOrderByAggregateInput
    _max?: ProfileMaxOrderByAggregateInput
    _min?: ProfileMinOrderByAggregateInput
  }

  export type ProfileScalarWhereWithAggregatesInput = {
    AND?: ProfileScalarWhereWithAggregatesInput | ProfileScalarWhereWithAggregatesInput[]
    OR?: ProfileScalarWhereWithAggregatesInput[]
    NOT?: ProfileScalarWhereWithAggregatesInput | ProfileScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Profile"> | string
    userId?: StringWithAggregatesFilter<"Profile"> | string
    phone?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    avatarUrl?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    address?: StringNullableWithAggregatesFilter<"Profile"> | string | null
  }

  export type IncidentReportWhereInput = {
    AND?: IncidentReportWhereInput | IncidentReportWhereInput[]
    OR?: IncidentReportWhereInput[]
    NOT?: IncidentReportWhereInput | IncidentReportWhereInput[]
    id?: StringFilter<"IncidentReport"> | string
    reporterId?: StringFilter<"IncidentReport"> | string
    agencyId?: StringFilter<"IncidentReport"> | string
    description?: StringFilter<"IncidentReport"> | string
    severity?: EnumSeverityLevelFilter<"IncidentReport"> | $Enums.SeverityLevel
    reportedAt?: DateTimeFilter<"IncidentReport"> | Date | string
    reporter?: XOR<UserScalarRelationFilter, UserWhereInput>
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
  }

  export type IncidentReportOrderByWithRelationInput = {
    id?: SortOrder
    reporterId?: SortOrder
    agencyId?: SortOrder
    description?: SortOrder
    severity?: SortOrder
    reportedAt?: SortOrder
    reporter?: UserOrderByWithRelationInput
    agency?: AgencyOrderByWithRelationInput
  }

  export type IncidentReportWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: IncidentReportWhereInput | IncidentReportWhereInput[]
    OR?: IncidentReportWhereInput[]
    NOT?: IncidentReportWhereInput | IncidentReportWhereInput[]
    reporterId?: StringFilter<"IncidentReport"> | string
    agencyId?: StringFilter<"IncidentReport"> | string
    description?: StringFilter<"IncidentReport"> | string
    severity?: EnumSeverityLevelFilter<"IncidentReport"> | $Enums.SeverityLevel
    reportedAt?: DateTimeFilter<"IncidentReport"> | Date | string
    reporter?: XOR<UserScalarRelationFilter, UserWhereInput>
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
  }, "id">

  export type IncidentReportOrderByWithAggregationInput = {
    id?: SortOrder
    reporterId?: SortOrder
    agencyId?: SortOrder
    description?: SortOrder
    severity?: SortOrder
    reportedAt?: SortOrder
    _count?: IncidentReportCountOrderByAggregateInput
    _max?: IncidentReportMaxOrderByAggregateInput
    _min?: IncidentReportMinOrderByAggregateInput
  }

  export type IncidentReportScalarWhereWithAggregatesInput = {
    AND?: IncidentReportScalarWhereWithAggregatesInput | IncidentReportScalarWhereWithAggregatesInput[]
    OR?: IncidentReportScalarWhereWithAggregatesInput[]
    NOT?: IncidentReportScalarWhereWithAggregatesInput | IncidentReportScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"IncidentReport"> | string
    reporterId?: StringWithAggregatesFilter<"IncidentReport"> | string
    agencyId?: StringWithAggregatesFilter<"IncidentReport"> | string
    description?: StringWithAggregatesFilter<"IncidentReport"> | string
    severity?: EnumSeverityLevelWithAggregatesFilter<"IncidentReport"> | $Enums.SeverityLevel
    reportedAt?: DateTimeWithAggregatesFilter<"IncidentReport"> | Date | string
  }

  export type MessageWhereInput = {
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    id?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    receiverId?: StringFilter<"Message"> | string
    content?: StringFilter<"Message"> | string
    sentAt?: DateTimeFilter<"Message"> | Date | string
    sender?: XOR<UserScalarRelationFilter, UserWhereInput>
    receiver?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type MessageOrderByWithRelationInput = {
    id?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    content?: SortOrder
    sentAt?: SortOrder
    sender?: UserOrderByWithRelationInput
    receiver?: UserOrderByWithRelationInput
  }

  export type MessageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    senderId?: StringFilter<"Message"> | string
    receiverId?: StringFilter<"Message"> | string
    content?: StringFilter<"Message"> | string
    sentAt?: DateTimeFilter<"Message"> | Date | string
    sender?: XOR<UserScalarRelationFilter, UserWhereInput>
    receiver?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type MessageOrderByWithAggregationInput = {
    id?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    content?: SortOrder
    sentAt?: SortOrder
    _count?: MessageCountOrderByAggregateInput
    _max?: MessageMaxOrderByAggregateInput
    _min?: MessageMinOrderByAggregateInput
  }

  export type MessageScalarWhereWithAggregatesInput = {
    AND?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    OR?: MessageScalarWhereWithAggregatesInput[]
    NOT?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Message"> | string
    senderId?: StringWithAggregatesFilter<"Message"> | string
    receiverId?: StringWithAggregatesFilter<"Message"> | string
    content?: StringWithAggregatesFilter<"Message"> | string
    sentAt?: DateTimeWithAggregatesFilter<"Message"> | Date | string
  }

  export type KeyContactWhereInput = {
    AND?: KeyContactWhereInput | KeyContactWhereInput[]
    OR?: KeyContactWhereInput[]
    NOT?: KeyContactWhereInput | KeyContactWhereInput[]
    id?: StringFilter<"KeyContact"> | string
    clientId?: StringFilter<"KeyContact"> | string
    name?: StringFilter<"KeyContact"> | string
    relation?: StringFilter<"KeyContact"> | string
    phone?: StringFilter<"KeyContact"> | string
    email?: StringNullableFilter<"KeyContact"> | string | null
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type KeyContactOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    relation?: SortOrder
    phone?: SortOrder
    email?: SortOrderInput | SortOrder
    client?: UserOrderByWithRelationInput
  }

  export type KeyContactWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: KeyContactWhereInput | KeyContactWhereInput[]
    OR?: KeyContactWhereInput[]
    NOT?: KeyContactWhereInput | KeyContactWhereInput[]
    clientId?: StringFilter<"KeyContact"> | string
    name?: StringFilter<"KeyContact"> | string
    relation?: StringFilter<"KeyContact"> | string
    phone?: StringFilter<"KeyContact"> | string
    email?: StringNullableFilter<"KeyContact"> | string | null
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type KeyContactOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    relation?: SortOrder
    phone?: SortOrder
    email?: SortOrderInput | SortOrder
    _count?: KeyContactCountOrderByAggregateInput
    _max?: KeyContactMaxOrderByAggregateInput
    _min?: KeyContactMinOrderByAggregateInput
  }

  export type KeyContactScalarWhereWithAggregatesInput = {
    AND?: KeyContactScalarWhereWithAggregatesInput | KeyContactScalarWhereWithAggregatesInput[]
    OR?: KeyContactScalarWhereWithAggregatesInput[]
    NOT?: KeyContactScalarWhereWithAggregatesInput | KeyContactScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"KeyContact"> | string
    clientId?: StringWithAggregatesFilter<"KeyContact"> | string
    name?: StringWithAggregatesFilter<"KeyContact"> | string
    relation?: StringWithAggregatesFilter<"KeyContact"> | string
    phone?: StringWithAggregatesFilter<"KeyContact"> | string
    email?: StringNullableWithAggregatesFilter<"KeyContact"> | string | null
  }

  export type CareOutcomeWhereInput = {
    AND?: CareOutcomeWhereInput | CareOutcomeWhereInput[]
    OR?: CareOutcomeWhereInput[]
    NOT?: CareOutcomeWhereInput | CareOutcomeWhereInput[]
    id?: StringFilter<"CareOutcome"> | string
    clientId?: StringFilter<"CareOutcome"> | string
    outcome?: StringFilter<"CareOutcome"> | string
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type CareOutcomeOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    outcome?: SortOrder
    client?: UserOrderByWithRelationInput
  }

  export type CareOutcomeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CareOutcomeWhereInput | CareOutcomeWhereInput[]
    OR?: CareOutcomeWhereInput[]
    NOT?: CareOutcomeWhereInput | CareOutcomeWhereInput[]
    clientId?: StringFilter<"CareOutcome"> | string
    outcome?: StringFilter<"CareOutcome"> | string
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type CareOutcomeOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    outcome?: SortOrder
    _count?: CareOutcomeCountOrderByAggregateInput
    _max?: CareOutcomeMaxOrderByAggregateInput
    _min?: CareOutcomeMinOrderByAggregateInput
  }

  export type CareOutcomeScalarWhereWithAggregatesInput = {
    AND?: CareOutcomeScalarWhereWithAggregatesInput | CareOutcomeScalarWhereWithAggregatesInput[]
    OR?: CareOutcomeScalarWhereWithAggregatesInput[]
    NOT?: CareOutcomeScalarWhereWithAggregatesInput | CareOutcomeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CareOutcome"> | string
    clientId?: StringWithAggregatesFilter<"CareOutcome"> | string
    outcome?: StringWithAggregatesFilter<"CareOutcome"> | string
  }

  export type CommunicationLogWhereInput = {
    AND?: CommunicationLogWhereInput | CommunicationLogWhereInput[]
    OR?: CommunicationLogWhereInput[]
    NOT?: CommunicationLogWhereInput | CommunicationLogWhereInput[]
    id?: StringFilter<"CommunicationLog"> | string
    clientId?: StringFilter<"CommunicationLog"> | string
    message?: StringFilter<"CommunicationLog"> | string
    createdAt?: DateTimeFilter<"CommunicationLog"> | Date | string
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type CommunicationLogOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    message?: SortOrder
    createdAt?: SortOrder
    client?: UserOrderByWithRelationInput
  }

  export type CommunicationLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CommunicationLogWhereInput | CommunicationLogWhereInput[]
    OR?: CommunicationLogWhereInput[]
    NOT?: CommunicationLogWhereInput | CommunicationLogWhereInput[]
    clientId?: StringFilter<"CommunicationLog"> | string
    message?: StringFilter<"CommunicationLog"> | string
    createdAt?: DateTimeFilter<"CommunicationLog"> | Date | string
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type CommunicationLogOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    message?: SortOrder
    createdAt?: SortOrder
    _count?: CommunicationLogCountOrderByAggregateInput
    _max?: CommunicationLogMaxOrderByAggregateInput
    _min?: CommunicationLogMinOrderByAggregateInput
  }

  export type CommunicationLogScalarWhereWithAggregatesInput = {
    AND?: CommunicationLogScalarWhereWithAggregatesInput | CommunicationLogScalarWhereWithAggregatesInput[]
    OR?: CommunicationLogScalarWhereWithAggregatesInput[]
    NOT?: CommunicationLogScalarWhereWithAggregatesInput | CommunicationLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CommunicationLog"> | string
    clientId?: StringWithAggregatesFilter<"CommunicationLog"> | string
    message?: StringWithAggregatesFilter<"CommunicationLog"> | string
    createdAt?: DateTimeWithAggregatesFilter<"CommunicationLog"> | Date | string
  }

  export type RiskCategoryWhereInput = {
    AND?: RiskCategoryWhereInput | RiskCategoryWhereInput[]
    OR?: RiskCategoryWhereInput[]
    NOT?: RiskCategoryWhereInput | RiskCategoryWhereInput[]
    id?: StringFilter<"RiskCategory"> | string
    agencyId?: StringFilter<"RiskCategory"> | string
    name?: StringFilter<"RiskCategory"> | string
    description?: StringNullableFilter<"RiskCategory"> | string | null
    createdAt?: DateTimeFilter<"RiskCategory"> | Date | string
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
    riskAssessments?: RiskAssessmentListRelationFilter
  }

  export type RiskCategoryOrderByWithRelationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    agency?: AgencyOrderByWithRelationInput
    riskAssessments?: RiskAssessmentOrderByRelationAggregateInput
  }

  export type RiskCategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RiskCategoryWhereInput | RiskCategoryWhereInput[]
    OR?: RiskCategoryWhereInput[]
    NOT?: RiskCategoryWhereInput | RiskCategoryWhereInput[]
    agencyId?: StringFilter<"RiskCategory"> | string
    name?: StringFilter<"RiskCategory"> | string
    description?: StringNullableFilter<"RiskCategory"> | string | null
    createdAt?: DateTimeFilter<"RiskCategory"> | Date | string
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
    riskAssessments?: RiskAssessmentListRelationFilter
  }, "id">

  export type RiskCategoryOrderByWithAggregationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: RiskCategoryCountOrderByAggregateInput
    _max?: RiskCategoryMaxOrderByAggregateInput
    _min?: RiskCategoryMinOrderByAggregateInput
  }

  export type RiskCategoryScalarWhereWithAggregatesInput = {
    AND?: RiskCategoryScalarWhereWithAggregatesInput | RiskCategoryScalarWhereWithAggregatesInput[]
    OR?: RiskCategoryScalarWhereWithAggregatesInput[]
    NOT?: RiskCategoryScalarWhereWithAggregatesInput | RiskCategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RiskCategory"> | string
    agencyId?: StringWithAggregatesFilter<"RiskCategory"> | string
    name?: StringWithAggregatesFilter<"RiskCategory"> | string
    description?: StringNullableWithAggregatesFilter<"RiskCategory"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"RiskCategory"> | Date | string
  }

  export type RiskAssessmentWhereInput = {
    AND?: RiskAssessmentWhereInput | RiskAssessmentWhereInput[]
    OR?: RiskAssessmentWhereInput[]
    NOT?: RiskAssessmentWhereInput | RiskAssessmentWhereInput[]
    id?: StringFilter<"RiskAssessment"> | string
    clientId?: StringFilter<"RiskAssessment"> | string
    riskCategoryId?: StringFilter<"RiskAssessment"> | string
    description?: StringFilter<"RiskAssessment"> | string
    affectedParties?: StringFilter<"RiskAssessment"> | string
    mitigationStrategy?: StringFilter<"RiskAssessment"> | string
    likelihood?: IntFilter<"RiskAssessment"> | number
    severity?: IntFilter<"RiskAssessment"> | number
    riskScore?: IntFilter<"RiskAssessment"> | number
    createdAt?: DateTimeFilter<"RiskAssessment"> | Date | string
    updatedAt?: DateTimeFilter<"RiskAssessment"> | Date | string
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
    riskCategory?: XOR<RiskCategoryScalarRelationFilter, RiskCategoryWhereInput>
  }

  export type RiskAssessmentOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    riskCategoryId?: SortOrder
    description?: SortOrder
    affectedParties?: SortOrder
    mitigationStrategy?: SortOrder
    likelihood?: SortOrder
    severity?: SortOrder
    riskScore?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    client?: UserOrderByWithRelationInput
    riskCategory?: RiskCategoryOrderByWithRelationInput
  }

  export type RiskAssessmentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RiskAssessmentWhereInput | RiskAssessmentWhereInput[]
    OR?: RiskAssessmentWhereInput[]
    NOT?: RiskAssessmentWhereInput | RiskAssessmentWhereInput[]
    clientId?: StringFilter<"RiskAssessment"> | string
    riskCategoryId?: StringFilter<"RiskAssessment"> | string
    description?: StringFilter<"RiskAssessment"> | string
    affectedParties?: StringFilter<"RiskAssessment"> | string
    mitigationStrategy?: StringFilter<"RiskAssessment"> | string
    likelihood?: IntFilter<"RiskAssessment"> | number
    severity?: IntFilter<"RiskAssessment"> | number
    riskScore?: IntFilter<"RiskAssessment"> | number
    createdAt?: DateTimeFilter<"RiskAssessment"> | Date | string
    updatedAt?: DateTimeFilter<"RiskAssessment"> | Date | string
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
    riskCategory?: XOR<RiskCategoryScalarRelationFilter, RiskCategoryWhereInput>
  }, "id">

  export type RiskAssessmentOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    riskCategoryId?: SortOrder
    description?: SortOrder
    affectedParties?: SortOrder
    mitigationStrategy?: SortOrder
    likelihood?: SortOrder
    severity?: SortOrder
    riskScore?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RiskAssessmentCountOrderByAggregateInput
    _avg?: RiskAssessmentAvgOrderByAggregateInput
    _max?: RiskAssessmentMaxOrderByAggregateInput
    _min?: RiskAssessmentMinOrderByAggregateInput
    _sum?: RiskAssessmentSumOrderByAggregateInput
  }

  export type RiskAssessmentScalarWhereWithAggregatesInput = {
    AND?: RiskAssessmentScalarWhereWithAggregatesInput | RiskAssessmentScalarWhereWithAggregatesInput[]
    OR?: RiskAssessmentScalarWhereWithAggregatesInput[]
    NOT?: RiskAssessmentScalarWhereWithAggregatesInput | RiskAssessmentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RiskAssessment"> | string
    clientId?: StringWithAggregatesFilter<"RiskAssessment"> | string
    riskCategoryId?: StringWithAggregatesFilter<"RiskAssessment"> | string
    description?: StringWithAggregatesFilter<"RiskAssessment"> | string
    affectedParties?: StringWithAggregatesFilter<"RiskAssessment"> | string
    mitigationStrategy?: StringWithAggregatesFilter<"RiskAssessment"> | string
    likelihood?: IntWithAggregatesFilter<"RiskAssessment"> | number
    severity?: IntWithAggregatesFilter<"RiskAssessment"> | number
    riskScore?: IntWithAggregatesFilter<"RiskAssessment"> | number
    createdAt?: DateTimeWithAggregatesFilter<"RiskAssessment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RiskAssessment"> | Date | string
  }

  export type ReminderWhereInput = {
    AND?: ReminderWhereInput | ReminderWhereInput[]
    OR?: ReminderWhereInput[]
    NOT?: ReminderWhereInput | ReminderWhereInput[]
    id?: StringFilter<"Reminder"> | string
    clientId?: StringFilter<"Reminder"> | string
    title?: StringFilter<"Reminder"> | string
    message?: StringNullableFilter<"Reminder"> | string | null
    dueDate?: DateTimeFilter<"Reminder"> | Date | string
    completed?: BoolFilter<"Reminder"> | boolean
    createdAt?: DateTimeFilter<"Reminder"> | Date | string
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ReminderOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    title?: SortOrder
    message?: SortOrderInput | SortOrder
    dueDate?: SortOrder
    completed?: SortOrder
    createdAt?: SortOrder
    client?: UserOrderByWithRelationInput
  }

  export type ReminderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReminderWhereInput | ReminderWhereInput[]
    OR?: ReminderWhereInput[]
    NOT?: ReminderWhereInput | ReminderWhereInput[]
    clientId?: StringFilter<"Reminder"> | string
    title?: StringFilter<"Reminder"> | string
    message?: StringNullableFilter<"Reminder"> | string | null
    dueDate?: DateTimeFilter<"Reminder"> | Date | string
    completed?: BoolFilter<"Reminder"> | boolean
    createdAt?: DateTimeFilter<"Reminder"> | Date | string
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type ReminderOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    title?: SortOrder
    message?: SortOrderInput | SortOrder
    dueDate?: SortOrder
    completed?: SortOrder
    createdAt?: SortOrder
    _count?: ReminderCountOrderByAggregateInput
    _max?: ReminderMaxOrderByAggregateInput
    _min?: ReminderMinOrderByAggregateInput
  }

  export type ReminderScalarWhereWithAggregatesInput = {
    AND?: ReminderScalarWhereWithAggregatesInput | ReminderScalarWhereWithAggregatesInput[]
    OR?: ReminderScalarWhereWithAggregatesInput[]
    NOT?: ReminderScalarWhereWithAggregatesInput | ReminderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Reminder"> | string
    clientId?: StringWithAggregatesFilter<"Reminder"> | string
    title?: StringWithAggregatesFilter<"Reminder"> | string
    message?: StringNullableWithAggregatesFilter<"Reminder"> | string | null
    dueDate?: DateTimeWithAggregatesFilter<"Reminder"> | Date | string
    completed?: BoolWithAggregatesFilter<"Reminder"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Reminder"> | Date | string
  }

  export type NotificationWhereInput = {
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    id?: StringFilter<"Notification"> | string
    userId?: StringFilter<"Notification"> | string
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    read?: BoolFilter<"Notification"> | boolean
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    updatedAt?: DateTimeFilter<"Notification"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type NotificationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    read?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type NotificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    userId?: StringFilter<"Notification"> | string
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    read?: BoolFilter<"Notification"> | boolean
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    updatedAt?: DateTimeFilter<"Notification"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type NotificationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    read?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: NotificationCountOrderByAggregateInput
    _max?: NotificationMaxOrderByAggregateInput
    _min?: NotificationMinOrderByAggregateInput
  }

  export type NotificationScalarWhereWithAggregatesInput = {
    AND?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    OR?: NotificationScalarWhereWithAggregatesInput[]
    NOT?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Notification"> | string
    userId?: StringWithAggregatesFilter<"Notification"> | string
    title?: StringWithAggregatesFilter<"Notification"> | string
    message?: StringWithAggregatesFilter<"Notification"> | string
    type?: EnumNotificationTypeWithAggregatesFilter<"Notification"> | $Enums.NotificationType
    read?: BoolWithAggregatesFilter<"Notification"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
  }

  export type InvitationCreateInput = {
    id?: string
    email: string
    token: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    expiresAt: Date | string
    status?: $Enums.InvitationStatus
    createdAt?: Date | string
    inviter: UserCreateNestedOneWithoutSentInvitationsInput
  }

  export type InvitationUncheckedCreateInput = {
    id?: string
    email: string
    token: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    expiresAt: Date | string
    status?: $Enums.InvitationStatus
    createdAt?: Date | string
    inviterId: string
  }

  export type InvitationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inviter?: UserUpdateOneRequiredWithoutSentInvitationsNestedInput
  }

  export type InvitationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inviterId?: StringFieldUpdateOperationsInput | string
  }

  export type InvitationCreateManyInput = {
    id?: string
    email: string
    token: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    expiresAt: Date | string
    status?: $Enums.InvitationStatus
    createdAt?: Date | string
    inviterId: string
  }

  export type InvitationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvitationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inviterId?: StringFieldUpdateOperationsInput | string
  }

  export type AgencyCreateInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutAgencyInput
    documents?: DocumentCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryCreateNestedManyWithoutAgencyInput
    Report?: ReportCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleUncheckedCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutAgencyInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkUncheckedCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeUncheckedCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryUncheckedCreateNestedManyWithoutAgencyInput
    Report?: ReportUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUpdateManyWithoutAgencyNestedInput
    Report?: ReportUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUncheckedUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUncheckedUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUncheckedUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUncheckedUpdateManyWithoutAgencyNestedInput
    Report?: ReportUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyCreateManyInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AgencyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientCareAssignmentCreateInput = {
    id?: string
    isDecisionMaker?: boolean
    assignedAt?: Date | string
    client: UserCreateNestedOneWithoutClientAssignmentsInput
    user: UserCreateNestedOneWithoutCareAssignmentsInput
  }

  export type ClientCareAssignmentUncheckedCreateInput = {
    id?: string
    clientId: string
    userId: string
    isDecisionMaker?: boolean
    assignedAt?: Date | string
  }

  export type ClientCareAssignmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    isDecisionMaker?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutClientAssignmentsNestedInput
    user?: UserUpdateOneRequiredWithoutCareAssignmentsNestedInput
  }

  export type ClientCareAssignmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isDecisionMaker?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientCareAssignmentCreateManyInput = {
    id?: string
    clientId: string
    userId: string
    isDecisionMaker?: boolean
    assignedAt?: Date | string
  }

  export type ClientCareAssignmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    isDecisionMaker?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientCareAssignmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isDecisionMaker?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommunicationPreferenceCreateInput = {
    id?: string
    email?: boolean
    sms?: boolean
    phone?: boolean
    notes?: string | null
    user: UserCreateNestedOneWithoutCommunicationPreferenceInput
  }

  export type CommunicationPreferenceUncheckedCreateInput = {
    id?: string
    userId: string
    email?: boolean
    sms?: boolean
    phone?: boolean
    notes?: string | null
  }

  export type CommunicationPreferenceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: BoolFieldUpdateOperationsInput | boolean
    sms?: BoolFieldUpdateOperationsInput | boolean
    phone?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutCommunicationPreferenceNestedInput
  }

  export type CommunicationPreferenceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    email?: BoolFieldUpdateOperationsInput | boolean
    sms?: BoolFieldUpdateOperationsInput | boolean
    phone?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommunicationPreferenceCreateManyInput = {
    id?: string
    userId: string
    email?: boolean
    sms?: boolean
    phone?: boolean
    notes?: string | null
  }

  export type CommunicationPreferenceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: BoolFieldUpdateOperationsInput | boolean
    sms?: BoolFieldUpdateOperationsInput | boolean
    phone?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommunicationPreferenceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    email?: BoolFieldUpdateOperationsInput | boolean
    sms?: BoolFieldUpdateOperationsInput | boolean
    phone?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyAccessCreateInput = {
    id?: string
    name: string
    relation: string
    phone: string
    email?: string | null
    client: UserCreateNestedOneWithoutFamilyAccessInput
  }

  export type FamilyAccessUncheckedCreateInput = {
    id?: string
    clientId: string
    name: string
    relation: string
    phone: string
    email?: string | null
  }

  export type FamilyAccessUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    relation?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    client?: UserUpdateOneRequiredWithoutFamilyAccessNestedInput
  }

  export type FamilyAccessUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    relation?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyAccessCreateManyInput = {
    id?: string
    clientId: string
    name: string
    relation: string
    phone: string
    email?: string | null
  }

  export type FamilyAccessUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    relation?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyAccessUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    relation?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MedicationDatabaseLinkCreateInput = {
    id?: string
    name: string
    isSpecialist?: boolean
    url: string
    source: string
    agency: AgencyCreateNestedOneWithoutMedicationsInput
    MedicationRecord?: MedicationRecordCreateNestedManyWithoutMedicationInput
  }

  export type MedicationDatabaseLinkUncheckedCreateInput = {
    id?: string
    name: string
    isSpecialist?: boolean
    url: string
    source: string
    agencyId: string
    MedicationRecord?: MedicationRecordUncheckedCreateNestedManyWithoutMedicationInput
  }

  export type MedicationDatabaseLinkUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isSpecialist?: BoolFieldUpdateOperationsInput | boolean
    url?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    agency?: AgencyUpdateOneRequiredWithoutMedicationsNestedInput
    MedicationRecord?: MedicationRecordUpdateManyWithoutMedicationNestedInput
  }

  export type MedicationDatabaseLinkUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isSpecialist?: BoolFieldUpdateOperationsInput | boolean
    url?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    MedicationRecord?: MedicationRecordUncheckedUpdateManyWithoutMedicationNestedInput
  }

  export type MedicationDatabaseLinkCreateManyInput = {
    id?: string
    name: string
    isSpecialist?: boolean
    url: string
    source: string
    agencyId: string
  }

  export type MedicationDatabaseLinkUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isSpecialist?: BoolFieldUpdateOperationsInput | boolean
    url?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
  }

  export type MedicationDatabaseLinkUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isSpecialist?: BoolFieldUpdateOperationsInput | boolean
    url?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
  }

  export type VisitTypeCreateInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agency: AgencyCreateNestedOneWithoutVisitTypesInput
    schedules?: ScheduleCreateNestedManyWithoutVisitTypeInput
  }

  export type VisitTypeUncheckedCreateInput = {
    id?: string
    agencyId: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    schedules?: ScheduleUncheckedCreateNestedManyWithoutVisitTypeInput
  }

  export type VisitTypeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: AgencyUpdateOneRequiredWithoutVisitTypesNestedInput
    schedules?: ScheduleUpdateManyWithoutVisitTypeNestedInput
  }

  export type VisitTypeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    schedules?: ScheduleUncheckedUpdateManyWithoutVisitTypeNestedInput
  }

  export type VisitTypeCreateManyInput = {
    id?: string
    agencyId: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VisitTypeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VisitTypeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScheduleCreateInput = {
    id?: string
    date: Date | string
    startTime: string
    endTime: string
    status?: string
    type?: $Enums.ScheduleType
    notes?: string | null
    chargeRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    visitType?: VisitTypeCreateNestedOneWithoutSchedulesInput
    agency: AgencyCreateNestedOneWithoutSchedulesInput
    client: UserCreateNestedOneWithoutClientSchedulesInput
    user: UserCreateNestedOneWithoutCareWorkerSchedulesInput
  }

  export type ScheduleUncheckedCreateInput = {
    id?: string
    agencyId: string
    clientId: string
    userId: string
    date: Date | string
    startTime: string
    endTime: string
    status?: string
    type?: $Enums.ScheduleType
    notes?: string | null
    chargeRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    visitTypeId?: string | null
  }

  export type ScheduleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    type?: EnumScheduleTypeFieldUpdateOperationsInput | $Enums.ScheduleType
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visitType?: VisitTypeUpdateOneWithoutSchedulesNestedInput
    agency?: AgencyUpdateOneRequiredWithoutSchedulesNestedInput
    client?: UserUpdateOneRequiredWithoutClientSchedulesNestedInput
    user?: UserUpdateOneRequiredWithoutCareWorkerSchedulesNestedInput
  }

  export type ScheduleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    type?: EnumScheduleTypeFieldUpdateOperationsInput | $Enums.ScheduleType
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visitTypeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ScheduleCreateManyInput = {
    id?: string
    agencyId: string
    clientId: string
    userId: string
    date: Date | string
    startTime: string
    endTime: string
    status?: string
    type?: $Enums.ScheduleType
    notes?: string | null
    chargeRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    visitTypeId?: string | null
  }

  export type ScheduleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    type?: EnumScheduleTypeFieldUpdateOperationsInput | $Enums.ScheduleType
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScheduleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    type?: EnumScheduleTypeFieldUpdateOperationsInput | $Enums.ScheduleType
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visitTypeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReportCreateInput = {
    id?: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    tasksCompleted?: ReportTaskCreateNestedManyWithoutReportInput
    alerts?: ReportAlertCreateNestedManyWithoutReportInput
    bodyMapObservations?: BodyMapObservationCreateNestedManyWithoutReportInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutReportInput
    editHistory?: ReportEditCreateNestedManyWithoutReportInput
    client: UserCreateNestedOneWithoutClientReportsInput
    caregiver: UserCreateNestedOneWithoutCareReportsInput
    agency: AgencyCreateNestedOneWithoutReportInput
  }

  export type ReportUncheckedCreateInput = {
    id?: string
    clientId: string
    agencyId: string
    userId: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    tasksCompleted?: ReportTaskUncheckedCreateNestedManyWithoutReportInput
    alerts?: ReportAlertUncheckedCreateNestedManyWithoutReportInput
    bodyMapObservations?: BodyMapObservationUncheckedCreateNestedManyWithoutReportInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutReportInput
    editHistory?: ReportEditUncheckedCreateNestedManyWithoutReportInput
  }

  export type ReportUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    tasksCompleted?: ReportTaskUpdateManyWithoutReportNestedInput
    alerts?: ReportAlertUpdateManyWithoutReportNestedInput
    bodyMapObservations?: BodyMapObservationUpdateManyWithoutReportNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutReportNestedInput
    editHistory?: ReportEditUpdateManyWithoutReportNestedInput
    client?: UserUpdateOneRequiredWithoutClientReportsNestedInput
    caregiver?: UserUpdateOneRequiredWithoutCareReportsNestedInput
    agency?: AgencyUpdateOneRequiredWithoutReportNestedInput
  }

  export type ReportUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    tasksCompleted?: ReportTaskUncheckedUpdateManyWithoutReportNestedInput
    alerts?: ReportAlertUncheckedUpdateManyWithoutReportNestedInput
    bodyMapObservations?: BodyMapObservationUncheckedUpdateManyWithoutReportNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutReportNestedInput
    editHistory?: ReportEditUncheckedUpdateManyWithoutReportNestedInput
  }

  export type ReportCreateManyInput = {
    id?: string
    clientId: string
    agencyId: string
    userId: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
  }

  export type ReportUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReportUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReportTaskCreateInput = {
    id?: string
    taskName: string
    completed?: boolean
    notes?: string | null
    taskIcon?: string | null
    taskType?: string | null
    completedAt?: Date | string | null
    report: ReportCreateNestedOneWithoutTasksCompletedInput
  }

  export type ReportTaskUncheckedCreateInput = {
    id?: string
    reportId: string
    taskName: string
    completed?: boolean
    notes?: string | null
    taskIcon?: string | null
    taskType?: string | null
    completedAt?: Date | string | null
  }

  export type ReportTaskUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    taskName?: StringFieldUpdateOperationsInput | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    taskIcon?: NullableStringFieldUpdateOperationsInput | string | null
    taskType?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    report?: ReportUpdateOneRequiredWithoutTasksCompletedNestedInput
  }

  export type ReportTaskUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reportId?: StringFieldUpdateOperationsInput | string
    taskName?: StringFieldUpdateOperationsInput | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    taskIcon?: NullableStringFieldUpdateOperationsInput | string | null
    taskType?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReportTaskCreateManyInput = {
    id?: string
    reportId: string
    taskName: string
    completed?: boolean
    notes?: string | null
    taskIcon?: string | null
    taskType?: string | null
    completedAt?: Date | string | null
  }

  export type ReportTaskUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    taskName?: StringFieldUpdateOperationsInput | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    taskIcon?: NullableStringFieldUpdateOperationsInput | string | null
    taskType?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReportTaskUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    reportId?: StringFieldUpdateOperationsInput | string
    taskName?: StringFieldUpdateOperationsInput | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    taskIcon?: NullableStringFieldUpdateOperationsInput | string | null
    taskType?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReportAlertCreateInput = {
    id?: string
    type: $Enums.AlertType
    message: string
    severity: $Enums.AlertSeverity
    createdAt?: Date | string
    resolved?: boolean
    resolvedAt?: Date | string | null
    resolvedBy?: string | null
    report: ReportCreateNestedOneWithoutAlertsInput
  }

  export type ReportAlertUncheckedCreateInput = {
    id?: string
    reportId: string
    type: $Enums.AlertType
    message: string
    severity: $Enums.AlertSeverity
    createdAt?: Date | string
    resolved?: boolean
    resolvedAt?: Date | string | null
    resolvedBy?: string | null
  }

  export type ReportAlertUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAlertTypeFieldUpdateOperationsInput | $Enums.AlertType
    message?: StringFieldUpdateOperationsInput | string
    severity?: EnumAlertSeverityFieldUpdateOperationsInput | $Enums.AlertSeverity
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    resolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    report?: ReportUpdateOneRequiredWithoutAlertsNestedInput
  }

  export type ReportAlertUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reportId?: StringFieldUpdateOperationsInput | string
    type?: EnumAlertTypeFieldUpdateOperationsInput | $Enums.AlertType
    message?: StringFieldUpdateOperationsInput | string
    severity?: EnumAlertSeverityFieldUpdateOperationsInput | $Enums.AlertSeverity
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    resolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReportAlertCreateManyInput = {
    id?: string
    reportId: string
    type: $Enums.AlertType
    message: string
    severity: $Enums.AlertSeverity
    createdAt?: Date | string
    resolved?: boolean
    resolvedAt?: Date | string | null
    resolvedBy?: string | null
  }

  export type ReportAlertUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAlertTypeFieldUpdateOperationsInput | $Enums.AlertType
    message?: StringFieldUpdateOperationsInput | string
    severity?: EnumAlertSeverityFieldUpdateOperationsInput | $Enums.AlertSeverity
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    resolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReportAlertUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    reportId?: StringFieldUpdateOperationsInput | string
    type?: EnumAlertTypeFieldUpdateOperationsInput | $Enums.AlertType
    message?: StringFieldUpdateOperationsInput | string
    severity?: EnumAlertSeverityFieldUpdateOperationsInput | $Enums.AlertSeverity
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    resolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BodyMapObservationCreateInput = {
    id?: string
    bodyPart: string
    condition: string
    notes?: string | null
    createdAt?: Date | string
    report: ReportCreateNestedOneWithoutBodyMapObservationsInput
  }

  export type BodyMapObservationUncheckedCreateInput = {
    id?: string
    reportId: string
    bodyPart: string
    condition: string
    notes?: string | null
    createdAt?: Date | string
  }

  export type BodyMapObservationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    bodyPart?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    report?: ReportUpdateOneRequiredWithoutBodyMapObservationsNestedInput
  }

  export type BodyMapObservationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reportId?: StringFieldUpdateOperationsInput | string
    bodyPart?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BodyMapObservationCreateManyInput = {
    id?: string
    reportId: string
    bodyPart: string
    condition: string
    notes?: string | null
    createdAt?: Date | string
  }

  export type BodyMapObservationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    bodyPart?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BodyMapObservationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    reportId?: StringFieldUpdateOperationsInput | string
    bodyPart?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReportEditCreateInput = {
    id?: string
    editedAt?: Date | string
    reason: string
    changesJson: string
    report: ReportCreateNestedOneWithoutEditHistoryInput
    editor: UserCreateNestedOneWithoutReportEditsInput
  }

  export type ReportEditUncheckedCreateInput = {
    id?: string
    reportId: string
    editedBy: string
    editedAt?: Date | string
    reason: string
    changesJson: string
  }

  export type ReportEditUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    editedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: StringFieldUpdateOperationsInput | string
    changesJson?: StringFieldUpdateOperationsInput | string
    report?: ReportUpdateOneRequiredWithoutEditHistoryNestedInput
    editor?: UserUpdateOneRequiredWithoutReportEditsNestedInput
  }

  export type ReportEditUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reportId?: StringFieldUpdateOperationsInput | string
    editedBy?: StringFieldUpdateOperationsInput | string
    editedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: StringFieldUpdateOperationsInput | string
    changesJson?: StringFieldUpdateOperationsInput | string
  }

  export type ReportEditCreateManyInput = {
    id?: string
    reportId: string
    editedBy: string
    editedAt?: Date | string
    reason: string
    changesJson: string
  }

  export type ReportEditUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    editedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: StringFieldUpdateOperationsInput | string
    changesJson?: StringFieldUpdateOperationsInput | string
  }

  export type ReportEditUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    reportId?: StringFieldUpdateOperationsInput | string
    editedBy?: StringFieldUpdateOperationsInput | string
    editedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: StringFieldUpdateOperationsInput | string
    changesJson?: StringFieldUpdateOperationsInput | string
  }

  export type MedicationRecordCreateInput = {
    id?: string
    dosage: string
    frequency: string
    startDate: Date | string
    endDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
    medication: MedicationDatabaseLinkCreateNestedOneWithoutMedicationRecordInput
    client: UserCreateNestedOneWithoutClientMedicationsInput
    user: UserCreateNestedOneWithoutCareWorkerMedicationsInput
    User: UserCreateNestedOneWithoutMedicationRecordsInput
    administrationRecords?: MedicationAdministrationCreateNestedManyWithoutMedicationRecordInput
  }

  export type MedicationRecordUncheckedCreateInput = {
    id?: string
    medicationId: string
    clientId: string
    userId: string
    dosage: string
    frequency: string
    startDate: Date | string
    endDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
    administrationRecords?: MedicationAdministrationUncheckedCreateNestedManyWithoutMedicationRecordInput
  }

  export type MedicationRecordUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
    medication?: MedicationDatabaseLinkUpdateOneRequiredWithoutMedicationRecordNestedInput
    client?: UserUpdateOneRequiredWithoutClientMedicationsNestedInput
    user?: UserUpdateOneRequiredWithoutCareWorkerMedicationsNestedInput
    User?: UserUpdateOneRequiredWithoutMedicationRecordsNestedInput
    administrationRecords?: MedicationAdministrationUpdateManyWithoutMedicationRecordNestedInput
  }

  export type MedicationRecordUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    medicationId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
    administrationRecords?: MedicationAdministrationUncheckedUpdateManyWithoutMedicationRecordNestedInput
  }

  export type MedicationRecordCreateManyInput = {
    id?: string
    medicationId: string
    clientId: string
    userId: string
    dosage: string
    frequency: string
    startDate: Date | string
    endDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
  }

  export type MedicationRecordUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MedicationRecordUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    medicationId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MedicationAdministrationCreateInput = {
    id?: string
    administeredAt: Date | string
    doseType: $Enums.DoseType
    doseTaken?: boolean
    notes?: string | null
    createdAt?: Date | string
    medicationRecord: MedicationRecordCreateNestedOneWithoutAdministrationRecordsInput
    administeredBy: UserCreateNestedOneWithoutMedicationAdministrationsInput
    report?: ReportCreateNestedOneWithoutMedicationAdministrationsInput
  }

  export type MedicationAdministrationUncheckedCreateInput = {
    id?: string
    medicationRecordId: string
    administeredById: string
    administeredAt: Date | string
    doseType: $Enums.DoseType
    doseTaken?: boolean
    notes?: string | null
    createdAt?: Date | string
    reportId?: string | null
  }

  export type MedicationAdministrationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    administeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doseType?: EnumDoseTypeFieldUpdateOperationsInput | $Enums.DoseType
    doseTaken?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    medicationRecord?: MedicationRecordUpdateOneRequiredWithoutAdministrationRecordsNestedInput
    administeredBy?: UserUpdateOneRequiredWithoutMedicationAdministrationsNestedInput
    report?: ReportUpdateOneWithoutMedicationAdministrationsNestedInput
  }

  export type MedicationAdministrationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    medicationRecordId?: StringFieldUpdateOperationsInput | string
    administeredById?: StringFieldUpdateOperationsInput | string
    administeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doseType?: EnumDoseTypeFieldUpdateOperationsInput | $Enums.DoseType
    doseTaken?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reportId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MedicationAdministrationCreateManyInput = {
    id?: string
    medicationRecordId: string
    administeredById: string
    administeredAt: Date | string
    doseType: $Enums.DoseType
    doseTaken?: boolean
    notes?: string | null
    createdAt?: Date | string
    reportId?: string | null
  }

  export type MedicationAdministrationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    administeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doseType?: EnumDoseTypeFieldUpdateOperationsInput | $Enums.DoseType
    doseTaken?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MedicationAdministrationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    medicationRecordId?: StringFieldUpdateOperationsInput | string
    administeredById?: StringFieldUpdateOperationsInput | string
    administeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doseType?: EnumDoseTypeFieldUpdateOperationsInput | $Enums.DoseType
    doseTaken?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reportId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvoiceCreateInput = {
    id?: string
    amount: number
    description: string
    issuedAt?: Date | string
    dueDate: Date | string
    status: $Enums.InvoiceStatus
    agency: AgencyCreateNestedOneWithoutInvoicesInput
    client?: UserCreateNestedOneWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateInput = {
    id?: string
    agencyId: string
    clientId?: string | null
    amount: number
    description: string
    issuedAt?: Date | string
    dueDate: Date | string
    status: $Enums.InvoiceStatus
  }

  export type InvoiceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    agency?: AgencyUpdateOneRequiredWithoutInvoicesNestedInput
    client?: UserUpdateOneWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: FloatFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
  }

  export type InvoiceCreateManyInput = {
    id?: string
    agencyId: string
    clientId?: string | null
    amount: number
    description: string
    issuedAt?: Date | string
    dueDate: Date | string
    status: $Enums.InvoiceStatus
  }

  export type InvoiceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
  }

  export type InvoiceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: FloatFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
  }

  export type MileageRecordCreateInput = {
    id?: string
    date: Date | string
    startMileage: number
    endMileage: number
    totalMiles: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agency: AgencyCreateNestedOneWithoutMileageRecordsInput
    client: UserCreateNestedOneWithoutClientMileageInput
    user: UserCreateNestedOneWithoutCareWorkerMileageInput
    User: UserCreateNestedOneWithoutMileageRecordsInput
  }

  export type MileageRecordUncheckedCreateInput = {
    id?: string
    agencyId: string
    clientId: string
    userId: string
    date: Date | string
    startMileage: number
    endMileage: number
    totalMiles: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MileageRecordUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startMileage?: FloatFieldUpdateOperationsInput | number
    endMileage?: FloatFieldUpdateOperationsInput | number
    totalMiles?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: AgencyUpdateOneRequiredWithoutMileageRecordsNestedInput
    client?: UserUpdateOneRequiredWithoutClientMileageNestedInput
    user?: UserUpdateOneRequiredWithoutCareWorkerMileageNestedInput
    User?: UserUpdateOneRequiredWithoutMileageRecordsNestedInput
  }

  export type MileageRecordUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startMileage?: FloatFieldUpdateOperationsInput | number
    endMileage?: FloatFieldUpdateOperationsInput | number
    totalMiles?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MileageRecordCreateManyInput = {
    id?: string
    agencyId: string
    clientId: string
    userId: string
    date: Date | string
    startMileage: number
    endMileage: number
    totalMiles: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MileageRecordUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startMileage?: FloatFieldUpdateOperationsInput | number
    endMileage?: FloatFieldUpdateOperationsInput | number
    totalMiles?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MileageRecordUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startMileage?: FloatFieldUpdateOperationsInput | number
    endMileage?: FloatFieldUpdateOperationsInput | number
    totalMiles?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DocumentCreateInput = {
    id?: string
    title: string
    fileUrl: string
    uploadedAt?: Date | string
    user?: UserCreateNestedOneWithoutDocumentsInput
    client?: UserCreateNestedOneWithoutDocumentInput
    agency?: AgencyCreateNestedOneWithoutDocumentsInput
  }

  export type DocumentUncheckedCreateInput = {
    id?: string
    title: string
    fileUrl: string
    uploadedAt?: Date | string
    userId?: string | null
    clientId?: string | null
    agencyId?: string | null
  }

  export type DocumentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutDocumentsNestedInput
    client?: UserUpdateOneWithoutDocumentNestedInput
    agency?: AgencyUpdateOneWithoutDocumentsNestedInput
  }

  export type DocumentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DocumentCreateManyInput = {
    id?: string
    title: string
    fileUrl: string
    uploadedAt?: Date | string
    userId?: string | null
    clientId?: string | null
    agencyId?: string | null
  }

  export type DocumentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DocumentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProfileCreateInput = {
    id?: string
    phone?: string | null
    avatarUrl?: string | null
    address?: string | null
    user: UserCreateNestedOneWithoutProfileInput
  }

  export type ProfileUncheckedCreateInput = {
    id?: string
    userId: string
    phone?: string | null
    avatarUrl?: string | null
    address?: string | null
  }

  export type ProfileUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutProfileNestedInput
  }

  export type ProfileUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProfileCreateManyInput = {
    id?: string
    userId: string
    phone?: string | null
    avatarUrl?: string | null
    address?: string | null
  }

  export type ProfileUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProfileUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IncidentReportCreateInput = {
    id?: string
    description: string
    severity: $Enums.SeverityLevel
    reportedAt?: Date | string
    reporter: UserCreateNestedOneWithoutIncidentReportsInput
    agency: AgencyCreateNestedOneWithoutIncidentReportsInput
  }

  export type IncidentReportUncheckedCreateInput = {
    id?: string
    reporterId: string
    agencyId: string
    description: string
    severity: $Enums.SeverityLevel
    reportedAt?: Date | string
  }

  export type IncidentReportUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    severity?: EnumSeverityLevelFieldUpdateOperationsInput | $Enums.SeverityLevel
    reportedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reporter?: UserUpdateOneRequiredWithoutIncidentReportsNestedInput
    agency?: AgencyUpdateOneRequiredWithoutIncidentReportsNestedInput
  }

  export type IncidentReportUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reporterId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    severity?: EnumSeverityLevelFieldUpdateOperationsInput | $Enums.SeverityLevel
    reportedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IncidentReportCreateManyInput = {
    id?: string
    reporterId: string
    agencyId: string
    description: string
    severity: $Enums.SeverityLevel
    reportedAt?: Date | string
  }

  export type IncidentReportUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    severity?: EnumSeverityLevelFieldUpdateOperationsInput | $Enums.SeverityLevel
    reportedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IncidentReportUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    reporterId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    severity?: EnumSeverityLevelFieldUpdateOperationsInput | $Enums.SeverityLevel
    reportedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageCreateInput = {
    id?: string
    content: string
    sentAt?: Date | string
    sender: UserCreateNestedOneWithoutSentMessagesInput
    receiver: UserCreateNestedOneWithoutReceivedMessagesInput
  }

  export type MessageUncheckedCreateInput = {
    id?: string
    senderId: string
    receiverId: string
    content: string
    sentAt?: Date | string
  }

  export type MessageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sender?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
    receiver?: UserUpdateOneRequiredWithoutReceivedMessagesNestedInput
  }

  export type MessageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageCreateManyInput = {
    id?: string
    senderId: string
    receiverId: string
    content: string
    sentAt?: Date | string
  }

  export type MessageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type KeyContactCreateInput = {
    id?: string
    name: string
    relation: string
    phone: string
    email?: string | null
    client: UserCreateNestedOneWithoutKeyContactsInput
  }

  export type KeyContactUncheckedCreateInput = {
    id?: string
    clientId: string
    name: string
    relation: string
    phone: string
    email?: string | null
  }

  export type KeyContactUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    relation?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    client?: UserUpdateOneRequiredWithoutKeyContactsNestedInput
  }

  export type KeyContactUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    relation?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type KeyContactCreateManyInput = {
    id?: string
    clientId: string
    name: string
    relation: string
    phone: string
    email?: string | null
  }

  export type KeyContactUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    relation?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type KeyContactUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    relation?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CareOutcomeCreateInput = {
    id?: string
    outcome: string
    client: UserCreateNestedOneWithoutCareOutcomesInput
  }

  export type CareOutcomeUncheckedCreateInput = {
    id?: string
    clientId: string
    outcome: string
  }

  export type CareOutcomeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
    client?: UserUpdateOneRequiredWithoutCareOutcomesNestedInput
  }

  export type CareOutcomeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
  }

  export type CareOutcomeCreateManyInput = {
    id?: string
    clientId: string
    outcome: string
  }

  export type CareOutcomeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
  }

  export type CareOutcomeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
  }

  export type CommunicationLogCreateInput = {
    id?: string
    message: string
    createdAt?: Date | string
    client: UserCreateNestedOneWithoutCommunicationLogsInput
  }

  export type CommunicationLogUncheckedCreateInput = {
    id?: string
    clientId: string
    message: string
    createdAt?: Date | string
  }

  export type CommunicationLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutCommunicationLogsNestedInput
  }

  export type CommunicationLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommunicationLogCreateManyInput = {
    id?: string
    clientId: string
    message: string
    createdAt?: Date | string
  }

  export type CommunicationLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommunicationLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiskCategoryCreateInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    agency: AgencyCreateNestedOneWithoutRiskCategoriesInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutRiskCategoryInput
  }

  export type RiskCategoryUncheckedCreateInput = {
    id?: string
    agencyId: string
    name: string
    description?: string | null
    createdAt?: Date | string
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutRiskCategoryInput
  }

  export type RiskCategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: AgencyUpdateOneRequiredWithoutRiskCategoriesNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutRiskCategoryNestedInput
  }

  export type RiskCategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutRiskCategoryNestedInput
  }

  export type RiskCategoryCreateManyInput = {
    id?: string
    agencyId: string
    name: string
    description?: string | null
    createdAt?: Date | string
  }

  export type RiskCategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiskCategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiskAssessmentCreateInput = {
    id?: string
    description: string
    affectedParties: string
    mitigationStrategy: string
    likelihood: number
    severity: number
    riskScore: number
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutRiskAssessmentsInput
    riskCategory: RiskCategoryCreateNestedOneWithoutRiskAssessmentsInput
  }

  export type RiskAssessmentUncheckedCreateInput = {
    id?: string
    clientId: string
    riskCategoryId: string
    description: string
    affectedParties: string
    mitigationStrategy: string
    likelihood: number
    severity: number
    riskScore: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RiskAssessmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    affectedParties?: StringFieldUpdateOperationsInput | string
    mitigationStrategy?: StringFieldUpdateOperationsInput | string
    likelihood?: IntFieldUpdateOperationsInput | number
    severity?: IntFieldUpdateOperationsInput | number
    riskScore?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutRiskAssessmentsNestedInput
    riskCategory?: RiskCategoryUpdateOneRequiredWithoutRiskAssessmentsNestedInput
  }

  export type RiskAssessmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    riskCategoryId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    affectedParties?: StringFieldUpdateOperationsInput | string
    mitigationStrategy?: StringFieldUpdateOperationsInput | string
    likelihood?: IntFieldUpdateOperationsInput | number
    severity?: IntFieldUpdateOperationsInput | number
    riskScore?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiskAssessmentCreateManyInput = {
    id?: string
    clientId: string
    riskCategoryId: string
    description: string
    affectedParties: string
    mitigationStrategy: string
    likelihood: number
    severity: number
    riskScore: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RiskAssessmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    affectedParties?: StringFieldUpdateOperationsInput | string
    mitigationStrategy?: StringFieldUpdateOperationsInput | string
    likelihood?: IntFieldUpdateOperationsInput | number
    severity?: IntFieldUpdateOperationsInput | number
    riskScore?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiskAssessmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    riskCategoryId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    affectedParties?: StringFieldUpdateOperationsInput | string
    mitigationStrategy?: StringFieldUpdateOperationsInput | string
    likelihood?: IntFieldUpdateOperationsInput | number
    severity?: IntFieldUpdateOperationsInput | number
    riskScore?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReminderCreateInput = {
    id?: string
    title: string
    message?: string | null
    dueDate: Date | string
    completed?: boolean
    createdAt?: Date | string
    client: UserCreateNestedOneWithoutRemindersInput
  }

  export type ReminderUncheckedCreateInput = {
    id?: string
    clientId: string
    title: string
    message?: string | null
    dueDate: Date | string
    completed?: boolean
    createdAt?: Date | string
  }

  export type ReminderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutRemindersNestedInput
  }

  export type ReminderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReminderCreateManyInput = {
    id?: string
    clientId: string
    title: string
    message?: string | null
    dueDate: Date | string
    completed?: boolean
    createdAt?: Date | string
  }

  export type ReminderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReminderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateInput = {
    id?: string
    title: string
    message: string
    type: $Enums.NotificationType
    read?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutNotificationInput
  }

  export type NotificationUncheckedCreateInput = {
    id?: string
    userId: string
    title: string
    message: string
    type: $Enums.NotificationType
    read?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    read?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutNotificationNestedInput
  }

  export type NotificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    read?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateManyInput = {
    id?: string
    userId: string
    title: string
    message: string
    type: $Enums.NotificationType
    read?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    read?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    read?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type EnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type EnumSubRoleNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.SubRole | EnumSubRoleFieldRefInput<$PrismaModel> | null
    in?: $Enums.SubRole[] | ListEnumSubRoleFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SubRole[] | ListEnumSubRoleFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSubRoleNullableFilter<$PrismaModel> | $Enums.SubRole | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type EnumInvitationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.InvitationStatus | EnumInvitationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvitationStatus[] | ListEnumInvitationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvitationStatus[] | ListEnumInvitationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvitationStatusFilter<$PrismaModel> | $Enums.InvitationStatus
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type InvitationCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    token?: SortOrder
    role?: SortOrder
    subRole?: SortOrder
    expiresAt?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    inviterId?: SortOrder
  }

  export type InvitationMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    token?: SortOrder
    role?: SortOrder
    subRole?: SortOrder
    expiresAt?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    inviterId?: SortOrder
  }

  export type InvitationMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    token?: SortOrder
    role?: SortOrder
    subRole?: SortOrder
    expiresAt?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    inviterId?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type EnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type EnumSubRoleNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubRole | EnumSubRoleFieldRefInput<$PrismaModel> | null
    in?: $Enums.SubRole[] | ListEnumSubRoleFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SubRole[] | ListEnumSubRoleFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSubRoleNullableWithAggregatesFilter<$PrismaModel> | $Enums.SubRole | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumSubRoleNullableFilter<$PrismaModel>
    _max?: NestedEnumSubRoleNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumInvitationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InvitationStatus | EnumInvitationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvitationStatus[] | ListEnumInvitationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvitationStatus[] | ListEnumInvitationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvitationStatusWithAggregatesFilter<$PrismaModel> | $Enums.InvitationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInvitationStatusFilter<$PrismaModel>
    _max?: NestedEnumInvitationStatusFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type ScheduleListRelationFilter = {
    every?: ScheduleWhereInput
    some?: ScheduleWhereInput
    none?: ScheduleWhereInput
  }

  export type InvoiceListRelationFilter = {
    every?: InvoiceWhereInput
    some?: InvoiceWhereInput
    none?: InvoiceWhereInput
  }

  export type MileageRecordListRelationFilter = {
    every?: MileageRecordWhereInput
    some?: MileageRecordWhereInput
    none?: MileageRecordWhereInput
  }

  export type DocumentListRelationFilter = {
    every?: DocumentWhereInput
    some?: DocumentWhereInput
    none?: DocumentWhereInput
  }

  export type IncidentReportListRelationFilter = {
    every?: IncidentReportWhereInput
    some?: IncidentReportWhereInput
    none?: IncidentReportWhereInput
  }

  export type MedicationDatabaseLinkListRelationFilter = {
    every?: MedicationDatabaseLinkWhereInput
    some?: MedicationDatabaseLinkWhereInput
    none?: MedicationDatabaseLinkWhereInput
  }

  export type VisitTypeListRelationFilter = {
    every?: VisitTypeWhereInput
    some?: VisitTypeWhereInput
    none?: VisitTypeWhereInput
  }

  export type RiskCategoryListRelationFilter = {
    every?: RiskCategoryWhereInput
    some?: RiskCategoryWhereInput
    none?: RiskCategoryWhereInput
  }

  export type ReportListRelationFilter = {
    every?: ReportWhereInput
    some?: ReportWhereInput
    none?: ReportWhereInput
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ScheduleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InvoiceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MileageRecordOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DocumentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type IncidentReportOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MedicationDatabaseLinkOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VisitTypeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RiskCategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReportOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AgencyCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    isActive?: SortOrder
    isSuspended?: SortOrder
    hasScheduleV2?: SortOrder
    hasEMAR?: SortOrder
    hasFinance?: SortOrder
    isWeek1And2ScheduleEnabled?: SortOrder
    hasPoliciesAndProcedures?: SortOrder
    isTestAccount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AgencyMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    isActive?: SortOrder
    isSuspended?: SortOrder
    hasScheduleV2?: SortOrder
    hasEMAR?: SortOrder
    hasFinance?: SortOrder
    isWeek1And2ScheduleEnabled?: SortOrder
    hasPoliciesAndProcedures?: SortOrder
    isTestAccount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AgencyMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    isActive?: SortOrder
    isSuspended?: SortOrder
    hasScheduleV2?: SortOrder
    hasEMAR?: SortOrder
    hasFinance?: SortOrder
    isWeek1And2ScheduleEnabled?: SortOrder
    hasPoliciesAndProcedures?: SortOrder
    isTestAccount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type ClientCareAssignmentClientIdUserIdCompoundUniqueInput = {
    clientId: string
    userId: string
  }

  export type ClientCareAssignmentCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    isDecisionMaker?: SortOrder
    assignedAt?: SortOrder
  }

  export type ClientCareAssignmentMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    isDecisionMaker?: SortOrder
    assignedAt?: SortOrder
  }

  export type ClientCareAssignmentMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    isDecisionMaker?: SortOrder
    assignedAt?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type InvitationListRelationFilter = {
    every?: InvitationWhereInput
    some?: InvitationWhereInput
    none?: InvitationWhereInput
  }

  export type AgencyNullableScalarRelationFilter = {
    is?: AgencyWhereInput | null
    isNot?: AgencyWhereInput | null
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type CommunicationPreferenceNullableScalarRelationFilter = {
    is?: CommunicationPreferenceWhereInput | null
    isNot?: CommunicationPreferenceWhereInput | null
  }

  export type ClientCareAssignmentListRelationFilter = {
    every?: ClientCareAssignmentWhereInput
    some?: ClientCareAssignmentWhereInput
    none?: ClientCareAssignmentWhereInput
  }

  export type MedicationRecordListRelationFilter = {
    every?: MedicationRecordWhereInput
    some?: MedicationRecordWhereInput
    none?: MedicationRecordWhereInput
  }

  export type ProfileNullableScalarRelationFilter = {
    is?: ProfileWhereInput | null
    isNot?: ProfileWhereInput | null
  }

  export type MessageListRelationFilter = {
    every?: MessageWhereInput
    some?: MessageWhereInput
    none?: MessageWhereInput
  }

  export type KeyContactListRelationFilter = {
    every?: KeyContactWhereInput
    some?: KeyContactWhereInput
    none?: KeyContactWhereInput
  }

  export type CareOutcomeListRelationFilter = {
    every?: CareOutcomeWhereInput
    some?: CareOutcomeWhereInput
    none?: CareOutcomeWhereInput
  }

  export type NotificationListRelationFilter = {
    every?: NotificationWhereInput
    some?: NotificationWhereInput
    none?: NotificationWhereInput
  }

  export type RiskAssessmentListRelationFilter = {
    every?: RiskAssessmentWhereInput
    some?: RiskAssessmentWhereInput
    none?: RiskAssessmentWhereInput
  }

  export type FamilyAccessListRelationFilter = {
    every?: FamilyAccessWhereInput
    some?: FamilyAccessWhereInput
    none?: FamilyAccessWhereInput
  }

  export type CommunicationLogListRelationFilter = {
    every?: CommunicationLogWhereInput
    some?: CommunicationLogWhereInput
    none?: CommunicationLogWhereInput
  }

  export type ReminderListRelationFilter = {
    every?: ReminderWhereInput
    some?: ReminderWhereInput
    none?: ReminderWhereInput
  }

  export type MedicationAdministrationListRelationFilter = {
    every?: MedicationAdministrationWhereInput
    some?: MedicationAdministrationWhereInput
    none?: MedicationAdministrationWhereInput
  }

  export type ReportEditListRelationFilter = {
    every?: ReportEditWhereInput
    some?: ReportEditWhereInput
    none?: ReportEditWhereInput
  }

  export type InvitationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClientCareAssignmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MedicationRecordOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MessageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type KeyContactOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CareOutcomeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RiskAssessmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FamilyAccessOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CommunicationLogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReminderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MedicationAdministrationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReportEditOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    cognitoId?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    subRole?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrder
    invitedById?: SortOrder
    title?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrder
    townOrCity?: SortOrder
    county?: SortOrder
    postalCode?: SortOrder
    propertyAccess?: SortOrder
    phoneNumber?: SortOrder
    nhsNumber?: SortOrder
    dnraOrder?: SortOrder
    chargeRate?: SortOrder
    mobility?: SortOrder
    likesDislikes?: SortOrder
    dateOfBirth?: SortOrder
    languages?: SortOrder
    allergies?: SortOrder
    interests?: SortOrder
    history?: SortOrder
    preferredName?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    chargeRate?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    cognitoId?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    subRole?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrder
    invitedById?: SortOrder
    title?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrder
    townOrCity?: SortOrder
    county?: SortOrder
    postalCode?: SortOrder
    propertyAccess?: SortOrder
    phoneNumber?: SortOrder
    nhsNumber?: SortOrder
    dnraOrder?: SortOrder
    chargeRate?: SortOrder
    mobility?: SortOrder
    likesDislikes?: SortOrder
    dateOfBirth?: SortOrder
    languages?: SortOrder
    allergies?: SortOrder
    interests?: SortOrder
    history?: SortOrder
    preferredName?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    cognitoId?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    subRole?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrder
    invitedById?: SortOrder
    title?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrder
    townOrCity?: SortOrder
    county?: SortOrder
    postalCode?: SortOrder
    propertyAccess?: SortOrder
    phoneNumber?: SortOrder
    nhsNumber?: SortOrder
    dnraOrder?: SortOrder
    chargeRate?: SortOrder
    mobility?: SortOrder
    likesDislikes?: SortOrder
    dateOfBirth?: SortOrder
    languages?: SortOrder
    allergies?: SortOrder
    interests?: SortOrder
    history?: SortOrder
    preferredName?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    chargeRate?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type CommunicationPreferenceCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    email?: SortOrder
    sms?: SortOrder
    phone?: SortOrder
    notes?: SortOrder
  }

  export type CommunicationPreferenceMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    email?: SortOrder
    sms?: SortOrder
    phone?: SortOrder
    notes?: SortOrder
  }

  export type CommunicationPreferenceMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    email?: SortOrder
    sms?: SortOrder
    phone?: SortOrder
    notes?: SortOrder
  }

  export type FamilyAccessCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    relation?: SortOrder
    phone?: SortOrder
    email?: SortOrder
  }

  export type FamilyAccessMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    relation?: SortOrder
    phone?: SortOrder
    email?: SortOrder
  }

  export type FamilyAccessMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    relation?: SortOrder
    phone?: SortOrder
    email?: SortOrder
  }

  export type AgencyScalarRelationFilter = {
    is?: AgencyWhereInput
    isNot?: AgencyWhereInput
  }

  export type MedicationDatabaseLinkCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    isSpecialist?: SortOrder
    url?: SortOrder
    source?: SortOrder
    agencyId?: SortOrder
  }

  export type MedicationDatabaseLinkMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    isSpecialist?: SortOrder
    url?: SortOrder
    source?: SortOrder
    agencyId?: SortOrder
  }

  export type MedicationDatabaseLinkMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    isSpecialist?: SortOrder
    url?: SortOrder
    source?: SortOrder
    agencyId?: SortOrder
  }

  export type VisitTypeCountOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VisitTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VisitTypeMinOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumScheduleTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduleType | EnumScheduleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduleType[] | ListEnumScheduleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduleType[] | ListEnumScheduleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduleTypeFilter<$PrismaModel> | $Enums.ScheduleType
  }

  export type VisitTypeNullableScalarRelationFilter = {
    is?: VisitTypeWhereInput | null
    isNot?: VisitTypeWhereInput | null
  }

  export type ScheduleCountOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    date?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    status?: SortOrder
    type?: SortOrder
    notes?: SortOrder
    chargeRate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    visitTypeId?: SortOrder
  }

  export type ScheduleAvgOrderByAggregateInput = {
    chargeRate?: SortOrder
  }

  export type ScheduleMaxOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    date?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    status?: SortOrder
    type?: SortOrder
    notes?: SortOrder
    chargeRate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    visitTypeId?: SortOrder
  }

  export type ScheduleMinOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    date?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    status?: SortOrder
    type?: SortOrder
    notes?: SortOrder
    chargeRate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    visitTypeId?: SortOrder
  }

  export type ScheduleSumOrderByAggregateInput = {
    chargeRate?: SortOrder
  }

  export type EnumScheduleTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduleType | EnumScheduleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduleType[] | ListEnumScheduleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduleType[] | ListEnumScheduleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduleTypeWithAggregatesFilter<$PrismaModel> | $Enums.ScheduleType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumScheduleTypeFilter<$PrismaModel>
    _max?: NestedEnumScheduleTypeFilter<$PrismaModel>
  }

  export type EnumReportStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportStatus | EnumReportStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReportStatusFilter<$PrismaModel> | $Enums.ReportStatus
  }

  export type ReportTaskListRelationFilter = {
    every?: ReportTaskWhereInput
    some?: ReportTaskWhereInput
    none?: ReportTaskWhereInput
  }

  export type ReportAlertListRelationFilter = {
    every?: ReportAlertWhereInput
    some?: ReportAlertWhereInput
    none?: ReportAlertWhereInput
  }

  export type BodyMapObservationListRelationFilter = {
    every?: BodyMapObservationWhereInput
    some?: BodyMapObservationWhereInput
    none?: BodyMapObservationWhereInput
  }

  export type ReportTaskOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReportAlertOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BodyMapObservationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReportCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    agencyId?: SortOrder
    userId?: SortOrder
    condition?: SortOrder
    summary?: SortOrder
    checkInTime?: SortOrder
    checkOutTime?: SortOrder
    createdAt?: SortOrder
    checkInDistance?: SortOrder
    checkOutDistance?: SortOrder
    checkInLocation?: SortOrder
    checkOutLocation?: SortOrder
    hasSignature?: SortOrder
    signatureImageUrl?: SortOrder
    status?: SortOrder
    lastEditedAt?: SortOrder
    lastEditedBy?: SortOrder
    lastEditReason?: SortOrder
  }

  export type ReportAvgOrderByAggregateInput = {
    checkInDistance?: SortOrder
    checkOutDistance?: SortOrder
  }

  export type ReportMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    agencyId?: SortOrder
    userId?: SortOrder
    condition?: SortOrder
    summary?: SortOrder
    checkInTime?: SortOrder
    checkOutTime?: SortOrder
    createdAt?: SortOrder
    checkInDistance?: SortOrder
    checkOutDistance?: SortOrder
    checkInLocation?: SortOrder
    checkOutLocation?: SortOrder
    hasSignature?: SortOrder
    signatureImageUrl?: SortOrder
    status?: SortOrder
    lastEditedAt?: SortOrder
    lastEditedBy?: SortOrder
    lastEditReason?: SortOrder
  }

  export type ReportMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    agencyId?: SortOrder
    userId?: SortOrder
    condition?: SortOrder
    summary?: SortOrder
    checkInTime?: SortOrder
    checkOutTime?: SortOrder
    createdAt?: SortOrder
    checkInDistance?: SortOrder
    checkOutDistance?: SortOrder
    checkInLocation?: SortOrder
    checkOutLocation?: SortOrder
    hasSignature?: SortOrder
    signatureImageUrl?: SortOrder
    status?: SortOrder
    lastEditedAt?: SortOrder
    lastEditedBy?: SortOrder
    lastEditReason?: SortOrder
  }

  export type ReportSumOrderByAggregateInput = {
    checkInDistance?: SortOrder
    checkOutDistance?: SortOrder
  }

  export type EnumReportStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportStatus | EnumReportStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReportStatusWithAggregatesFilter<$PrismaModel> | $Enums.ReportStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReportStatusFilter<$PrismaModel>
    _max?: NestedEnumReportStatusFilter<$PrismaModel>
  }

  export type ReportScalarRelationFilter = {
    is?: ReportWhereInput
    isNot?: ReportWhereInput
  }

  export type ReportTaskCountOrderByAggregateInput = {
    id?: SortOrder
    reportId?: SortOrder
    taskName?: SortOrder
    completed?: SortOrder
    notes?: SortOrder
    taskIcon?: SortOrder
    taskType?: SortOrder
    completedAt?: SortOrder
  }

  export type ReportTaskMaxOrderByAggregateInput = {
    id?: SortOrder
    reportId?: SortOrder
    taskName?: SortOrder
    completed?: SortOrder
    notes?: SortOrder
    taskIcon?: SortOrder
    taskType?: SortOrder
    completedAt?: SortOrder
  }

  export type ReportTaskMinOrderByAggregateInput = {
    id?: SortOrder
    reportId?: SortOrder
    taskName?: SortOrder
    completed?: SortOrder
    notes?: SortOrder
    taskIcon?: SortOrder
    taskType?: SortOrder
    completedAt?: SortOrder
  }

  export type EnumAlertTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AlertType | EnumAlertTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AlertType[] | ListEnumAlertTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AlertType[] | ListEnumAlertTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAlertTypeFilter<$PrismaModel> | $Enums.AlertType
  }

  export type EnumAlertSeverityFilter<$PrismaModel = never> = {
    equals?: $Enums.AlertSeverity | EnumAlertSeverityFieldRefInput<$PrismaModel>
    in?: $Enums.AlertSeverity[] | ListEnumAlertSeverityFieldRefInput<$PrismaModel>
    notIn?: $Enums.AlertSeverity[] | ListEnumAlertSeverityFieldRefInput<$PrismaModel>
    not?: NestedEnumAlertSeverityFilter<$PrismaModel> | $Enums.AlertSeverity
  }

  export type ReportAlertCountOrderByAggregateInput = {
    id?: SortOrder
    reportId?: SortOrder
    type?: SortOrder
    message?: SortOrder
    severity?: SortOrder
    createdAt?: SortOrder
    resolved?: SortOrder
    resolvedAt?: SortOrder
    resolvedBy?: SortOrder
  }

  export type ReportAlertMaxOrderByAggregateInput = {
    id?: SortOrder
    reportId?: SortOrder
    type?: SortOrder
    message?: SortOrder
    severity?: SortOrder
    createdAt?: SortOrder
    resolved?: SortOrder
    resolvedAt?: SortOrder
    resolvedBy?: SortOrder
  }

  export type ReportAlertMinOrderByAggregateInput = {
    id?: SortOrder
    reportId?: SortOrder
    type?: SortOrder
    message?: SortOrder
    severity?: SortOrder
    createdAt?: SortOrder
    resolved?: SortOrder
    resolvedAt?: SortOrder
    resolvedBy?: SortOrder
  }

  export type EnumAlertTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AlertType | EnumAlertTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AlertType[] | ListEnumAlertTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AlertType[] | ListEnumAlertTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAlertTypeWithAggregatesFilter<$PrismaModel> | $Enums.AlertType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAlertTypeFilter<$PrismaModel>
    _max?: NestedEnumAlertTypeFilter<$PrismaModel>
  }

  export type EnumAlertSeverityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AlertSeverity | EnumAlertSeverityFieldRefInput<$PrismaModel>
    in?: $Enums.AlertSeverity[] | ListEnumAlertSeverityFieldRefInput<$PrismaModel>
    notIn?: $Enums.AlertSeverity[] | ListEnumAlertSeverityFieldRefInput<$PrismaModel>
    not?: NestedEnumAlertSeverityWithAggregatesFilter<$PrismaModel> | $Enums.AlertSeverity
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAlertSeverityFilter<$PrismaModel>
    _max?: NestedEnumAlertSeverityFilter<$PrismaModel>
  }

  export type BodyMapObservationCountOrderByAggregateInput = {
    id?: SortOrder
    reportId?: SortOrder
    bodyPart?: SortOrder
    condition?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
  }

  export type BodyMapObservationMaxOrderByAggregateInput = {
    id?: SortOrder
    reportId?: SortOrder
    bodyPart?: SortOrder
    condition?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
  }

  export type BodyMapObservationMinOrderByAggregateInput = {
    id?: SortOrder
    reportId?: SortOrder
    bodyPart?: SortOrder
    condition?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
  }

  export type ReportEditCountOrderByAggregateInput = {
    id?: SortOrder
    reportId?: SortOrder
    editedBy?: SortOrder
    editedAt?: SortOrder
    reason?: SortOrder
    changesJson?: SortOrder
  }

  export type ReportEditMaxOrderByAggregateInput = {
    id?: SortOrder
    reportId?: SortOrder
    editedBy?: SortOrder
    editedAt?: SortOrder
    reason?: SortOrder
    changesJson?: SortOrder
  }

  export type ReportEditMinOrderByAggregateInput = {
    id?: SortOrder
    reportId?: SortOrder
    editedBy?: SortOrder
    editedAt?: SortOrder
    reason?: SortOrder
    changesJson?: SortOrder
  }

  export type MedicationDatabaseLinkScalarRelationFilter = {
    is?: MedicationDatabaseLinkWhereInput
    isNot?: MedicationDatabaseLinkWhereInput
  }

  export type MedicationRecordCountOrderByAggregateInput = {
    id?: SortOrder
    medicationId?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    dosage?: SortOrder
    frequency?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    morningDose?: SortOrder
    lunchDose?: SortOrder
    eveningDose?: SortOrder
    bedtimeDose?: SortOrder
    asNeededDose?: SortOrder
  }

  export type MedicationRecordMaxOrderByAggregateInput = {
    id?: SortOrder
    medicationId?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    dosage?: SortOrder
    frequency?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    morningDose?: SortOrder
    lunchDose?: SortOrder
    eveningDose?: SortOrder
    bedtimeDose?: SortOrder
    asNeededDose?: SortOrder
  }

  export type MedicationRecordMinOrderByAggregateInput = {
    id?: SortOrder
    medicationId?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    dosage?: SortOrder
    frequency?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    morningDose?: SortOrder
    lunchDose?: SortOrder
    eveningDose?: SortOrder
    bedtimeDose?: SortOrder
    asNeededDose?: SortOrder
  }

  export type EnumDoseTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DoseType | EnumDoseTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DoseType[] | ListEnumDoseTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DoseType[] | ListEnumDoseTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDoseTypeFilter<$PrismaModel> | $Enums.DoseType
  }

  export type MedicationRecordScalarRelationFilter = {
    is?: MedicationRecordWhereInput
    isNot?: MedicationRecordWhereInput
  }

  export type ReportNullableScalarRelationFilter = {
    is?: ReportWhereInput | null
    isNot?: ReportWhereInput | null
  }

  export type MedicationAdministrationCountOrderByAggregateInput = {
    id?: SortOrder
    medicationRecordId?: SortOrder
    administeredById?: SortOrder
    administeredAt?: SortOrder
    doseType?: SortOrder
    doseTaken?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    reportId?: SortOrder
  }

  export type MedicationAdministrationMaxOrderByAggregateInput = {
    id?: SortOrder
    medicationRecordId?: SortOrder
    administeredById?: SortOrder
    administeredAt?: SortOrder
    doseType?: SortOrder
    doseTaken?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    reportId?: SortOrder
  }

  export type MedicationAdministrationMinOrderByAggregateInput = {
    id?: SortOrder
    medicationRecordId?: SortOrder
    administeredById?: SortOrder
    administeredAt?: SortOrder
    doseType?: SortOrder
    doseTaken?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    reportId?: SortOrder
  }

  export type EnumDoseTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DoseType | EnumDoseTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DoseType[] | ListEnumDoseTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DoseType[] | ListEnumDoseTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDoseTypeWithAggregatesFilter<$PrismaModel> | $Enums.DoseType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDoseTypeFilter<$PrismaModel>
    _max?: NestedEnumDoseTypeFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type EnumInvoiceStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.InvoiceStatus | EnumInvoiceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvoiceStatusFilter<$PrismaModel> | $Enums.InvoiceStatus
  }

  export type InvoiceCountOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    clientId?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    issuedAt?: SortOrder
    dueDate?: SortOrder
    status?: SortOrder
  }

  export type InvoiceAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type InvoiceMaxOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    clientId?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    issuedAt?: SortOrder
    dueDate?: SortOrder
    status?: SortOrder
  }

  export type InvoiceMinOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    clientId?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    issuedAt?: SortOrder
    dueDate?: SortOrder
    status?: SortOrder
  }

  export type InvoiceSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EnumInvoiceStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InvoiceStatus | EnumInvoiceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvoiceStatusWithAggregatesFilter<$PrismaModel> | $Enums.InvoiceStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInvoiceStatusFilter<$PrismaModel>
    _max?: NestedEnumInvoiceStatusFilter<$PrismaModel>
  }

  export type MileageRecordCountOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    date?: SortOrder
    startMileage?: SortOrder
    endMileage?: SortOrder
    totalMiles?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MileageRecordAvgOrderByAggregateInput = {
    startMileage?: SortOrder
    endMileage?: SortOrder
    totalMiles?: SortOrder
  }

  export type MileageRecordMaxOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    date?: SortOrder
    startMileage?: SortOrder
    endMileage?: SortOrder
    totalMiles?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MileageRecordMinOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    clientId?: SortOrder
    userId?: SortOrder
    date?: SortOrder
    startMileage?: SortOrder
    endMileage?: SortOrder
    totalMiles?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MileageRecordSumOrderByAggregateInput = {
    startMileage?: SortOrder
    endMileage?: SortOrder
    totalMiles?: SortOrder
  }

  export type DocumentCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    fileUrl?: SortOrder
    uploadedAt?: SortOrder
    userId?: SortOrder
    clientId?: SortOrder
    agencyId?: SortOrder
  }

  export type DocumentMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    fileUrl?: SortOrder
    uploadedAt?: SortOrder
    userId?: SortOrder
    clientId?: SortOrder
    agencyId?: SortOrder
  }

  export type DocumentMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    fileUrl?: SortOrder
    uploadedAt?: SortOrder
    userId?: SortOrder
    clientId?: SortOrder
    agencyId?: SortOrder
  }

  export type ProfileCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    phone?: SortOrder
    avatarUrl?: SortOrder
    address?: SortOrder
  }

  export type ProfileMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    phone?: SortOrder
    avatarUrl?: SortOrder
    address?: SortOrder
  }

  export type ProfileMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    phone?: SortOrder
    avatarUrl?: SortOrder
    address?: SortOrder
  }

  export type EnumSeverityLevelFilter<$PrismaModel = never> = {
    equals?: $Enums.SeverityLevel | EnumSeverityLevelFieldRefInput<$PrismaModel>
    in?: $Enums.SeverityLevel[] | ListEnumSeverityLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.SeverityLevel[] | ListEnumSeverityLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumSeverityLevelFilter<$PrismaModel> | $Enums.SeverityLevel
  }

  export type IncidentReportCountOrderByAggregateInput = {
    id?: SortOrder
    reporterId?: SortOrder
    agencyId?: SortOrder
    description?: SortOrder
    severity?: SortOrder
    reportedAt?: SortOrder
  }

  export type IncidentReportMaxOrderByAggregateInput = {
    id?: SortOrder
    reporterId?: SortOrder
    agencyId?: SortOrder
    description?: SortOrder
    severity?: SortOrder
    reportedAt?: SortOrder
  }

  export type IncidentReportMinOrderByAggregateInput = {
    id?: SortOrder
    reporterId?: SortOrder
    agencyId?: SortOrder
    description?: SortOrder
    severity?: SortOrder
    reportedAt?: SortOrder
  }

  export type EnumSeverityLevelWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SeverityLevel | EnumSeverityLevelFieldRefInput<$PrismaModel>
    in?: $Enums.SeverityLevel[] | ListEnumSeverityLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.SeverityLevel[] | ListEnumSeverityLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumSeverityLevelWithAggregatesFilter<$PrismaModel> | $Enums.SeverityLevel
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSeverityLevelFilter<$PrismaModel>
    _max?: NestedEnumSeverityLevelFilter<$PrismaModel>
  }

  export type MessageCountOrderByAggregateInput = {
    id?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    content?: SortOrder
    sentAt?: SortOrder
  }

  export type MessageMaxOrderByAggregateInput = {
    id?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    content?: SortOrder
    sentAt?: SortOrder
  }

  export type MessageMinOrderByAggregateInput = {
    id?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    content?: SortOrder
    sentAt?: SortOrder
  }

  export type KeyContactCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    relation?: SortOrder
    phone?: SortOrder
    email?: SortOrder
  }

  export type KeyContactMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    relation?: SortOrder
    phone?: SortOrder
    email?: SortOrder
  }

  export type KeyContactMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    name?: SortOrder
    relation?: SortOrder
    phone?: SortOrder
    email?: SortOrder
  }

  export type CareOutcomeCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    outcome?: SortOrder
  }

  export type CareOutcomeMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    outcome?: SortOrder
  }

  export type CareOutcomeMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    outcome?: SortOrder
  }

  export type CommunicationLogCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    message?: SortOrder
    createdAt?: SortOrder
  }

  export type CommunicationLogMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    message?: SortOrder
    createdAt?: SortOrder
  }

  export type CommunicationLogMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    message?: SortOrder
    createdAt?: SortOrder
  }

  export type RiskCategoryCountOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
  }

  export type RiskCategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
  }

  export type RiskCategoryMinOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type RiskCategoryScalarRelationFilter = {
    is?: RiskCategoryWhereInput
    isNot?: RiskCategoryWhereInput
  }

  export type RiskAssessmentCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    riskCategoryId?: SortOrder
    description?: SortOrder
    affectedParties?: SortOrder
    mitigationStrategy?: SortOrder
    likelihood?: SortOrder
    severity?: SortOrder
    riskScore?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RiskAssessmentAvgOrderByAggregateInput = {
    likelihood?: SortOrder
    severity?: SortOrder
    riskScore?: SortOrder
  }

  export type RiskAssessmentMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    riskCategoryId?: SortOrder
    description?: SortOrder
    affectedParties?: SortOrder
    mitigationStrategy?: SortOrder
    likelihood?: SortOrder
    severity?: SortOrder
    riskScore?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RiskAssessmentMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    riskCategoryId?: SortOrder
    description?: SortOrder
    affectedParties?: SortOrder
    mitigationStrategy?: SortOrder
    likelihood?: SortOrder
    severity?: SortOrder
    riskScore?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RiskAssessmentSumOrderByAggregateInput = {
    likelihood?: SortOrder
    severity?: SortOrder
    riskScore?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type ReminderCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    dueDate?: SortOrder
    completed?: SortOrder
    createdAt?: SortOrder
  }

  export type ReminderMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    dueDate?: SortOrder
    completed?: SortOrder
    createdAt?: SortOrder
  }

  export type ReminderMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    dueDate?: SortOrder
    completed?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumNotificationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeFilter<$PrismaModel> | $Enums.NotificationType
  }

  export type NotificationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    read?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NotificationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    read?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NotificationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    read?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumNotificationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel> | $Enums.NotificationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNotificationTypeFilter<$PrismaModel>
    _max?: NestedEnumNotificationTypeFilter<$PrismaModel>
  }

  export type UserCreateNestedOneWithoutSentInvitationsInput = {
    create?: XOR<UserCreateWithoutSentInvitationsInput, UserUncheckedCreateWithoutSentInvitationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentInvitationsInput
    connect?: UserWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type EnumRoleFieldUpdateOperationsInput = {
    set?: $Enums.Role
  }

  export type NullableEnumSubRoleFieldUpdateOperationsInput = {
    set?: $Enums.SubRole | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type EnumInvitationStatusFieldUpdateOperationsInput = {
    set?: $Enums.InvitationStatus
  }

  export type UserUpdateOneRequiredWithoutSentInvitationsNestedInput = {
    create?: XOR<UserCreateWithoutSentInvitationsInput, UserUncheckedCreateWithoutSentInvitationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentInvitationsInput
    upsert?: UserUpsertWithoutSentInvitationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSentInvitationsInput, UserUpdateWithoutSentInvitationsInput>, UserUncheckedUpdateWithoutSentInvitationsInput>
  }

  export type UserCreateNestedManyWithoutAgencyInput = {
    create?: XOR<UserCreateWithoutAgencyInput, UserUncheckedCreateWithoutAgencyInput> | UserCreateWithoutAgencyInput[] | UserUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAgencyInput | UserCreateOrConnectWithoutAgencyInput[]
    createMany?: UserCreateManyAgencyInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type ScheduleCreateNestedManyWithoutAgencyInput = {
    create?: XOR<ScheduleCreateWithoutAgencyInput, ScheduleUncheckedCreateWithoutAgencyInput> | ScheduleCreateWithoutAgencyInput[] | ScheduleUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: ScheduleCreateOrConnectWithoutAgencyInput | ScheduleCreateOrConnectWithoutAgencyInput[]
    createMany?: ScheduleCreateManyAgencyInputEnvelope
    connect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
  }

  export type InvoiceCreateNestedManyWithoutAgencyInput = {
    create?: XOR<InvoiceCreateWithoutAgencyInput, InvoiceUncheckedCreateWithoutAgencyInput> | InvoiceCreateWithoutAgencyInput[] | InvoiceUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutAgencyInput | InvoiceCreateOrConnectWithoutAgencyInput[]
    createMany?: InvoiceCreateManyAgencyInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type MileageRecordCreateNestedManyWithoutAgencyInput = {
    create?: XOR<MileageRecordCreateWithoutAgencyInput, MileageRecordUncheckedCreateWithoutAgencyInput> | MileageRecordCreateWithoutAgencyInput[] | MileageRecordUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: MileageRecordCreateOrConnectWithoutAgencyInput | MileageRecordCreateOrConnectWithoutAgencyInput[]
    createMany?: MileageRecordCreateManyAgencyInputEnvelope
    connect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
  }

  export type DocumentCreateNestedManyWithoutAgencyInput = {
    create?: XOR<DocumentCreateWithoutAgencyInput, DocumentUncheckedCreateWithoutAgencyInput> | DocumentCreateWithoutAgencyInput[] | DocumentUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutAgencyInput | DocumentCreateOrConnectWithoutAgencyInput[]
    createMany?: DocumentCreateManyAgencyInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type IncidentReportCreateNestedManyWithoutAgencyInput = {
    create?: XOR<IncidentReportCreateWithoutAgencyInput, IncidentReportUncheckedCreateWithoutAgencyInput> | IncidentReportCreateWithoutAgencyInput[] | IncidentReportUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: IncidentReportCreateOrConnectWithoutAgencyInput | IncidentReportCreateOrConnectWithoutAgencyInput[]
    createMany?: IncidentReportCreateManyAgencyInputEnvelope
    connect?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
  }

  export type MedicationDatabaseLinkCreateNestedManyWithoutAgencyInput = {
    create?: XOR<MedicationDatabaseLinkCreateWithoutAgencyInput, MedicationDatabaseLinkUncheckedCreateWithoutAgencyInput> | MedicationDatabaseLinkCreateWithoutAgencyInput[] | MedicationDatabaseLinkUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: MedicationDatabaseLinkCreateOrConnectWithoutAgencyInput | MedicationDatabaseLinkCreateOrConnectWithoutAgencyInput[]
    createMany?: MedicationDatabaseLinkCreateManyAgencyInputEnvelope
    connect?: MedicationDatabaseLinkWhereUniqueInput | MedicationDatabaseLinkWhereUniqueInput[]
  }

  export type VisitTypeCreateNestedManyWithoutAgencyInput = {
    create?: XOR<VisitTypeCreateWithoutAgencyInput, VisitTypeUncheckedCreateWithoutAgencyInput> | VisitTypeCreateWithoutAgencyInput[] | VisitTypeUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: VisitTypeCreateOrConnectWithoutAgencyInput | VisitTypeCreateOrConnectWithoutAgencyInput[]
    createMany?: VisitTypeCreateManyAgencyInputEnvelope
    connect?: VisitTypeWhereUniqueInput | VisitTypeWhereUniqueInput[]
  }

  export type RiskCategoryCreateNestedManyWithoutAgencyInput = {
    create?: XOR<RiskCategoryCreateWithoutAgencyInput, RiskCategoryUncheckedCreateWithoutAgencyInput> | RiskCategoryCreateWithoutAgencyInput[] | RiskCategoryUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: RiskCategoryCreateOrConnectWithoutAgencyInput | RiskCategoryCreateOrConnectWithoutAgencyInput[]
    createMany?: RiskCategoryCreateManyAgencyInputEnvelope
    connect?: RiskCategoryWhereUniqueInput | RiskCategoryWhereUniqueInput[]
  }

  export type ReportCreateNestedManyWithoutAgencyInput = {
    create?: XOR<ReportCreateWithoutAgencyInput, ReportUncheckedCreateWithoutAgencyInput> | ReportCreateWithoutAgencyInput[] | ReportUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutAgencyInput | ReportCreateOrConnectWithoutAgencyInput[]
    createMany?: ReportCreateManyAgencyInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<UserCreateWithoutAgencyInput, UserUncheckedCreateWithoutAgencyInput> | UserCreateWithoutAgencyInput[] | UserUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAgencyInput | UserCreateOrConnectWithoutAgencyInput[]
    createMany?: UserCreateManyAgencyInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type ScheduleUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<ScheduleCreateWithoutAgencyInput, ScheduleUncheckedCreateWithoutAgencyInput> | ScheduleCreateWithoutAgencyInput[] | ScheduleUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: ScheduleCreateOrConnectWithoutAgencyInput | ScheduleCreateOrConnectWithoutAgencyInput[]
    createMany?: ScheduleCreateManyAgencyInputEnvelope
    connect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
  }

  export type InvoiceUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<InvoiceCreateWithoutAgencyInput, InvoiceUncheckedCreateWithoutAgencyInput> | InvoiceCreateWithoutAgencyInput[] | InvoiceUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutAgencyInput | InvoiceCreateOrConnectWithoutAgencyInput[]
    createMany?: InvoiceCreateManyAgencyInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type MileageRecordUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<MileageRecordCreateWithoutAgencyInput, MileageRecordUncheckedCreateWithoutAgencyInput> | MileageRecordCreateWithoutAgencyInput[] | MileageRecordUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: MileageRecordCreateOrConnectWithoutAgencyInput | MileageRecordCreateOrConnectWithoutAgencyInput[]
    createMany?: MileageRecordCreateManyAgencyInputEnvelope
    connect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
  }

  export type DocumentUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<DocumentCreateWithoutAgencyInput, DocumentUncheckedCreateWithoutAgencyInput> | DocumentCreateWithoutAgencyInput[] | DocumentUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutAgencyInput | DocumentCreateOrConnectWithoutAgencyInput[]
    createMany?: DocumentCreateManyAgencyInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type IncidentReportUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<IncidentReportCreateWithoutAgencyInput, IncidentReportUncheckedCreateWithoutAgencyInput> | IncidentReportCreateWithoutAgencyInput[] | IncidentReportUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: IncidentReportCreateOrConnectWithoutAgencyInput | IncidentReportCreateOrConnectWithoutAgencyInput[]
    createMany?: IncidentReportCreateManyAgencyInputEnvelope
    connect?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
  }

  export type MedicationDatabaseLinkUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<MedicationDatabaseLinkCreateWithoutAgencyInput, MedicationDatabaseLinkUncheckedCreateWithoutAgencyInput> | MedicationDatabaseLinkCreateWithoutAgencyInput[] | MedicationDatabaseLinkUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: MedicationDatabaseLinkCreateOrConnectWithoutAgencyInput | MedicationDatabaseLinkCreateOrConnectWithoutAgencyInput[]
    createMany?: MedicationDatabaseLinkCreateManyAgencyInputEnvelope
    connect?: MedicationDatabaseLinkWhereUniqueInput | MedicationDatabaseLinkWhereUniqueInput[]
  }

  export type VisitTypeUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<VisitTypeCreateWithoutAgencyInput, VisitTypeUncheckedCreateWithoutAgencyInput> | VisitTypeCreateWithoutAgencyInput[] | VisitTypeUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: VisitTypeCreateOrConnectWithoutAgencyInput | VisitTypeCreateOrConnectWithoutAgencyInput[]
    createMany?: VisitTypeCreateManyAgencyInputEnvelope
    connect?: VisitTypeWhereUniqueInput | VisitTypeWhereUniqueInput[]
  }

  export type RiskCategoryUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<RiskCategoryCreateWithoutAgencyInput, RiskCategoryUncheckedCreateWithoutAgencyInput> | RiskCategoryCreateWithoutAgencyInput[] | RiskCategoryUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: RiskCategoryCreateOrConnectWithoutAgencyInput | RiskCategoryCreateOrConnectWithoutAgencyInput[]
    createMany?: RiskCategoryCreateManyAgencyInputEnvelope
    connect?: RiskCategoryWhereUniqueInput | RiskCategoryWhereUniqueInput[]
  }

  export type ReportUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<ReportCreateWithoutAgencyInput, ReportUncheckedCreateWithoutAgencyInput> | ReportCreateWithoutAgencyInput[] | ReportUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutAgencyInput | ReportCreateOrConnectWithoutAgencyInput[]
    createMany?: ReportCreateManyAgencyInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type UserUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<UserCreateWithoutAgencyInput, UserUncheckedCreateWithoutAgencyInput> | UserCreateWithoutAgencyInput[] | UserUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAgencyInput | UserCreateOrConnectWithoutAgencyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutAgencyInput | UserUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: UserCreateManyAgencyInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutAgencyInput | UserUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutAgencyInput | UserUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type ScheduleUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<ScheduleCreateWithoutAgencyInput, ScheduleUncheckedCreateWithoutAgencyInput> | ScheduleCreateWithoutAgencyInput[] | ScheduleUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: ScheduleCreateOrConnectWithoutAgencyInput | ScheduleCreateOrConnectWithoutAgencyInput[]
    upsert?: ScheduleUpsertWithWhereUniqueWithoutAgencyInput | ScheduleUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: ScheduleCreateManyAgencyInputEnvelope
    set?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    disconnect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    delete?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    connect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    update?: ScheduleUpdateWithWhereUniqueWithoutAgencyInput | ScheduleUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: ScheduleUpdateManyWithWhereWithoutAgencyInput | ScheduleUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: ScheduleScalarWhereInput | ScheduleScalarWhereInput[]
  }

  export type InvoiceUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<InvoiceCreateWithoutAgencyInput, InvoiceUncheckedCreateWithoutAgencyInput> | InvoiceCreateWithoutAgencyInput[] | InvoiceUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutAgencyInput | InvoiceCreateOrConnectWithoutAgencyInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutAgencyInput | InvoiceUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: InvoiceCreateManyAgencyInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutAgencyInput | InvoiceUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutAgencyInput | InvoiceUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type MileageRecordUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<MileageRecordCreateWithoutAgencyInput, MileageRecordUncheckedCreateWithoutAgencyInput> | MileageRecordCreateWithoutAgencyInput[] | MileageRecordUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: MileageRecordCreateOrConnectWithoutAgencyInput | MileageRecordCreateOrConnectWithoutAgencyInput[]
    upsert?: MileageRecordUpsertWithWhereUniqueWithoutAgencyInput | MileageRecordUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: MileageRecordCreateManyAgencyInputEnvelope
    set?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    disconnect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    delete?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    connect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    update?: MileageRecordUpdateWithWhereUniqueWithoutAgencyInput | MileageRecordUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: MileageRecordUpdateManyWithWhereWithoutAgencyInput | MileageRecordUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: MileageRecordScalarWhereInput | MileageRecordScalarWhereInput[]
  }

  export type DocumentUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<DocumentCreateWithoutAgencyInput, DocumentUncheckedCreateWithoutAgencyInput> | DocumentCreateWithoutAgencyInput[] | DocumentUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutAgencyInput | DocumentCreateOrConnectWithoutAgencyInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutAgencyInput | DocumentUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: DocumentCreateManyAgencyInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutAgencyInput | DocumentUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutAgencyInput | DocumentUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type IncidentReportUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<IncidentReportCreateWithoutAgencyInput, IncidentReportUncheckedCreateWithoutAgencyInput> | IncidentReportCreateWithoutAgencyInput[] | IncidentReportUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: IncidentReportCreateOrConnectWithoutAgencyInput | IncidentReportCreateOrConnectWithoutAgencyInput[]
    upsert?: IncidentReportUpsertWithWhereUniqueWithoutAgencyInput | IncidentReportUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: IncidentReportCreateManyAgencyInputEnvelope
    set?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
    disconnect?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
    delete?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
    connect?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
    update?: IncidentReportUpdateWithWhereUniqueWithoutAgencyInput | IncidentReportUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: IncidentReportUpdateManyWithWhereWithoutAgencyInput | IncidentReportUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: IncidentReportScalarWhereInput | IncidentReportScalarWhereInput[]
  }

  export type MedicationDatabaseLinkUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<MedicationDatabaseLinkCreateWithoutAgencyInput, MedicationDatabaseLinkUncheckedCreateWithoutAgencyInput> | MedicationDatabaseLinkCreateWithoutAgencyInput[] | MedicationDatabaseLinkUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: MedicationDatabaseLinkCreateOrConnectWithoutAgencyInput | MedicationDatabaseLinkCreateOrConnectWithoutAgencyInput[]
    upsert?: MedicationDatabaseLinkUpsertWithWhereUniqueWithoutAgencyInput | MedicationDatabaseLinkUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: MedicationDatabaseLinkCreateManyAgencyInputEnvelope
    set?: MedicationDatabaseLinkWhereUniqueInput | MedicationDatabaseLinkWhereUniqueInput[]
    disconnect?: MedicationDatabaseLinkWhereUniqueInput | MedicationDatabaseLinkWhereUniqueInput[]
    delete?: MedicationDatabaseLinkWhereUniqueInput | MedicationDatabaseLinkWhereUniqueInput[]
    connect?: MedicationDatabaseLinkWhereUniqueInput | MedicationDatabaseLinkWhereUniqueInput[]
    update?: MedicationDatabaseLinkUpdateWithWhereUniqueWithoutAgencyInput | MedicationDatabaseLinkUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: MedicationDatabaseLinkUpdateManyWithWhereWithoutAgencyInput | MedicationDatabaseLinkUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: MedicationDatabaseLinkScalarWhereInput | MedicationDatabaseLinkScalarWhereInput[]
  }

  export type VisitTypeUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<VisitTypeCreateWithoutAgencyInput, VisitTypeUncheckedCreateWithoutAgencyInput> | VisitTypeCreateWithoutAgencyInput[] | VisitTypeUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: VisitTypeCreateOrConnectWithoutAgencyInput | VisitTypeCreateOrConnectWithoutAgencyInput[]
    upsert?: VisitTypeUpsertWithWhereUniqueWithoutAgencyInput | VisitTypeUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: VisitTypeCreateManyAgencyInputEnvelope
    set?: VisitTypeWhereUniqueInput | VisitTypeWhereUniqueInput[]
    disconnect?: VisitTypeWhereUniqueInput | VisitTypeWhereUniqueInput[]
    delete?: VisitTypeWhereUniqueInput | VisitTypeWhereUniqueInput[]
    connect?: VisitTypeWhereUniqueInput | VisitTypeWhereUniqueInput[]
    update?: VisitTypeUpdateWithWhereUniqueWithoutAgencyInput | VisitTypeUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: VisitTypeUpdateManyWithWhereWithoutAgencyInput | VisitTypeUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: VisitTypeScalarWhereInput | VisitTypeScalarWhereInput[]
  }

  export type RiskCategoryUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<RiskCategoryCreateWithoutAgencyInput, RiskCategoryUncheckedCreateWithoutAgencyInput> | RiskCategoryCreateWithoutAgencyInput[] | RiskCategoryUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: RiskCategoryCreateOrConnectWithoutAgencyInput | RiskCategoryCreateOrConnectWithoutAgencyInput[]
    upsert?: RiskCategoryUpsertWithWhereUniqueWithoutAgencyInput | RiskCategoryUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: RiskCategoryCreateManyAgencyInputEnvelope
    set?: RiskCategoryWhereUniqueInput | RiskCategoryWhereUniqueInput[]
    disconnect?: RiskCategoryWhereUniqueInput | RiskCategoryWhereUniqueInput[]
    delete?: RiskCategoryWhereUniqueInput | RiskCategoryWhereUniqueInput[]
    connect?: RiskCategoryWhereUniqueInput | RiskCategoryWhereUniqueInput[]
    update?: RiskCategoryUpdateWithWhereUniqueWithoutAgencyInput | RiskCategoryUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: RiskCategoryUpdateManyWithWhereWithoutAgencyInput | RiskCategoryUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: RiskCategoryScalarWhereInput | RiskCategoryScalarWhereInput[]
  }

  export type ReportUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<ReportCreateWithoutAgencyInput, ReportUncheckedCreateWithoutAgencyInput> | ReportCreateWithoutAgencyInput[] | ReportUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutAgencyInput | ReportCreateOrConnectWithoutAgencyInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutAgencyInput | ReportUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: ReportCreateManyAgencyInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutAgencyInput | ReportUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutAgencyInput | ReportUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<UserCreateWithoutAgencyInput, UserUncheckedCreateWithoutAgencyInput> | UserCreateWithoutAgencyInput[] | UserUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAgencyInput | UserCreateOrConnectWithoutAgencyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutAgencyInput | UserUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: UserCreateManyAgencyInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutAgencyInput | UserUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutAgencyInput | UserUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type ScheduleUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<ScheduleCreateWithoutAgencyInput, ScheduleUncheckedCreateWithoutAgencyInput> | ScheduleCreateWithoutAgencyInput[] | ScheduleUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: ScheduleCreateOrConnectWithoutAgencyInput | ScheduleCreateOrConnectWithoutAgencyInput[]
    upsert?: ScheduleUpsertWithWhereUniqueWithoutAgencyInput | ScheduleUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: ScheduleCreateManyAgencyInputEnvelope
    set?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    disconnect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    delete?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    connect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    update?: ScheduleUpdateWithWhereUniqueWithoutAgencyInput | ScheduleUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: ScheduleUpdateManyWithWhereWithoutAgencyInput | ScheduleUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: ScheduleScalarWhereInput | ScheduleScalarWhereInput[]
  }

  export type InvoiceUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<InvoiceCreateWithoutAgencyInput, InvoiceUncheckedCreateWithoutAgencyInput> | InvoiceCreateWithoutAgencyInput[] | InvoiceUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutAgencyInput | InvoiceCreateOrConnectWithoutAgencyInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutAgencyInput | InvoiceUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: InvoiceCreateManyAgencyInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutAgencyInput | InvoiceUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutAgencyInput | InvoiceUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type MileageRecordUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<MileageRecordCreateWithoutAgencyInput, MileageRecordUncheckedCreateWithoutAgencyInput> | MileageRecordCreateWithoutAgencyInput[] | MileageRecordUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: MileageRecordCreateOrConnectWithoutAgencyInput | MileageRecordCreateOrConnectWithoutAgencyInput[]
    upsert?: MileageRecordUpsertWithWhereUniqueWithoutAgencyInput | MileageRecordUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: MileageRecordCreateManyAgencyInputEnvelope
    set?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    disconnect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    delete?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    connect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    update?: MileageRecordUpdateWithWhereUniqueWithoutAgencyInput | MileageRecordUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: MileageRecordUpdateManyWithWhereWithoutAgencyInput | MileageRecordUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: MileageRecordScalarWhereInput | MileageRecordScalarWhereInput[]
  }

  export type DocumentUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<DocumentCreateWithoutAgencyInput, DocumentUncheckedCreateWithoutAgencyInput> | DocumentCreateWithoutAgencyInput[] | DocumentUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutAgencyInput | DocumentCreateOrConnectWithoutAgencyInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutAgencyInput | DocumentUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: DocumentCreateManyAgencyInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutAgencyInput | DocumentUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutAgencyInput | DocumentUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type IncidentReportUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<IncidentReportCreateWithoutAgencyInput, IncidentReportUncheckedCreateWithoutAgencyInput> | IncidentReportCreateWithoutAgencyInput[] | IncidentReportUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: IncidentReportCreateOrConnectWithoutAgencyInput | IncidentReportCreateOrConnectWithoutAgencyInput[]
    upsert?: IncidentReportUpsertWithWhereUniqueWithoutAgencyInput | IncidentReportUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: IncidentReportCreateManyAgencyInputEnvelope
    set?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
    disconnect?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
    delete?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
    connect?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
    update?: IncidentReportUpdateWithWhereUniqueWithoutAgencyInput | IncidentReportUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: IncidentReportUpdateManyWithWhereWithoutAgencyInput | IncidentReportUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: IncidentReportScalarWhereInput | IncidentReportScalarWhereInput[]
  }

  export type MedicationDatabaseLinkUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<MedicationDatabaseLinkCreateWithoutAgencyInput, MedicationDatabaseLinkUncheckedCreateWithoutAgencyInput> | MedicationDatabaseLinkCreateWithoutAgencyInput[] | MedicationDatabaseLinkUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: MedicationDatabaseLinkCreateOrConnectWithoutAgencyInput | MedicationDatabaseLinkCreateOrConnectWithoutAgencyInput[]
    upsert?: MedicationDatabaseLinkUpsertWithWhereUniqueWithoutAgencyInput | MedicationDatabaseLinkUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: MedicationDatabaseLinkCreateManyAgencyInputEnvelope
    set?: MedicationDatabaseLinkWhereUniqueInput | MedicationDatabaseLinkWhereUniqueInput[]
    disconnect?: MedicationDatabaseLinkWhereUniqueInput | MedicationDatabaseLinkWhereUniqueInput[]
    delete?: MedicationDatabaseLinkWhereUniqueInput | MedicationDatabaseLinkWhereUniqueInput[]
    connect?: MedicationDatabaseLinkWhereUniqueInput | MedicationDatabaseLinkWhereUniqueInput[]
    update?: MedicationDatabaseLinkUpdateWithWhereUniqueWithoutAgencyInput | MedicationDatabaseLinkUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: MedicationDatabaseLinkUpdateManyWithWhereWithoutAgencyInput | MedicationDatabaseLinkUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: MedicationDatabaseLinkScalarWhereInput | MedicationDatabaseLinkScalarWhereInput[]
  }

  export type VisitTypeUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<VisitTypeCreateWithoutAgencyInput, VisitTypeUncheckedCreateWithoutAgencyInput> | VisitTypeCreateWithoutAgencyInput[] | VisitTypeUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: VisitTypeCreateOrConnectWithoutAgencyInput | VisitTypeCreateOrConnectWithoutAgencyInput[]
    upsert?: VisitTypeUpsertWithWhereUniqueWithoutAgencyInput | VisitTypeUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: VisitTypeCreateManyAgencyInputEnvelope
    set?: VisitTypeWhereUniqueInput | VisitTypeWhereUniqueInput[]
    disconnect?: VisitTypeWhereUniqueInput | VisitTypeWhereUniqueInput[]
    delete?: VisitTypeWhereUniqueInput | VisitTypeWhereUniqueInput[]
    connect?: VisitTypeWhereUniqueInput | VisitTypeWhereUniqueInput[]
    update?: VisitTypeUpdateWithWhereUniqueWithoutAgencyInput | VisitTypeUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: VisitTypeUpdateManyWithWhereWithoutAgencyInput | VisitTypeUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: VisitTypeScalarWhereInput | VisitTypeScalarWhereInput[]
  }

  export type RiskCategoryUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<RiskCategoryCreateWithoutAgencyInput, RiskCategoryUncheckedCreateWithoutAgencyInput> | RiskCategoryCreateWithoutAgencyInput[] | RiskCategoryUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: RiskCategoryCreateOrConnectWithoutAgencyInput | RiskCategoryCreateOrConnectWithoutAgencyInput[]
    upsert?: RiskCategoryUpsertWithWhereUniqueWithoutAgencyInput | RiskCategoryUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: RiskCategoryCreateManyAgencyInputEnvelope
    set?: RiskCategoryWhereUniqueInput | RiskCategoryWhereUniqueInput[]
    disconnect?: RiskCategoryWhereUniqueInput | RiskCategoryWhereUniqueInput[]
    delete?: RiskCategoryWhereUniqueInput | RiskCategoryWhereUniqueInput[]
    connect?: RiskCategoryWhereUniqueInput | RiskCategoryWhereUniqueInput[]
    update?: RiskCategoryUpdateWithWhereUniqueWithoutAgencyInput | RiskCategoryUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: RiskCategoryUpdateManyWithWhereWithoutAgencyInput | RiskCategoryUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: RiskCategoryScalarWhereInput | RiskCategoryScalarWhereInput[]
  }

  export type ReportUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<ReportCreateWithoutAgencyInput, ReportUncheckedCreateWithoutAgencyInput> | ReportCreateWithoutAgencyInput[] | ReportUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutAgencyInput | ReportCreateOrConnectWithoutAgencyInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutAgencyInput | ReportUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: ReportCreateManyAgencyInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutAgencyInput | ReportUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutAgencyInput | ReportUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutClientAssignmentsInput = {
    create?: XOR<UserCreateWithoutClientAssignmentsInput, UserUncheckedCreateWithoutClientAssignmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutClientAssignmentsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCareAssignmentsInput = {
    create?: XOR<UserCreateWithoutCareAssignmentsInput, UserUncheckedCreateWithoutCareAssignmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCareAssignmentsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutClientAssignmentsNestedInput = {
    create?: XOR<UserCreateWithoutClientAssignmentsInput, UserUncheckedCreateWithoutClientAssignmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutClientAssignmentsInput
    upsert?: UserUpsertWithoutClientAssignmentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutClientAssignmentsInput, UserUpdateWithoutClientAssignmentsInput>, UserUncheckedUpdateWithoutClientAssignmentsInput>
  }

  export type UserUpdateOneRequiredWithoutCareAssignmentsNestedInput = {
    create?: XOR<UserCreateWithoutCareAssignmentsInput, UserUncheckedCreateWithoutCareAssignmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCareAssignmentsInput
    upsert?: UserUpsertWithoutCareAssignmentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCareAssignmentsInput, UserUpdateWithoutCareAssignmentsInput>, UserUncheckedUpdateWithoutCareAssignmentsInput>
  }

  export type InvitationCreateNestedManyWithoutInviterInput = {
    create?: XOR<InvitationCreateWithoutInviterInput, InvitationUncheckedCreateWithoutInviterInput> | InvitationCreateWithoutInviterInput[] | InvitationUncheckedCreateWithoutInviterInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutInviterInput | InvitationCreateOrConnectWithoutInviterInput[]
    createMany?: InvitationCreateManyInviterInputEnvelope
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
  }

  export type AgencyCreateNestedOneWithoutUsersInput = {
    create?: XOR<AgencyCreateWithoutUsersInput, AgencyUncheckedCreateWithoutUsersInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutUsersInput
    connect?: AgencyWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutInvitedUsersInput = {
    create?: XOR<UserCreateWithoutInvitedUsersInput, UserUncheckedCreateWithoutInvitedUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutInvitedUsersInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutInvitedByInput = {
    create?: XOR<UserCreateWithoutInvitedByInput, UserUncheckedCreateWithoutInvitedByInput> | UserCreateWithoutInvitedByInput[] | UserUncheckedCreateWithoutInvitedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutInvitedByInput | UserCreateOrConnectWithoutInvitedByInput[]
    createMany?: UserCreateManyInvitedByInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type CommunicationPreferenceCreateNestedOneWithoutUserInput = {
    create?: XOR<CommunicationPreferenceCreateWithoutUserInput, CommunicationPreferenceUncheckedCreateWithoutUserInput>
    connectOrCreate?: CommunicationPreferenceCreateOrConnectWithoutUserInput
    connect?: CommunicationPreferenceWhereUniqueInput
  }

  export type ClientCareAssignmentCreateNestedManyWithoutUserInput = {
    create?: XOR<ClientCareAssignmentCreateWithoutUserInput, ClientCareAssignmentUncheckedCreateWithoutUserInput> | ClientCareAssignmentCreateWithoutUserInput[] | ClientCareAssignmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ClientCareAssignmentCreateOrConnectWithoutUserInput | ClientCareAssignmentCreateOrConnectWithoutUserInput[]
    createMany?: ClientCareAssignmentCreateManyUserInputEnvelope
    connect?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
  }

  export type ClientCareAssignmentCreateNestedManyWithoutClientInput = {
    create?: XOR<ClientCareAssignmentCreateWithoutClientInput, ClientCareAssignmentUncheckedCreateWithoutClientInput> | ClientCareAssignmentCreateWithoutClientInput[] | ClientCareAssignmentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ClientCareAssignmentCreateOrConnectWithoutClientInput | ClientCareAssignmentCreateOrConnectWithoutClientInput[]
    createMany?: ClientCareAssignmentCreateManyClientInputEnvelope
    connect?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
  }

  export type ScheduleCreateNestedManyWithoutUserInput = {
    create?: XOR<ScheduleCreateWithoutUserInput, ScheduleUncheckedCreateWithoutUserInput> | ScheduleCreateWithoutUserInput[] | ScheduleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ScheduleCreateOrConnectWithoutUserInput | ScheduleCreateOrConnectWithoutUserInput[]
    createMany?: ScheduleCreateManyUserInputEnvelope
    connect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
  }

  export type ScheduleCreateNestedManyWithoutClientInput = {
    create?: XOR<ScheduleCreateWithoutClientInput, ScheduleUncheckedCreateWithoutClientInput> | ScheduleCreateWithoutClientInput[] | ScheduleUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ScheduleCreateOrConnectWithoutClientInput | ScheduleCreateOrConnectWithoutClientInput[]
    createMany?: ScheduleCreateManyClientInputEnvelope
    connect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
  }

  export type ReportCreateNestedManyWithoutCaregiverInput = {
    create?: XOR<ReportCreateWithoutCaregiverInput, ReportUncheckedCreateWithoutCaregiverInput> | ReportCreateWithoutCaregiverInput[] | ReportUncheckedCreateWithoutCaregiverInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutCaregiverInput | ReportCreateOrConnectWithoutCaregiverInput[]
    createMany?: ReportCreateManyCaregiverInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type ReportCreateNestedManyWithoutClientInput = {
    create?: XOR<ReportCreateWithoutClientInput, ReportUncheckedCreateWithoutClientInput> | ReportCreateWithoutClientInput[] | ReportUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutClientInput | ReportCreateOrConnectWithoutClientInput[]
    createMany?: ReportCreateManyClientInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type MedicationRecordCreateNestedManyWithoutUserInput = {
    create?: XOR<MedicationRecordCreateWithoutUserInput, MedicationRecordUncheckedCreateWithoutUserInput> | MedicationRecordCreateWithoutUserInput[] | MedicationRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutUserInput | MedicationRecordCreateOrConnectWithoutUserInput[]
    createMany?: MedicationRecordCreateManyUserInputEnvelope
    connect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
  }

  export type MedicationRecordCreateNestedManyWithoutClientInput = {
    create?: XOR<MedicationRecordCreateWithoutClientInput, MedicationRecordUncheckedCreateWithoutClientInput> | MedicationRecordCreateWithoutClientInput[] | MedicationRecordUncheckedCreateWithoutClientInput[]
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutClientInput | MedicationRecordCreateOrConnectWithoutClientInput[]
    createMany?: MedicationRecordCreateManyClientInputEnvelope
    connect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
  }

  export type MileageRecordCreateNestedManyWithoutUserInput = {
    create?: XOR<MileageRecordCreateWithoutUserInput, MileageRecordUncheckedCreateWithoutUserInput> | MileageRecordCreateWithoutUserInput[] | MileageRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MileageRecordCreateOrConnectWithoutUserInput | MileageRecordCreateOrConnectWithoutUserInput[]
    createMany?: MileageRecordCreateManyUserInputEnvelope
    connect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
  }

  export type MileageRecordCreateNestedManyWithoutClientInput = {
    create?: XOR<MileageRecordCreateWithoutClientInput, MileageRecordUncheckedCreateWithoutClientInput> | MileageRecordCreateWithoutClientInput[] | MileageRecordUncheckedCreateWithoutClientInput[]
    connectOrCreate?: MileageRecordCreateOrConnectWithoutClientInput | MileageRecordCreateOrConnectWithoutClientInput[]
    createMany?: MileageRecordCreateManyClientInputEnvelope
    connect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
  }

  export type ProfileCreateNestedOneWithoutUserInput = {
    create?: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserInput
    connect?: ProfileWhereUniqueInput
  }

  export type MessageCreateNestedManyWithoutSenderInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutReceiverInput = {
    create?: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput> | MessageCreateWithoutReceiverInput[] | MessageUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutReceiverInput | MessageCreateOrConnectWithoutReceiverInput[]
    createMany?: MessageCreateManyReceiverInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MedicationRecordCreateNestedManyWithoutUserInput = {
    create?: XOR<MedicationRecordCreateWithoutUserInput, MedicationRecordUncheckedCreateWithoutUserInput> | MedicationRecordCreateWithoutUserInput[] | MedicationRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutUserInput | MedicationRecordCreateOrConnectWithoutUserInput[]
    createMany?: MedicationRecordCreateManyUserInputEnvelope
    connect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
  }

  export type MileageRecordCreateNestedManyWithoutUserInput = {
    create?: XOR<MileageRecordCreateWithoutUserInput, MileageRecordUncheckedCreateWithoutUserInput> | MileageRecordCreateWithoutUserInput[] | MileageRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MileageRecordCreateOrConnectWithoutUserInput | MileageRecordCreateOrConnectWithoutUserInput[]
    createMany?: MileageRecordCreateManyUserInputEnvelope
    connect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
  }

  export type DocumentCreateNestedManyWithoutUserInput = {
    create?: XOR<DocumentCreateWithoutUserInput, DocumentUncheckedCreateWithoutUserInput> | DocumentCreateWithoutUserInput[] | DocumentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutUserInput | DocumentCreateOrConnectWithoutUserInput[]
    createMany?: DocumentCreateManyUserInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type IncidentReportCreateNestedManyWithoutReporterInput = {
    create?: XOR<IncidentReportCreateWithoutReporterInput, IncidentReportUncheckedCreateWithoutReporterInput> | IncidentReportCreateWithoutReporterInput[] | IncidentReportUncheckedCreateWithoutReporterInput[]
    connectOrCreate?: IncidentReportCreateOrConnectWithoutReporterInput | IncidentReportCreateOrConnectWithoutReporterInput[]
    createMany?: IncidentReportCreateManyReporterInputEnvelope
    connect?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
  }

  export type KeyContactCreateNestedManyWithoutClientInput = {
    create?: XOR<KeyContactCreateWithoutClientInput, KeyContactUncheckedCreateWithoutClientInput> | KeyContactCreateWithoutClientInput[] | KeyContactUncheckedCreateWithoutClientInput[]
    connectOrCreate?: KeyContactCreateOrConnectWithoutClientInput | KeyContactCreateOrConnectWithoutClientInput[]
    createMany?: KeyContactCreateManyClientInputEnvelope
    connect?: KeyContactWhereUniqueInput | KeyContactWhereUniqueInput[]
  }

  export type CareOutcomeCreateNestedManyWithoutClientInput = {
    create?: XOR<CareOutcomeCreateWithoutClientInput, CareOutcomeUncheckedCreateWithoutClientInput> | CareOutcomeCreateWithoutClientInput[] | CareOutcomeUncheckedCreateWithoutClientInput[]
    connectOrCreate?: CareOutcomeCreateOrConnectWithoutClientInput | CareOutcomeCreateOrConnectWithoutClientInput[]
    createMany?: CareOutcomeCreateManyClientInputEnvelope
    connect?: CareOutcomeWhereUniqueInput | CareOutcomeWhereUniqueInput[]
  }

  export type InvoiceCreateNestedManyWithoutClientInput = {
    create?: XOR<InvoiceCreateWithoutClientInput, InvoiceUncheckedCreateWithoutClientInput> | InvoiceCreateWithoutClientInput[] | InvoiceUncheckedCreateWithoutClientInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutClientInput | InvoiceCreateOrConnectWithoutClientInput[]
    createMany?: InvoiceCreateManyClientInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type DocumentCreateNestedManyWithoutClientInput = {
    create?: XOR<DocumentCreateWithoutClientInput, DocumentUncheckedCreateWithoutClientInput> | DocumentCreateWithoutClientInput[] | DocumentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutClientInput | DocumentCreateOrConnectWithoutClientInput[]
    createMany?: DocumentCreateManyClientInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type RiskAssessmentCreateNestedManyWithoutClientInput = {
    create?: XOR<RiskAssessmentCreateWithoutClientInput, RiskAssessmentUncheckedCreateWithoutClientInput> | RiskAssessmentCreateWithoutClientInput[] | RiskAssessmentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: RiskAssessmentCreateOrConnectWithoutClientInput | RiskAssessmentCreateOrConnectWithoutClientInput[]
    createMany?: RiskAssessmentCreateManyClientInputEnvelope
    connect?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
  }

  export type FamilyAccessCreateNestedManyWithoutClientInput = {
    create?: XOR<FamilyAccessCreateWithoutClientInput, FamilyAccessUncheckedCreateWithoutClientInput> | FamilyAccessCreateWithoutClientInput[] | FamilyAccessUncheckedCreateWithoutClientInput[]
    connectOrCreate?: FamilyAccessCreateOrConnectWithoutClientInput | FamilyAccessCreateOrConnectWithoutClientInput[]
    createMany?: FamilyAccessCreateManyClientInputEnvelope
    connect?: FamilyAccessWhereUniqueInput | FamilyAccessWhereUniqueInput[]
  }

  export type CommunicationLogCreateNestedManyWithoutClientInput = {
    create?: XOR<CommunicationLogCreateWithoutClientInput, CommunicationLogUncheckedCreateWithoutClientInput> | CommunicationLogCreateWithoutClientInput[] | CommunicationLogUncheckedCreateWithoutClientInput[]
    connectOrCreate?: CommunicationLogCreateOrConnectWithoutClientInput | CommunicationLogCreateOrConnectWithoutClientInput[]
    createMany?: CommunicationLogCreateManyClientInputEnvelope
    connect?: CommunicationLogWhereUniqueInput | CommunicationLogWhereUniqueInput[]
  }

  export type ReminderCreateNestedManyWithoutClientInput = {
    create?: XOR<ReminderCreateWithoutClientInput, ReminderUncheckedCreateWithoutClientInput> | ReminderCreateWithoutClientInput[] | ReminderUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ReminderCreateOrConnectWithoutClientInput | ReminderCreateOrConnectWithoutClientInput[]
    createMany?: ReminderCreateManyClientInputEnvelope
    connect?: ReminderWhereUniqueInput | ReminderWhereUniqueInput[]
  }

  export type MedicationAdministrationCreateNestedManyWithoutAdministeredByInput = {
    create?: XOR<MedicationAdministrationCreateWithoutAdministeredByInput, MedicationAdministrationUncheckedCreateWithoutAdministeredByInput> | MedicationAdministrationCreateWithoutAdministeredByInput[] | MedicationAdministrationUncheckedCreateWithoutAdministeredByInput[]
    connectOrCreate?: MedicationAdministrationCreateOrConnectWithoutAdministeredByInput | MedicationAdministrationCreateOrConnectWithoutAdministeredByInput[]
    createMany?: MedicationAdministrationCreateManyAdministeredByInputEnvelope
    connect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
  }

  export type ReportEditCreateNestedManyWithoutEditorInput = {
    create?: XOR<ReportEditCreateWithoutEditorInput, ReportEditUncheckedCreateWithoutEditorInput> | ReportEditCreateWithoutEditorInput[] | ReportEditUncheckedCreateWithoutEditorInput[]
    connectOrCreate?: ReportEditCreateOrConnectWithoutEditorInput | ReportEditCreateOrConnectWithoutEditorInput[]
    createMany?: ReportEditCreateManyEditorInputEnvelope
    connect?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
  }

  export type InvitationUncheckedCreateNestedManyWithoutInviterInput = {
    create?: XOR<InvitationCreateWithoutInviterInput, InvitationUncheckedCreateWithoutInviterInput> | InvitationCreateWithoutInviterInput[] | InvitationUncheckedCreateWithoutInviterInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutInviterInput | InvitationCreateOrConnectWithoutInviterInput[]
    createMany?: InvitationCreateManyInviterInputEnvelope
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutInvitedByInput = {
    create?: XOR<UserCreateWithoutInvitedByInput, UserUncheckedCreateWithoutInvitedByInput> | UserCreateWithoutInvitedByInput[] | UserUncheckedCreateWithoutInvitedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutInvitedByInput | UserCreateOrConnectWithoutInvitedByInput[]
    createMany?: UserCreateManyInvitedByInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<CommunicationPreferenceCreateWithoutUserInput, CommunicationPreferenceUncheckedCreateWithoutUserInput>
    connectOrCreate?: CommunicationPreferenceCreateOrConnectWithoutUserInput
    connect?: CommunicationPreferenceWhereUniqueInput
  }

  export type ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ClientCareAssignmentCreateWithoutUserInput, ClientCareAssignmentUncheckedCreateWithoutUserInput> | ClientCareAssignmentCreateWithoutUserInput[] | ClientCareAssignmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ClientCareAssignmentCreateOrConnectWithoutUserInput | ClientCareAssignmentCreateOrConnectWithoutUserInput[]
    createMany?: ClientCareAssignmentCreateManyUserInputEnvelope
    connect?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
  }

  export type ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<ClientCareAssignmentCreateWithoutClientInput, ClientCareAssignmentUncheckedCreateWithoutClientInput> | ClientCareAssignmentCreateWithoutClientInput[] | ClientCareAssignmentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ClientCareAssignmentCreateOrConnectWithoutClientInput | ClientCareAssignmentCreateOrConnectWithoutClientInput[]
    createMany?: ClientCareAssignmentCreateManyClientInputEnvelope
    connect?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
  }

  export type ScheduleUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ScheduleCreateWithoutUserInput, ScheduleUncheckedCreateWithoutUserInput> | ScheduleCreateWithoutUserInput[] | ScheduleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ScheduleCreateOrConnectWithoutUserInput | ScheduleCreateOrConnectWithoutUserInput[]
    createMany?: ScheduleCreateManyUserInputEnvelope
    connect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
  }

  export type ScheduleUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<ScheduleCreateWithoutClientInput, ScheduleUncheckedCreateWithoutClientInput> | ScheduleCreateWithoutClientInput[] | ScheduleUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ScheduleCreateOrConnectWithoutClientInput | ScheduleCreateOrConnectWithoutClientInput[]
    createMany?: ScheduleCreateManyClientInputEnvelope
    connect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
  }

  export type ReportUncheckedCreateNestedManyWithoutCaregiverInput = {
    create?: XOR<ReportCreateWithoutCaregiverInput, ReportUncheckedCreateWithoutCaregiverInput> | ReportCreateWithoutCaregiverInput[] | ReportUncheckedCreateWithoutCaregiverInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutCaregiverInput | ReportCreateOrConnectWithoutCaregiverInput[]
    createMany?: ReportCreateManyCaregiverInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type ReportUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<ReportCreateWithoutClientInput, ReportUncheckedCreateWithoutClientInput> | ReportCreateWithoutClientInput[] | ReportUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutClientInput | ReportCreateOrConnectWithoutClientInput[]
    createMany?: ReportCreateManyClientInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type MedicationRecordUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<MedicationRecordCreateWithoutUserInput, MedicationRecordUncheckedCreateWithoutUserInput> | MedicationRecordCreateWithoutUserInput[] | MedicationRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutUserInput | MedicationRecordCreateOrConnectWithoutUserInput[]
    createMany?: MedicationRecordCreateManyUserInputEnvelope
    connect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
  }

  export type MedicationRecordUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<MedicationRecordCreateWithoutClientInput, MedicationRecordUncheckedCreateWithoutClientInput> | MedicationRecordCreateWithoutClientInput[] | MedicationRecordUncheckedCreateWithoutClientInput[]
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutClientInput | MedicationRecordCreateOrConnectWithoutClientInput[]
    createMany?: MedicationRecordCreateManyClientInputEnvelope
    connect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
  }

  export type MileageRecordUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<MileageRecordCreateWithoutUserInput, MileageRecordUncheckedCreateWithoutUserInput> | MileageRecordCreateWithoutUserInput[] | MileageRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MileageRecordCreateOrConnectWithoutUserInput | MileageRecordCreateOrConnectWithoutUserInput[]
    createMany?: MileageRecordCreateManyUserInputEnvelope
    connect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
  }

  export type MileageRecordUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<MileageRecordCreateWithoutClientInput, MileageRecordUncheckedCreateWithoutClientInput> | MileageRecordCreateWithoutClientInput[] | MileageRecordUncheckedCreateWithoutClientInput[]
    connectOrCreate?: MileageRecordCreateOrConnectWithoutClientInput | MileageRecordCreateOrConnectWithoutClientInput[]
    createMany?: MileageRecordCreateManyClientInputEnvelope
    connect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
  }

  export type ProfileUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserInput
    connect?: ProfileWhereUniqueInput
  }

  export type MessageUncheckedCreateNestedManyWithoutSenderInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutReceiverInput = {
    create?: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput> | MessageCreateWithoutReceiverInput[] | MessageUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutReceiverInput | MessageCreateOrConnectWithoutReceiverInput[]
    createMany?: MessageCreateManyReceiverInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MedicationRecordUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<MedicationRecordCreateWithoutUserInput, MedicationRecordUncheckedCreateWithoutUserInput> | MedicationRecordCreateWithoutUserInput[] | MedicationRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutUserInput | MedicationRecordCreateOrConnectWithoutUserInput[]
    createMany?: MedicationRecordCreateManyUserInputEnvelope
    connect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
  }

  export type MileageRecordUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<MileageRecordCreateWithoutUserInput, MileageRecordUncheckedCreateWithoutUserInput> | MileageRecordCreateWithoutUserInput[] | MileageRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MileageRecordCreateOrConnectWithoutUserInput | MileageRecordCreateOrConnectWithoutUserInput[]
    createMany?: MileageRecordCreateManyUserInputEnvelope
    connect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
  }

  export type DocumentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<DocumentCreateWithoutUserInput, DocumentUncheckedCreateWithoutUserInput> | DocumentCreateWithoutUserInput[] | DocumentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutUserInput | DocumentCreateOrConnectWithoutUserInput[]
    createMany?: DocumentCreateManyUserInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type IncidentReportUncheckedCreateNestedManyWithoutReporterInput = {
    create?: XOR<IncidentReportCreateWithoutReporterInput, IncidentReportUncheckedCreateWithoutReporterInput> | IncidentReportCreateWithoutReporterInput[] | IncidentReportUncheckedCreateWithoutReporterInput[]
    connectOrCreate?: IncidentReportCreateOrConnectWithoutReporterInput | IncidentReportCreateOrConnectWithoutReporterInput[]
    createMany?: IncidentReportCreateManyReporterInputEnvelope
    connect?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
  }

  export type KeyContactUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<KeyContactCreateWithoutClientInput, KeyContactUncheckedCreateWithoutClientInput> | KeyContactCreateWithoutClientInput[] | KeyContactUncheckedCreateWithoutClientInput[]
    connectOrCreate?: KeyContactCreateOrConnectWithoutClientInput | KeyContactCreateOrConnectWithoutClientInput[]
    createMany?: KeyContactCreateManyClientInputEnvelope
    connect?: KeyContactWhereUniqueInput | KeyContactWhereUniqueInput[]
  }

  export type CareOutcomeUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<CareOutcomeCreateWithoutClientInput, CareOutcomeUncheckedCreateWithoutClientInput> | CareOutcomeCreateWithoutClientInput[] | CareOutcomeUncheckedCreateWithoutClientInput[]
    connectOrCreate?: CareOutcomeCreateOrConnectWithoutClientInput | CareOutcomeCreateOrConnectWithoutClientInput[]
    createMany?: CareOutcomeCreateManyClientInputEnvelope
    connect?: CareOutcomeWhereUniqueInput | CareOutcomeWhereUniqueInput[]
  }

  export type InvoiceUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<InvoiceCreateWithoutClientInput, InvoiceUncheckedCreateWithoutClientInput> | InvoiceCreateWithoutClientInput[] | InvoiceUncheckedCreateWithoutClientInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutClientInput | InvoiceCreateOrConnectWithoutClientInput[]
    createMany?: InvoiceCreateManyClientInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type DocumentUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<DocumentCreateWithoutClientInput, DocumentUncheckedCreateWithoutClientInput> | DocumentCreateWithoutClientInput[] | DocumentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutClientInput | DocumentCreateOrConnectWithoutClientInput[]
    createMany?: DocumentCreateManyClientInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type RiskAssessmentUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<RiskAssessmentCreateWithoutClientInput, RiskAssessmentUncheckedCreateWithoutClientInput> | RiskAssessmentCreateWithoutClientInput[] | RiskAssessmentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: RiskAssessmentCreateOrConnectWithoutClientInput | RiskAssessmentCreateOrConnectWithoutClientInput[]
    createMany?: RiskAssessmentCreateManyClientInputEnvelope
    connect?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
  }

  export type FamilyAccessUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<FamilyAccessCreateWithoutClientInput, FamilyAccessUncheckedCreateWithoutClientInput> | FamilyAccessCreateWithoutClientInput[] | FamilyAccessUncheckedCreateWithoutClientInput[]
    connectOrCreate?: FamilyAccessCreateOrConnectWithoutClientInput | FamilyAccessCreateOrConnectWithoutClientInput[]
    createMany?: FamilyAccessCreateManyClientInputEnvelope
    connect?: FamilyAccessWhereUniqueInput | FamilyAccessWhereUniqueInput[]
  }

  export type CommunicationLogUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<CommunicationLogCreateWithoutClientInput, CommunicationLogUncheckedCreateWithoutClientInput> | CommunicationLogCreateWithoutClientInput[] | CommunicationLogUncheckedCreateWithoutClientInput[]
    connectOrCreate?: CommunicationLogCreateOrConnectWithoutClientInput | CommunicationLogCreateOrConnectWithoutClientInput[]
    createMany?: CommunicationLogCreateManyClientInputEnvelope
    connect?: CommunicationLogWhereUniqueInput | CommunicationLogWhereUniqueInput[]
  }

  export type ReminderUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<ReminderCreateWithoutClientInput, ReminderUncheckedCreateWithoutClientInput> | ReminderCreateWithoutClientInput[] | ReminderUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ReminderCreateOrConnectWithoutClientInput | ReminderCreateOrConnectWithoutClientInput[]
    createMany?: ReminderCreateManyClientInputEnvelope
    connect?: ReminderWhereUniqueInput | ReminderWhereUniqueInput[]
  }

  export type MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput = {
    create?: XOR<MedicationAdministrationCreateWithoutAdministeredByInput, MedicationAdministrationUncheckedCreateWithoutAdministeredByInput> | MedicationAdministrationCreateWithoutAdministeredByInput[] | MedicationAdministrationUncheckedCreateWithoutAdministeredByInput[]
    connectOrCreate?: MedicationAdministrationCreateOrConnectWithoutAdministeredByInput | MedicationAdministrationCreateOrConnectWithoutAdministeredByInput[]
    createMany?: MedicationAdministrationCreateManyAdministeredByInputEnvelope
    connect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
  }

  export type ReportEditUncheckedCreateNestedManyWithoutEditorInput = {
    create?: XOR<ReportEditCreateWithoutEditorInput, ReportEditUncheckedCreateWithoutEditorInput> | ReportEditCreateWithoutEditorInput[] | ReportEditUncheckedCreateWithoutEditorInput[]
    connectOrCreate?: ReportEditCreateOrConnectWithoutEditorInput | ReportEditCreateOrConnectWithoutEditorInput[]
    createMany?: ReportEditCreateManyEditorInputEnvelope
    connect?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type InvitationUpdateManyWithoutInviterNestedInput = {
    create?: XOR<InvitationCreateWithoutInviterInput, InvitationUncheckedCreateWithoutInviterInput> | InvitationCreateWithoutInviterInput[] | InvitationUncheckedCreateWithoutInviterInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutInviterInput | InvitationCreateOrConnectWithoutInviterInput[]
    upsert?: InvitationUpsertWithWhereUniqueWithoutInviterInput | InvitationUpsertWithWhereUniqueWithoutInviterInput[]
    createMany?: InvitationCreateManyInviterInputEnvelope
    set?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    disconnect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    delete?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    update?: InvitationUpdateWithWhereUniqueWithoutInviterInput | InvitationUpdateWithWhereUniqueWithoutInviterInput[]
    updateMany?: InvitationUpdateManyWithWhereWithoutInviterInput | InvitationUpdateManyWithWhereWithoutInviterInput[]
    deleteMany?: InvitationScalarWhereInput | InvitationScalarWhereInput[]
  }

  export type AgencyUpdateOneWithoutUsersNestedInput = {
    create?: XOR<AgencyCreateWithoutUsersInput, AgencyUncheckedCreateWithoutUsersInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutUsersInput
    upsert?: AgencyUpsertWithoutUsersInput
    disconnect?: AgencyWhereInput | boolean
    delete?: AgencyWhereInput | boolean
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutUsersInput, AgencyUpdateWithoutUsersInput>, AgencyUncheckedUpdateWithoutUsersInput>
  }

  export type UserUpdateOneWithoutInvitedUsersNestedInput = {
    create?: XOR<UserCreateWithoutInvitedUsersInput, UserUncheckedCreateWithoutInvitedUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutInvitedUsersInput
    upsert?: UserUpsertWithoutInvitedUsersInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutInvitedUsersInput, UserUpdateWithoutInvitedUsersInput>, UserUncheckedUpdateWithoutInvitedUsersInput>
  }

  export type UserUpdateManyWithoutInvitedByNestedInput = {
    create?: XOR<UserCreateWithoutInvitedByInput, UserUncheckedCreateWithoutInvitedByInput> | UserCreateWithoutInvitedByInput[] | UserUncheckedCreateWithoutInvitedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutInvitedByInput | UserCreateOrConnectWithoutInvitedByInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutInvitedByInput | UserUpsertWithWhereUniqueWithoutInvitedByInput[]
    createMany?: UserCreateManyInvitedByInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutInvitedByInput | UserUpdateWithWhereUniqueWithoutInvitedByInput[]
    updateMany?: UserUpdateManyWithWhereWithoutInvitedByInput | UserUpdateManyWithWhereWithoutInvitedByInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type CommunicationPreferenceUpdateOneWithoutUserNestedInput = {
    create?: XOR<CommunicationPreferenceCreateWithoutUserInput, CommunicationPreferenceUncheckedCreateWithoutUserInput>
    connectOrCreate?: CommunicationPreferenceCreateOrConnectWithoutUserInput
    upsert?: CommunicationPreferenceUpsertWithoutUserInput
    disconnect?: CommunicationPreferenceWhereInput | boolean
    delete?: CommunicationPreferenceWhereInput | boolean
    connect?: CommunicationPreferenceWhereUniqueInput
    update?: XOR<XOR<CommunicationPreferenceUpdateToOneWithWhereWithoutUserInput, CommunicationPreferenceUpdateWithoutUserInput>, CommunicationPreferenceUncheckedUpdateWithoutUserInput>
  }

  export type ClientCareAssignmentUpdateManyWithoutUserNestedInput = {
    create?: XOR<ClientCareAssignmentCreateWithoutUserInput, ClientCareAssignmentUncheckedCreateWithoutUserInput> | ClientCareAssignmentCreateWithoutUserInput[] | ClientCareAssignmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ClientCareAssignmentCreateOrConnectWithoutUserInput | ClientCareAssignmentCreateOrConnectWithoutUserInput[]
    upsert?: ClientCareAssignmentUpsertWithWhereUniqueWithoutUserInput | ClientCareAssignmentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ClientCareAssignmentCreateManyUserInputEnvelope
    set?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
    disconnect?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
    delete?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
    connect?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
    update?: ClientCareAssignmentUpdateWithWhereUniqueWithoutUserInput | ClientCareAssignmentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ClientCareAssignmentUpdateManyWithWhereWithoutUserInput | ClientCareAssignmentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ClientCareAssignmentScalarWhereInput | ClientCareAssignmentScalarWhereInput[]
  }

  export type ClientCareAssignmentUpdateManyWithoutClientNestedInput = {
    create?: XOR<ClientCareAssignmentCreateWithoutClientInput, ClientCareAssignmentUncheckedCreateWithoutClientInput> | ClientCareAssignmentCreateWithoutClientInput[] | ClientCareAssignmentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ClientCareAssignmentCreateOrConnectWithoutClientInput | ClientCareAssignmentCreateOrConnectWithoutClientInput[]
    upsert?: ClientCareAssignmentUpsertWithWhereUniqueWithoutClientInput | ClientCareAssignmentUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ClientCareAssignmentCreateManyClientInputEnvelope
    set?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
    disconnect?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
    delete?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
    connect?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
    update?: ClientCareAssignmentUpdateWithWhereUniqueWithoutClientInput | ClientCareAssignmentUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ClientCareAssignmentUpdateManyWithWhereWithoutClientInput | ClientCareAssignmentUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ClientCareAssignmentScalarWhereInput | ClientCareAssignmentScalarWhereInput[]
  }

  export type ScheduleUpdateManyWithoutUserNestedInput = {
    create?: XOR<ScheduleCreateWithoutUserInput, ScheduleUncheckedCreateWithoutUserInput> | ScheduleCreateWithoutUserInput[] | ScheduleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ScheduleCreateOrConnectWithoutUserInput | ScheduleCreateOrConnectWithoutUserInput[]
    upsert?: ScheduleUpsertWithWhereUniqueWithoutUserInput | ScheduleUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ScheduleCreateManyUserInputEnvelope
    set?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    disconnect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    delete?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    connect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    update?: ScheduleUpdateWithWhereUniqueWithoutUserInput | ScheduleUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ScheduleUpdateManyWithWhereWithoutUserInput | ScheduleUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ScheduleScalarWhereInput | ScheduleScalarWhereInput[]
  }

  export type ScheduleUpdateManyWithoutClientNestedInput = {
    create?: XOR<ScheduleCreateWithoutClientInput, ScheduleUncheckedCreateWithoutClientInput> | ScheduleCreateWithoutClientInput[] | ScheduleUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ScheduleCreateOrConnectWithoutClientInput | ScheduleCreateOrConnectWithoutClientInput[]
    upsert?: ScheduleUpsertWithWhereUniqueWithoutClientInput | ScheduleUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ScheduleCreateManyClientInputEnvelope
    set?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    disconnect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    delete?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    connect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    update?: ScheduleUpdateWithWhereUniqueWithoutClientInput | ScheduleUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ScheduleUpdateManyWithWhereWithoutClientInput | ScheduleUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ScheduleScalarWhereInput | ScheduleScalarWhereInput[]
  }

  export type ReportUpdateManyWithoutCaregiverNestedInput = {
    create?: XOR<ReportCreateWithoutCaregiverInput, ReportUncheckedCreateWithoutCaregiverInput> | ReportCreateWithoutCaregiverInput[] | ReportUncheckedCreateWithoutCaregiverInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutCaregiverInput | ReportCreateOrConnectWithoutCaregiverInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutCaregiverInput | ReportUpsertWithWhereUniqueWithoutCaregiverInput[]
    createMany?: ReportCreateManyCaregiverInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutCaregiverInput | ReportUpdateWithWhereUniqueWithoutCaregiverInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutCaregiverInput | ReportUpdateManyWithWhereWithoutCaregiverInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type ReportUpdateManyWithoutClientNestedInput = {
    create?: XOR<ReportCreateWithoutClientInput, ReportUncheckedCreateWithoutClientInput> | ReportCreateWithoutClientInput[] | ReportUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutClientInput | ReportCreateOrConnectWithoutClientInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutClientInput | ReportUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ReportCreateManyClientInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutClientInput | ReportUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutClientInput | ReportUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type MedicationRecordUpdateManyWithoutUserNestedInput = {
    create?: XOR<MedicationRecordCreateWithoutUserInput, MedicationRecordUncheckedCreateWithoutUserInput> | MedicationRecordCreateWithoutUserInput[] | MedicationRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutUserInput | MedicationRecordCreateOrConnectWithoutUserInput[]
    upsert?: MedicationRecordUpsertWithWhereUniqueWithoutUserInput | MedicationRecordUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MedicationRecordCreateManyUserInputEnvelope
    set?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    disconnect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    delete?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    connect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    update?: MedicationRecordUpdateWithWhereUniqueWithoutUserInput | MedicationRecordUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MedicationRecordUpdateManyWithWhereWithoutUserInput | MedicationRecordUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MedicationRecordScalarWhereInput | MedicationRecordScalarWhereInput[]
  }

  export type MedicationRecordUpdateManyWithoutClientNestedInput = {
    create?: XOR<MedicationRecordCreateWithoutClientInput, MedicationRecordUncheckedCreateWithoutClientInput> | MedicationRecordCreateWithoutClientInput[] | MedicationRecordUncheckedCreateWithoutClientInput[]
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutClientInput | MedicationRecordCreateOrConnectWithoutClientInput[]
    upsert?: MedicationRecordUpsertWithWhereUniqueWithoutClientInput | MedicationRecordUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: MedicationRecordCreateManyClientInputEnvelope
    set?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    disconnect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    delete?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    connect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    update?: MedicationRecordUpdateWithWhereUniqueWithoutClientInput | MedicationRecordUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: MedicationRecordUpdateManyWithWhereWithoutClientInput | MedicationRecordUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: MedicationRecordScalarWhereInput | MedicationRecordScalarWhereInput[]
  }

  export type MileageRecordUpdateManyWithoutUserNestedInput = {
    create?: XOR<MileageRecordCreateWithoutUserInput, MileageRecordUncheckedCreateWithoutUserInput> | MileageRecordCreateWithoutUserInput[] | MileageRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MileageRecordCreateOrConnectWithoutUserInput | MileageRecordCreateOrConnectWithoutUserInput[]
    upsert?: MileageRecordUpsertWithWhereUniqueWithoutUserInput | MileageRecordUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MileageRecordCreateManyUserInputEnvelope
    set?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    disconnect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    delete?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    connect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    update?: MileageRecordUpdateWithWhereUniqueWithoutUserInput | MileageRecordUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MileageRecordUpdateManyWithWhereWithoutUserInput | MileageRecordUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MileageRecordScalarWhereInput | MileageRecordScalarWhereInput[]
  }

  export type MileageRecordUpdateManyWithoutClientNestedInput = {
    create?: XOR<MileageRecordCreateWithoutClientInput, MileageRecordUncheckedCreateWithoutClientInput> | MileageRecordCreateWithoutClientInput[] | MileageRecordUncheckedCreateWithoutClientInput[]
    connectOrCreate?: MileageRecordCreateOrConnectWithoutClientInput | MileageRecordCreateOrConnectWithoutClientInput[]
    upsert?: MileageRecordUpsertWithWhereUniqueWithoutClientInput | MileageRecordUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: MileageRecordCreateManyClientInputEnvelope
    set?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    disconnect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    delete?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    connect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    update?: MileageRecordUpdateWithWhereUniqueWithoutClientInput | MileageRecordUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: MileageRecordUpdateManyWithWhereWithoutClientInput | MileageRecordUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: MileageRecordScalarWhereInput | MileageRecordScalarWhereInput[]
  }

  export type ProfileUpdateOneWithoutUserNestedInput = {
    create?: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserInput
    upsert?: ProfileUpsertWithoutUserInput
    disconnect?: ProfileWhereInput | boolean
    delete?: ProfileWhereInput | boolean
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutUserInput, ProfileUpdateWithoutUserInput>, ProfileUncheckedUpdateWithoutUserInput>
  }

  export type MessageUpdateManyWithoutSenderNestedInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSenderInput | MessageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSenderInput | MessageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSenderInput | MessageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutReceiverNestedInput = {
    create?: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput> | MessageCreateWithoutReceiverInput[] | MessageUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutReceiverInput | MessageCreateOrConnectWithoutReceiverInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutReceiverInput | MessageUpsertWithWhereUniqueWithoutReceiverInput[]
    createMany?: MessageCreateManyReceiverInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutReceiverInput | MessageUpdateWithWhereUniqueWithoutReceiverInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutReceiverInput | MessageUpdateManyWithWhereWithoutReceiverInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MedicationRecordUpdateManyWithoutUserNestedInput = {
    create?: XOR<MedicationRecordCreateWithoutUserInput, MedicationRecordUncheckedCreateWithoutUserInput> | MedicationRecordCreateWithoutUserInput[] | MedicationRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutUserInput | MedicationRecordCreateOrConnectWithoutUserInput[]
    upsert?: MedicationRecordUpsertWithWhereUniqueWithoutUserInput | MedicationRecordUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MedicationRecordCreateManyUserInputEnvelope
    set?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    disconnect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    delete?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    connect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    update?: MedicationRecordUpdateWithWhereUniqueWithoutUserInput | MedicationRecordUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MedicationRecordUpdateManyWithWhereWithoutUserInput | MedicationRecordUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MedicationRecordScalarWhereInput | MedicationRecordScalarWhereInput[]
  }

  export type MileageRecordUpdateManyWithoutUserNestedInput = {
    create?: XOR<MileageRecordCreateWithoutUserInput, MileageRecordUncheckedCreateWithoutUserInput> | MileageRecordCreateWithoutUserInput[] | MileageRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MileageRecordCreateOrConnectWithoutUserInput | MileageRecordCreateOrConnectWithoutUserInput[]
    upsert?: MileageRecordUpsertWithWhereUniqueWithoutUserInput | MileageRecordUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MileageRecordCreateManyUserInputEnvelope
    set?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    disconnect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    delete?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    connect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    update?: MileageRecordUpdateWithWhereUniqueWithoutUserInput | MileageRecordUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MileageRecordUpdateManyWithWhereWithoutUserInput | MileageRecordUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MileageRecordScalarWhereInput | MileageRecordScalarWhereInput[]
  }

  export type DocumentUpdateManyWithoutUserNestedInput = {
    create?: XOR<DocumentCreateWithoutUserInput, DocumentUncheckedCreateWithoutUserInput> | DocumentCreateWithoutUserInput[] | DocumentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutUserInput | DocumentCreateOrConnectWithoutUserInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutUserInput | DocumentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DocumentCreateManyUserInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutUserInput | DocumentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutUserInput | DocumentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type IncidentReportUpdateManyWithoutReporterNestedInput = {
    create?: XOR<IncidentReportCreateWithoutReporterInput, IncidentReportUncheckedCreateWithoutReporterInput> | IncidentReportCreateWithoutReporterInput[] | IncidentReportUncheckedCreateWithoutReporterInput[]
    connectOrCreate?: IncidentReportCreateOrConnectWithoutReporterInput | IncidentReportCreateOrConnectWithoutReporterInput[]
    upsert?: IncidentReportUpsertWithWhereUniqueWithoutReporterInput | IncidentReportUpsertWithWhereUniqueWithoutReporterInput[]
    createMany?: IncidentReportCreateManyReporterInputEnvelope
    set?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
    disconnect?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
    delete?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
    connect?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
    update?: IncidentReportUpdateWithWhereUniqueWithoutReporterInput | IncidentReportUpdateWithWhereUniqueWithoutReporterInput[]
    updateMany?: IncidentReportUpdateManyWithWhereWithoutReporterInput | IncidentReportUpdateManyWithWhereWithoutReporterInput[]
    deleteMany?: IncidentReportScalarWhereInput | IncidentReportScalarWhereInput[]
  }

  export type KeyContactUpdateManyWithoutClientNestedInput = {
    create?: XOR<KeyContactCreateWithoutClientInput, KeyContactUncheckedCreateWithoutClientInput> | KeyContactCreateWithoutClientInput[] | KeyContactUncheckedCreateWithoutClientInput[]
    connectOrCreate?: KeyContactCreateOrConnectWithoutClientInput | KeyContactCreateOrConnectWithoutClientInput[]
    upsert?: KeyContactUpsertWithWhereUniqueWithoutClientInput | KeyContactUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: KeyContactCreateManyClientInputEnvelope
    set?: KeyContactWhereUniqueInput | KeyContactWhereUniqueInput[]
    disconnect?: KeyContactWhereUniqueInput | KeyContactWhereUniqueInput[]
    delete?: KeyContactWhereUniqueInput | KeyContactWhereUniqueInput[]
    connect?: KeyContactWhereUniqueInput | KeyContactWhereUniqueInput[]
    update?: KeyContactUpdateWithWhereUniqueWithoutClientInput | KeyContactUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: KeyContactUpdateManyWithWhereWithoutClientInput | KeyContactUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: KeyContactScalarWhereInput | KeyContactScalarWhereInput[]
  }

  export type CareOutcomeUpdateManyWithoutClientNestedInput = {
    create?: XOR<CareOutcomeCreateWithoutClientInput, CareOutcomeUncheckedCreateWithoutClientInput> | CareOutcomeCreateWithoutClientInput[] | CareOutcomeUncheckedCreateWithoutClientInput[]
    connectOrCreate?: CareOutcomeCreateOrConnectWithoutClientInput | CareOutcomeCreateOrConnectWithoutClientInput[]
    upsert?: CareOutcomeUpsertWithWhereUniqueWithoutClientInput | CareOutcomeUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: CareOutcomeCreateManyClientInputEnvelope
    set?: CareOutcomeWhereUniqueInput | CareOutcomeWhereUniqueInput[]
    disconnect?: CareOutcomeWhereUniqueInput | CareOutcomeWhereUniqueInput[]
    delete?: CareOutcomeWhereUniqueInput | CareOutcomeWhereUniqueInput[]
    connect?: CareOutcomeWhereUniqueInput | CareOutcomeWhereUniqueInput[]
    update?: CareOutcomeUpdateWithWhereUniqueWithoutClientInput | CareOutcomeUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: CareOutcomeUpdateManyWithWhereWithoutClientInput | CareOutcomeUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: CareOutcomeScalarWhereInput | CareOutcomeScalarWhereInput[]
  }

  export type InvoiceUpdateManyWithoutClientNestedInput = {
    create?: XOR<InvoiceCreateWithoutClientInput, InvoiceUncheckedCreateWithoutClientInput> | InvoiceCreateWithoutClientInput[] | InvoiceUncheckedCreateWithoutClientInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutClientInput | InvoiceCreateOrConnectWithoutClientInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutClientInput | InvoiceUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: InvoiceCreateManyClientInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutClientInput | InvoiceUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutClientInput | InvoiceUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type DocumentUpdateManyWithoutClientNestedInput = {
    create?: XOR<DocumentCreateWithoutClientInput, DocumentUncheckedCreateWithoutClientInput> | DocumentCreateWithoutClientInput[] | DocumentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutClientInput | DocumentCreateOrConnectWithoutClientInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutClientInput | DocumentUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: DocumentCreateManyClientInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutClientInput | DocumentUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutClientInput | DocumentUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type RiskAssessmentUpdateManyWithoutClientNestedInput = {
    create?: XOR<RiskAssessmentCreateWithoutClientInput, RiskAssessmentUncheckedCreateWithoutClientInput> | RiskAssessmentCreateWithoutClientInput[] | RiskAssessmentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: RiskAssessmentCreateOrConnectWithoutClientInput | RiskAssessmentCreateOrConnectWithoutClientInput[]
    upsert?: RiskAssessmentUpsertWithWhereUniqueWithoutClientInput | RiskAssessmentUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: RiskAssessmentCreateManyClientInputEnvelope
    set?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
    disconnect?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
    delete?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
    connect?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
    update?: RiskAssessmentUpdateWithWhereUniqueWithoutClientInput | RiskAssessmentUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: RiskAssessmentUpdateManyWithWhereWithoutClientInput | RiskAssessmentUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: RiskAssessmentScalarWhereInput | RiskAssessmentScalarWhereInput[]
  }

  export type FamilyAccessUpdateManyWithoutClientNestedInput = {
    create?: XOR<FamilyAccessCreateWithoutClientInput, FamilyAccessUncheckedCreateWithoutClientInput> | FamilyAccessCreateWithoutClientInput[] | FamilyAccessUncheckedCreateWithoutClientInput[]
    connectOrCreate?: FamilyAccessCreateOrConnectWithoutClientInput | FamilyAccessCreateOrConnectWithoutClientInput[]
    upsert?: FamilyAccessUpsertWithWhereUniqueWithoutClientInput | FamilyAccessUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: FamilyAccessCreateManyClientInputEnvelope
    set?: FamilyAccessWhereUniqueInput | FamilyAccessWhereUniqueInput[]
    disconnect?: FamilyAccessWhereUniqueInput | FamilyAccessWhereUniqueInput[]
    delete?: FamilyAccessWhereUniqueInput | FamilyAccessWhereUniqueInput[]
    connect?: FamilyAccessWhereUniqueInput | FamilyAccessWhereUniqueInput[]
    update?: FamilyAccessUpdateWithWhereUniqueWithoutClientInput | FamilyAccessUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: FamilyAccessUpdateManyWithWhereWithoutClientInput | FamilyAccessUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: FamilyAccessScalarWhereInput | FamilyAccessScalarWhereInput[]
  }

  export type CommunicationLogUpdateManyWithoutClientNestedInput = {
    create?: XOR<CommunicationLogCreateWithoutClientInput, CommunicationLogUncheckedCreateWithoutClientInput> | CommunicationLogCreateWithoutClientInput[] | CommunicationLogUncheckedCreateWithoutClientInput[]
    connectOrCreate?: CommunicationLogCreateOrConnectWithoutClientInput | CommunicationLogCreateOrConnectWithoutClientInput[]
    upsert?: CommunicationLogUpsertWithWhereUniqueWithoutClientInput | CommunicationLogUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: CommunicationLogCreateManyClientInputEnvelope
    set?: CommunicationLogWhereUniqueInput | CommunicationLogWhereUniqueInput[]
    disconnect?: CommunicationLogWhereUniqueInput | CommunicationLogWhereUniqueInput[]
    delete?: CommunicationLogWhereUniqueInput | CommunicationLogWhereUniqueInput[]
    connect?: CommunicationLogWhereUniqueInput | CommunicationLogWhereUniqueInput[]
    update?: CommunicationLogUpdateWithWhereUniqueWithoutClientInput | CommunicationLogUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: CommunicationLogUpdateManyWithWhereWithoutClientInput | CommunicationLogUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: CommunicationLogScalarWhereInput | CommunicationLogScalarWhereInput[]
  }

  export type ReminderUpdateManyWithoutClientNestedInput = {
    create?: XOR<ReminderCreateWithoutClientInput, ReminderUncheckedCreateWithoutClientInput> | ReminderCreateWithoutClientInput[] | ReminderUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ReminderCreateOrConnectWithoutClientInput | ReminderCreateOrConnectWithoutClientInput[]
    upsert?: ReminderUpsertWithWhereUniqueWithoutClientInput | ReminderUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ReminderCreateManyClientInputEnvelope
    set?: ReminderWhereUniqueInput | ReminderWhereUniqueInput[]
    disconnect?: ReminderWhereUniqueInput | ReminderWhereUniqueInput[]
    delete?: ReminderWhereUniqueInput | ReminderWhereUniqueInput[]
    connect?: ReminderWhereUniqueInput | ReminderWhereUniqueInput[]
    update?: ReminderUpdateWithWhereUniqueWithoutClientInput | ReminderUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ReminderUpdateManyWithWhereWithoutClientInput | ReminderUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ReminderScalarWhereInput | ReminderScalarWhereInput[]
  }

  export type MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput = {
    create?: XOR<MedicationAdministrationCreateWithoutAdministeredByInput, MedicationAdministrationUncheckedCreateWithoutAdministeredByInput> | MedicationAdministrationCreateWithoutAdministeredByInput[] | MedicationAdministrationUncheckedCreateWithoutAdministeredByInput[]
    connectOrCreate?: MedicationAdministrationCreateOrConnectWithoutAdministeredByInput | MedicationAdministrationCreateOrConnectWithoutAdministeredByInput[]
    upsert?: MedicationAdministrationUpsertWithWhereUniqueWithoutAdministeredByInput | MedicationAdministrationUpsertWithWhereUniqueWithoutAdministeredByInput[]
    createMany?: MedicationAdministrationCreateManyAdministeredByInputEnvelope
    set?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    disconnect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    delete?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    connect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    update?: MedicationAdministrationUpdateWithWhereUniqueWithoutAdministeredByInput | MedicationAdministrationUpdateWithWhereUniqueWithoutAdministeredByInput[]
    updateMany?: MedicationAdministrationUpdateManyWithWhereWithoutAdministeredByInput | MedicationAdministrationUpdateManyWithWhereWithoutAdministeredByInput[]
    deleteMany?: MedicationAdministrationScalarWhereInput | MedicationAdministrationScalarWhereInput[]
  }

  export type ReportEditUpdateManyWithoutEditorNestedInput = {
    create?: XOR<ReportEditCreateWithoutEditorInput, ReportEditUncheckedCreateWithoutEditorInput> | ReportEditCreateWithoutEditorInput[] | ReportEditUncheckedCreateWithoutEditorInput[]
    connectOrCreate?: ReportEditCreateOrConnectWithoutEditorInput | ReportEditCreateOrConnectWithoutEditorInput[]
    upsert?: ReportEditUpsertWithWhereUniqueWithoutEditorInput | ReportEditUpsertWithWhereUniqueWithoutEditorInput[]
    createMany?: ReportEditCreateManyEditorInputEnvelope
    set?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
    disconnect?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
    delete?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
    connect?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
    update?: ReportEditUpdateWithWhereUniqueWithoutEditorInput | ReportEditUpdateWithWhereUniqueWithoutEditorInput[]
    updateMany?: ReportEditUpdateManyWithWhereWithoutEditorInput | ReportEditUpdateManyWithWhereWithoutEditorInput[]
    deleteMany?: ReportEditScalarWhereInput | ReportEditScalarWhereInput[]
  }

  export type InvitationUncheckedUpdateManyWithoutInviterNestedInput = {
    create?: XOR<InvitationCreateWithoutInviterInput, InvitationUncheckedCreateWithoutInviterInput> | InvitationCreateWithoutInviterInput[] | InvitationUncheckedCreateWithoutInviterInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutInviterInput | InvitationCreateOrConnectWithoutInviterInput[]
    upsert?: InvitationUpsertWithWhereUniqueWithoutInviterInput | InvitationUpsertWithWhereUniqueWithoutInviterInput[]
    createMany?: InvitationCreateManyInviterInputEnvelope
    set?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    disconnect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    delete?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    update?: InvitationUpdateWithWhereUniqueWithoutInviterInput | InvitationUpdateWithWhereUniqueWithoutInviterInput[]
    updateMany?: InvitationUpdateManyWithWhereWithoutInviterInput | InvitationUpdateManyWithWhereWithoutInviterInput[]
    deleteMany?: InvitationScalarWhereInput | InvitationScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutInvitedByNestedInput = {
    create?: XOR<UserCreateWithoutInvitedByInput, UserUncheckedCreateWithoutInvitedByInput> | UserCreateWithoutInvitedByInput[] | UserUncheckedCreateWithoutInvitedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutInvitedByInput | UserCreateOrConnectWithoutInvitedByInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutInvitedByInput | UserUpsertWithWhereUniqueWithoutInvitedByInput[]
    createMany?: UserCreateManyInvitedByInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutInvitedByInput | UserUpdateWithWhereUniqueWithoutInvitedByInput[]
    updateMany?: UserUpdateManyWithWhereWithoutInvitedByInput | UserUpdateManyWithWhereWithoutInvitedByInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<CommunicationPreferenceCreateWithoutUserInput, CommunicationPreferenceUncheckedCreateWithoutUserInput>
    connectOrCreate?: CommunicationPreferenceCreateOrConnectWithoutUserInput
    upsert?: CommunicationPreferenceUpsertWithoutUserInput
    disconnect?: CommunicationPreferenceWhereInput | boolean
    delete?: CommunicationPreferenceWhereInput | boolean
    connect?: CommunicationPreferenceWhereUniqueInput
    update?: XOR<XOR<CommunicationPreferenceUpdateToOneWithWhereWithoutUserInput, CommunicationPreferenceUpdateWithoutUserInput>, CommunicationPreferenceUncheckedUpdateWithoutUserInput>
  }

  export type ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ClientCareAssignmentCreateWithoutUserInput, ClientCareAssignmentUncheckedCreateWithoutUserInput> | ClientCareAssignmentCreateWithoutUserInput[] | ClientCareAssignmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ClientCareAssignmentCreateOrConnectWithoutUserInput | ClientCareAssignmentCreateOrConnectWithoutUserInput[]
    upsert?: ClientCareAssignmentUpsertWithWhereUniqueWithoutUserInput | ClientCareAssignmentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ClientCareAssignmentCreateManyUserInputEnvelope
    set?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
    disconnect?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
    delete?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
    connect?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
    update?: ClientCareAssignmentUpdateWithWhereUniqueWithoutUserInput | ClientCareAssignmentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ClientCareAssignmentUpdateManyWithWhereWithoutUserInput | ClientCareAssignmentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ClientCareAssignmentScalarWhereInput | ClientCareAssignmentScalarWhereInput[]
  }

  export type ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<ClientCareAssignmentCreateWithoutClientInput, ClientCareAssignmentUncheckedCreateWithoutClientInput> | ClientCareAssignmentCreateWithoutClientInput[] | ClientCareAssignmentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ClientCareAssignmentCreateOrConnectWithoutClientInput | ClientCareAssignmentCreateOrConnectWithoutClientInput[]
    upsert?: ClientCareAssignmentUpsertWithWhereUniqueWithoutClientInput | ClientCareAssignmentUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ClientCareAssignmentCreateManyClientInputEnvelope
    set?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
    disconnect?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
    delete?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
    connect?: ClientCareAssignmentWhereUniqueInput | ClientCareAssignmentWhereUniqueInput[]
    update?: ClientCareAssignmentUpdateWithWhereUniqueWithoutClientInput | ClientCareAssignmentUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ClientCareAssignmentUpdateManyWithWhereWithoutClientInput | ClientCareAssignmentUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ClientCareAssignmentScalarWhereInput | ClientCareAssignmentScalarWhereInput[]
  }

  export type ScheduleUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ScheduleCreateWithoutUserInput, ScheduleUncheckedCreateWithoutUserInput> | ScheduleCreateWithoutUserInput[] | ScheduleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ScheduleCreateOrConnectWithoutUserInput | ScheduleCreateOrConnectWithoutUserInput[]
    upsert?: ScheduleUpsertWithWhereUniqueWithoutUserInput | ScheduleUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ScheduleCreateManyUserInputEnvelope
    set?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    disconnect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    delete?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    connect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    update?: ScheduleUpdateWithWhereUniqueWithoutUserInput | ScheduleUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ScheduleUpdateManyWithWhereWithoutUserInput | ScheduleUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ScheduleScalarWhereInput | ScheduleScalarWhereInput[]
  }

  export type ScheduleUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<ScheduleCreateWithoutClientInput, ScheduleUncheckedCreateWithoutClientInput> | ScheduleCreateWithoutClientInput[] | ScheduleUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ScheduleCreateOrConnectWithoutClientInput | ScheduleCreateOrConnectWithoutClientInput[]
    upsert?: ScheduleUpsertWithWhereUniqueWithoutClientInput | ScheduleUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ScheduleCreateManyClientInputEnvelope
    set?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    disconnect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    delete?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    connect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    update?: ScheduleUpdateWithWhereUniqueWithoutClientInput | ScheduleUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ScheduleUpdateManyWithWhereWithoutClientInput | ScheduleUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ScheduleScalarWhereInput | ScheduleScalarWhereInput[]
  }

  export type ReportUncheckedUpdateManyWithoutCaregiverNestedInput = {
    create?: XOR<ReportCreateWithoutCaregiverInput, ReportUncheckedCreateWithoutCaregiverInput> | ReportCreateWithoutCaregiverInput[] | ReportUncheckedCreateWithoutCaregiverInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutCaregiverInput | ReportCreateOrConnectWithoutCaregiverInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutCaregiverInput | ReportUpsertWithWhereUniqueWithoutCaregiverInput[]
    createMany?: ReportCreateManyCaregiverInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutCaregiverInput | ReportUpdateWithWhereUniqueWithoutCaregiverInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutCaregiverInput | ReportUpdateManyWithWhereWithoutCaregiverInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type ReportUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<ReportCreateWithoutClientInput, ReportUncheckedCreateWithoutClientInput> | ReportCreateWithoutClientInput[] | ReportUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutClientInput | ReportCreateOrConnectWithoutClientInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutClientInput | ReportUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ReportCreateManyClientInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutClientInput | ReportUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutClientInput | ReportUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type MedicationRecordUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<MedicationRecordCreateWithoutUserInput, MedicationRecordUncheckedCreateWithoutUserInput> | MedicationRecordCreateWithoutUserInput[] | MedicationRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutUserInput | MedicationRecordCreateOrConnectWithoutUserInput[]
    upsert?: MedicationRecordUpsertWithWhereUniqueWithoutUserInput | MedicationRecordUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MedicationRecordCreateManyUserInputEnvelope
    set?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    disconnect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    delete?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    connect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    update?: MedicationRecordUpdateWithWhereUniqueWithoutUserInput | MedicationRecordUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MedicationRecordUpdateManyWithWhereWithoutUserInput | MedicationRecordUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MedicationRecordScalarWhereInput | MedicationRecordScalarWhereInput[]
  }

  export type MedicationRecordUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<MedicationRecordCreateWithoutClientInput, MedicationRecordUncheckedCreateWithoutClientInput> | MedicationRecordCreateWithoutClientInput[] | MedicationRecordUncheckedCreateWithoutClientInput[]
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutClientInput | MedicationRecordCreateOrConnectWithoutClientInput[]
    upsert?: MedicationRecordUpsertWithWhereUniqueWithoutClientInput | MedicationRecordUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: MedicationRecordCreateManyClientInputEnvelope
    set?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    disconnect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    delete?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    connect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    update?: MedicationRecordUpdateWithWhereUniqueWithoutClientInput | MedicationRecordUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: MedicationRecordUpdateManyWithWhereWithoutClientInput | MedicationRecordUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: MedicationRecordScalarWhereInput | MedicationRecordScalarWhereInput[]
  }

  export type MileageRecordUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<MileageRecordCreateWithoutUserInput, MileageRecordUncheckedCreateWithoutUserInput> | MileageRecordCreateWithoutUserInput[] | MileageRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MileageRecordCreateOrConnectWithoutUserInput | MileageRecordCreateOrConnectWithoutUserInput[]
    upsert?: MileageRecordUpsertWithWhereUniqueWithoutUserInput | MileageRecordUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MileageRecordCreateManyUserInputEnvelope
    set?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    disconnect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    delete?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    connect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    update?: MileageRecordUpdateWithWhereUniqueWithoutUserInput | MileageRecordUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MileageRecordUpdateManyWithWhereWithoutUserInput | MileageRecordUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MileageRecordScalarWhereInput | MileageRecordScalarWhereInput[]
  }

  export type MileageRecordUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<MileageRecordCreateWithoutClientInput, MileageRecordUncheckedCreateWithoutClientInput> | MileageRecordCreateWithoutClientInput[] | MileageRecordUncheckedCreateWithoutClientInput[]
    connectOrCreate?: MileageRecordCreateOrConnectWithoutClientInput | MileageRecordCreateOrConnectWithoutClientInput[]
    upsert?: MileageRecordUpsertWithWhereUniqueWithoutClientInput | MileageRecordUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: MileageRecordCreateManyClientInputEnvelope
    set?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    disconnect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    delete?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    connect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    update?: MileageRecordUpdateWithWhereUniqueWithoutClientInput | MileageRecordUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: MileageRecordUpdateManyWithWhereWithoutClientInput | MileageRecordUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: MileageRecordScalarWhereInput | MileageRecordScalarWhereInput[]
  }

  export type ProfileUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserInput
    upsert?: ProfileUpsertWithoutUserInput
    disconnect?: ProfileWhereInput | boolean
    delete?: ProfileWhereInput | boolean
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutUserInput, ProfileUpdateWithoutUserInput>, ProfileUncheckedUpdateWithoutUserInput>
  }

  export type MessageUncheckedUpdateManyWithoutSenderNestedInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSenderInput | MessageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSenderInput | MessageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSenderInput | MessageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutReceiverNestedInput = {
    create?: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput> | MessageCreateWithoutReceiverInput[] | MessageUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutReceiverInput | MessageCreateOrConnectWithoutReceiverInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutReceiverInput | MessageUpsertWithWhereUniqueWithoutReceiverInput[]
    createMany?: MessageCreateManyReceiverInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutReceiverInput | MessageUpdateWithWhereUniqueWithoutReceiverInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutReceiverInput | MessageUpdateManyWithWhereWithoutReceiverInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MedicationRecordUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<MedicationRecordCreateWithoutUserInput, MedicationRecordUncheckedCreateWithoutUserInput> | MedicationRecordCreateWithoutUserInput[] | MedicationRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutUserInput | MedicationRecordCreateOrConnectWithoutUserInput[]
    upsert?: MedicationRecordUpsertWithWhereUniqueWithoutUserInput | MedicationRecordUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MedicationRecordCreateManyUserInputEnvelope
    set?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    disconnect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    delete?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    connect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    update?: MedicationRecordUpdateWithWhereUniqueWithoutUserInput | MedicationRecordUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MedicationRecordUpdateManyWithWhereWithoutUserInput | MedicationRecordUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MedicationRecordScalarWhereInput | MedicationRecordScalarWhereInput[]
  }

  export type MileageRecordUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<MileageRecordCreateWithoutUserInput, MileageRecordUncheckedCreateWithoutUserInput> | MileageRecordCreateWithoutUserInput[] | MileageRecordUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MileageRecordCreateOrConnectWithoutUserInput | MileageRecordCreateOrConnectWithoutUserInput[]
    upsert?: MileageRecordUpsertWithWhereUniqueWithoutUserInput | MileageRecordUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MileageRecordCreateManyUserInputEnvelope
    set?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    disconnect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    delete?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    connect?: MileageRecordWhereUniqueInput | MileageRecordWhereUniqueInput[]
    update?: MileageRecordUpdateWithWhereUniqueWithoutUserInput | MileageRecordUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MileageRecordUpdateManyWithWhereWithoutUserInput | MileageRecordUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MileageRecordScalarWhereInput | MileageRecordScalarWhereInput[]
  }

  export type DocumentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<DocumentCreateWithoutUserInput, DocumentUncheckedCreateWithoutUserInput> | DocumentCreateWithoutUserInput[] | DocumentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutUserInput | DocumentCreateOrConnectWithoutUserInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutUserInput | DocumentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DocumentCreateManyUserInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutUserInput | DocumentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutUserInput | DocumentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type IncidentReportUncheckedUpdateManyWithoutReporterNestedInput = {
    create?: XOR<IncidentReportCreateWithoutReporterInput, IncidentReportUncheckedCreateWithoutReporterInput> | IncidentReportCreateWithoutReporterInput[] | IncidentReportUncheckedCreateWithoutReporterInput[]
    connectOrCreate?: IncidentReportCreateOrConnectWithoutReporterInput | IncidentReportCreateOrConnectWithoutReporterInput[]
    upsert?: IncidentReportUpsertWithWhereUniqueWithoutReporterInput | IncidentReportUpsertWithWhereUniqueWithoutReporterInput[]
    createMany?: IncidentReportCreateManyReporterInputEnvelope
    set?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
    disconnect?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
    delete?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
    connect?: IncidentReportWhereUniqueInput | IncidentReportWhereUniqueInput[]
    update?: IncidentReportUpdateWithWhereUniqueWithoutReporterInput | IncidentReportUpdateWithWhereUniqueWithoutReporterInput[]
    updateMany?: IncidentReportUpdateManyWithWhereWithoutReporterInput | IncidentReportUpdateManyWithWhereWithoutReporterInput[]
    deleteMany?: IncidentReportScalarWhereInput | IncidentReportScalarWhereInput[]
  }

  export type KeyContactUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<KeyContactCreateWithoutClientInput, KeyContactUncheckedCreateWithoutClientInput> | KeyContactCreateWithoutClientInput[] | KeyContactUncheckedCreateWithoutClientInput[]
    connectOrCreate?: KeyContactCreateOrConnectWithoutClientInput | KeyContactCreateOrConnectWithoutClientInput[]
    upsert?: KeyContactUpsertWithWhereUniqueWithoutClientInput | KeyContactUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: KeyContactCreateManyClientInputEnvelope
    set?: KeyContactWhereUniqueInput | KeyContactWhereUniqueInput[]
    disconnect?: KeyContactWhereUniqueInput | KeyContactWhereUniqueInput[]
    delete?: KeyContactWhereUniqueInput | KeyContactWhereUniqueInput[]
    connect?: KeyContactWhereUniqueInput | KeyContactWhereUniqueInput[]
    update?: KeyContactUpdateWithWhereUniqueWithoutClientInput | KeyContactUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: KeyContactUpdateManyWithWhereWithoutClientInput | KeyContactUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: KeyContactScalarWhereInput | KeyContactScalarWhereInput[]
  }

  export type CareOutcomeUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<CareOutcomeCreateWithoutClientInput, CareOutcomeUncheckedCreateWithoutClientInput> | CareOutcomeCreateWithoutClientInput[] | CareOutcomeUncheckedCreateWithoutClientInput[]
    connectOrCreate?: CareOutcomeCreateOrConnectWithoutClientInput | CareOutcomeCreateOrConnectWithoutClientInput[]
    upsert?: CareOutcomeUpsertWithWhereUniqueWithoutClientInput | CareOutcomeUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: CareOutcomeCreateManyClientInputEnvelope
    set?: CareOutcomeWhereUniqueInput | CareOutcomeWhereUniqueInput[]
    disconnect?: CareOutcomeWhereUniqueInput | CareOutcomeWhereUniqueInput[]
    delete?: CareOutcomeWhereUniqueInput | CareOutcomeWhereUniqueInput[]
    connect?: CareOutcomeWhereUniqueInput | CareOutcomeWhereUniqueInput[]
    update?: CareOutcomeUpdateWithWhereUniqueWithoutClientInput | CareOutcomeUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: CareOutcomeUpdateManyWithWhereWithoutClientInput | CareOutcomeUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: CareOutcomeScalarWhereInput | CareOutcomeScalarWhereInput[]
  }

  export type InvoiceUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<InvoiceCreateWithoutClientInput, InvoiceUncheckedCreateWithoutClientInput> | InvoiceCreateWithoutClientInput[] | InvoiceUncheckedCreateWithoutClientInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutClientInput | InvoiceCreateOrConnectWithoutClientInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutClientInput | InvoiceUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: InvoiceCreateManyClientInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutClientInput | InvoiceUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutClientInput | InvoiceUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type DocumentUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<DocumentCreateWithoutClientInput, DocumentUncheckedCreateWithoutClientInput> | DocumentCreateWithoutClientInput[] | DocumentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutClientInput | DocumentCreateOrConnectWithoutClientInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutClientInput | DocumentUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: DocumentCreateManyClientInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutClientInput | DocumentUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutClientInput | DocumentUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<RiskAssessmentCreateWithoutClientInput, RiskAssessmentUncheckedCreateWithoutClientInput> | RiskAssessmentCreateWithoutClientInput[] | RiskAssessmentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: RiskAssessmentCreateOrConnectWithoutClientInput | RiskAssessmentCreateOrConnectWithoutClientInput[]
    upsert?: RiskAssessmentUpsertWithWhereUniqueWithoutClientInput | RiskAssessmentUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: RiskAssessmentCreateManyClientInputEnvelope
    set?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
    disconnect?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
    delete?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
    connect?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
    update?: RiskAssessmentUpdateWithWhereUniqueWithoutClientInput | RiskAssessmentUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: RiskAssessmentUpdateManyWithWhereWithoutClientInput | RiskAssessmentUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: RiskAssessmentScalarWhereInput | RiskAssessmentScalarWhereInput[]
  }

  export type FamilyAccessUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<FamilyAccessCreateWithoutClientInput, FamilyAccessUncheckedCreateWithoutClientInput> | FamilyAccessCreateWithoutClientInput[] | FamilyAccessUncheckedCreateWithoutClientInput[]
    connectOrCreate?: FamilyAccessCreateOrConnectWithoutClientInput | FamilyAccessCreateOrConnectWithoutClientInput[]
    upsert?: FamilyAccessUpsertWithWhereUniqueWithoutClientInput | FamilyAccessUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: FamilyAccessCreateManyClientInputEnvelope
    set?: FamilyAccessWhereUniqueInput | FamilyAccessWhereUniqueInput[]
    disconnect?: FamilyAccessWhereUniqueInput | FamilyAccessWhereUniqueInput[]
    delete?: FamilyAccessWhereUniqueInput | FamilyAccessWhereUniqueInput[]
    connect?: FamilyAccessWhereUniqueInput | FamilyAccessWhereUniqueInput[]
    update?: FamilyAccessUpdateWithWhereUniqueWithoutClientInput | FamilyAccessUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: FamilyAccessUpdateManyWithWhereWithoutClientInput | FamilyAccessUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: FamilyAccessScalarWhereInput | FamilyAccessScalarWhereInput[]
  }

  export type CommunicationLogUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<CommunicationLogCreateWithoutClientInput, CommunicationLogUncheckedCreateWithoutClientInput> | CommunicationLogCreateWithoutClientInput[] | CommunicationLogUncheckedCreateWithoutClientInput[]
    connectOrCreate?: CommunicationLogCreateOrConnectWithoutClientInput | CommunicationLogCreateOrConnectWithoutClientInput[]
    upsert?: CommunicationLogUpsertWithWhereUniqueWithoutClientInput | CommunicationLogUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: CommunicationLogCreateManyClientInputEnvelope
    set?: CommunicationLogWhereUniqueInput | CommunicationLogWhereUniqueInput[]
    disconnect?: CommunicationLogWhereUniqueInput | CommunicationLogWhereUniqueInput[]
    delete?: CommunicationLogWhereUniqueInput | CommunicationLogWhereUniqueInput[]
    connect?: CommunicationLogWhereUniqueInput | CommunicationLogWhereUniqueInput[]
    update?: CommunicationLogUpdateWithWhereUniqueWithoutClientInput | CommunicationLogUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: CommunicationLogUpdateManyWithWhereWithoutClientInput | CommunicationLogUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: CommunicationLogScalarWhereInput | CommunicationLogScalarWhereInput[]
  }

  export type ReminderUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<ReminderCreateWithoutClientInput, ReminderUncheckedCreateWithoutClientInput> | ReminderCreateWithoutClientInput[] | ReminderUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ReminderCreateOrConnectWithoutClientInput | ReminderCreateOrConnectWithoutClientInput[]
    upsert?: ReminderUpsertWithWhereUniqueWithoutClientInput | ReminderUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ReminderCreateManyClientInputEnvelope
    set?: ReminderWhereUniqueInput | ReminderWhereUniqueInput[]
    disconnect?: ReminderWhereUniqueInput | ReminderWhereUniqueInput[]
    delete?: ReminderWhereUniqueInput | ReminderWhereUniqueInput[]
    connect?: ReminderWhereUniqueInput | ReminderWhereUniqueInput[]
    update?: ReminderUpdateWithWhereUniqueWithoutClientInput | ReminderUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ReminderUpdateManyWithWhereWithoutClientInput | ReminderUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ReminderScalarWhereInput | ReminderScalarWhereInput[]
  }

  export type MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput = {
    create?: XOR<MedicationAdministrationCreateWithoutAdministeredByInput, MedicationAdministrationUncheckedCreateWithoutAdministeredByInput> | MedicationAdministrationCreateWithoutAdministeredByInput[] | MedicationAdministrationUncheckedCreateWithoutAdministeredByInput[]
    connectOrCreate?: MedicationAdministrationCreateOrConnectWithoutAdministeredByInput | MedicationAdministrationCreateOrConnectWithoutAdministeredByInput[]
    upsert?: MedicationAdministrationUpsertWithWhereUniqueWithoutAdministeredByInput | MedicationAdministrationUpsertWithWhereUniqueWithoutAdministeredByInput[]
    createMany?: MedicationAdministrationCreateManyAdministeredByInputEnvelope
    set?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    disconnect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    delete?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    connect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    update?: MedicationAdministrationUpdateWithWhereUniqueWithoutAdministeredByInput | MedicationAdministrationUpdateWithWhereUniqueWithoutAdministeredByInput[]
    updateMany?: MedicationAdministrationUpdateManyWithWhereWithoutAdministeredByInput | MedicationAdministrationUpdateManyWithWhereWithoutAdministeredByInput[]
    deleteMany?: MedicationAdministrationScalarWhereInput | MedicationAdministrationScalarWhereInput[]
  }

  export type ReportEditUncheckedUpdateManyWithoutEditorNestedInput = {
    create?: XOR<ReportEditCreateWithoutEditorInput, ReportEditUncheckedCreateWithoutEditorInput> | ReportEditCreateWithoutEditorInput[] | ReportEditUncheckedCreateWithoutEditorInput[]
    connectOrCreate?: ReportEditCreateOrConnectWithoutEditorInput | ReportEditCreateOrConnectWithoutEditorInput[]
    upsert?: ReportEditUpsertWithWhereUniqueWithoutEditorInput | ReportEditUpsertWithWhereUniqueWithoutEditorInput[]
    createMany?: ReportEditCreateManyEditorInputEnvelope
    set?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
    disconnect?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
    delete?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
    connect?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
    update?: ReportEditUpdateWithWhereUniqueWithoutEditorInput | ReportEditUpdateWithWhereUniqueWithoutEditorInput[]
    updateMany?: ReportEditUpdateManyWithWhereWithoutEditorInput | ReportEditUpdateManyWithWhereWithoutEditorInput[]
    deleteMany?: ReportEditScalarWhereInput | ReportEditScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCommunicationPreferenceInput = {
    create?: XOR<UserCreateWithoutCommunicationPreferenceInput, UserUncheckedCreateWithoutCommunicationPreferenceInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommunicationPreferenceInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutCommunicationPreferenceNestedInput = {
    create?: XOR<UserCreateWithoutCommunicationPreferenceInput, UserUncheckedCreateWithoutCommunicationPreferenceInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommunicationPreferenceInput
    upsert?: UserUpsertWithoutCommunicationPreferenceInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCommunicationPreferenceInput, UserUpdateWithoutCommunicationPreferenceInput>, UserUncheckedUpdateWithoutCommunicationPreferenceInput>
  }

  export type UserCreateNestedOneWithoutFamilyAccessInput = {
    create?: XOR<UserCreateWithoutFamilyAccessInput, UserUncheckedCreateWithoutFamilyAccessInput>
    connectOrCreate?: UserCreateOrConnectWithoutFamilyAccessInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutFamilyAccessNestedInput = {
    create?: XOR<UserCreateWithoutFamilyAccessInput, UserUncheckedCreateWithoutFamilyAccessInput>
    connectOrCreate?: UserCreateOrConnectWithoutFamilyAccessInput
    upsert?: UserUpsertWithoutFamilyAccessInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFamilyAccessInput, UserUpdateWithoutFamilyAccessInput>, UserUncheckedUpdateWithoutFamilyAccessInput>
  }

  export type AgencyCreateNestedOneWithoutMedicationsInput = {
    create?: XOR<AgencyCreateWithoutMedicationsInput, AgencyUncheckedCreateWithoutMedicationsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutMedicationsInput
    connect?: AgencyWhereUniqueInput
  }

  export type MedicationRecordCreateNestedManyWithoutMedicationInput = {
    create?: XOR<MedicationRecordCreateWithoutMedicationInput, MedicationRecordUncheckedCreateWithoutMedicationInput> | MedicationRecordCreateWithoutMedicationInput[] | MedicationRecordUncheckedCreateWithoutMedicationInput[]
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutMedicationInput | MedicationRecordCreateOrConnectWithoutMedicationInput[]
    createMany?: MedicationRecordCreateManyMedicationInputEnvelope
    connect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
  }

  export type MedicationRecordUncheckedCreateNestedManyWithoutMedicationInput = {
    create?: XOR<MedicationRecordCreateWithoutMedicationInput, MedicationRecordUncheckedCreateWithoutMedicationInput> | MedicationRecordCreateWithoutMedicationInput[] | MedicationRecordUncheckedCreateWithoutMedicationInput[]
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutMedicationInput | MedicationRecordCreateOrConnectWithoutMedicationInput[]
    createMany?: MedicationRecordCreateManyMedicationInputEnvelope
    connect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
  }

  export type AgencyUpdateOneRequiredWithoutMedicationsNestedInput = {
    create?: XOR<AgencyCreateWithoutMedicationsInput, AgencyUncheckedCreateWithoutMedicationsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutMedicationsInput
    upsert?: AgencyUpsertWithoutMedicationsInput
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutMedicationsInput, AgencyUpdateWithoutMedicationsInput>, AgencyUncheckedUpdateWithoutMedicationsInput>
  }

  export type MedicationRecordUpdateManyWithoutMedicationNestedInput = {
    create?: XOR<MedicationRecordCreateWithoutMedicationInput, MedicationRecordUncheckedCreateWithoutMedicationInput> | MedicationRecordCreateWithoutMedicationInput[] | MedicationRecordUncheckedCreateWithoutMedicationInput[]
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutMedicationInput | MedicationRecordCreateOrConnectWithoutMedicationInput[]
    upsert?: MedicationRecordUpsertWithWhereUniqueWithoutMedicationInput | MedicationRecordUpsertWithWhereUniqueWithoutMedicationInput[]
    createMany?: MedicationRecordCreateManyMedicationInputEnvelope
    set?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    disconnect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    delete?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    connect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    update?: MedicationRecordUpdateWithWhereUniqueWithoutMedicationInput | MedicationRecordUpdateWithWhereUniqueWithoutMedicationInput[]
    updateMany?: MedicationRecordUpdateManyWithWhereWithoutMedicationInput | MedicationRecordUpdateManyWithWhereWithoutMedicationInput[]
    deleteMany?: MedicationRecordScalarWhereInput | MedicationRecordScalarWhereInput[]
  }

  export type MedicationRecordUncheckedUpdateManyWithoutMedicationNestedInput = {
    create?: XOR<MedicationRecordCreateWithoutMedicationInput, MedicationRecordUncheckedCreateWithoutMedicationInput> | MedicationRecordCreateWithoutMedicationInput[] | MedicationRecordUncheckedCreateWithoutMedicationInput[]
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutMedicationInput | MedicationRecordCreateOrConnectWithoutMedicationInput[]
    upsert?: MedicationRecordUpsertWithWhereUniqueWithoutMedicationInput | MedicationRecordUpsertWithWhereUniqueWithoutMedicationInput[]
    createMany?: MedicationRecordCreateManyMedicationInputEnvelope
    set?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    disconnect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    delete?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    connect?: MedicationRecordWhereUniqueInput | MedicationRecordWhereUniqueInput[]
    update?: MedicationRecordUpdateWithWhereUniqueWithoutMedicationInput | MedicationRecordUpdateWithWhereUniqueWithoutMedicationInput[]
    updateMany?: MedicationRecordUpdateManyWithWhereWithoutMedicationInput | MedicationRecordUpdateManyWithWhereWithoutMedicationInput[]
    deleteMany?: MedicationRecordScalarWhereInput | MedicationRecordScalarWhereInput[]
  }

  export type AgencyCreateNestedOneWithoutVisitTypesInput = {
    create?: XOR<AgencyCreateWithoutVisitTypesInput, AgencyUncheckedCreateWithoutVisitTypesInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutVisitTypesInput
    connect?: AgencyWhereUniqueInput
  }

  export type ScheduleCreateNestedManyWithoutVisitTypeInput = {
    create?: XOR<ScheduleCreateWithoutVisitTypeInput, ScheduleUncheckedCreateWithoutVisitTypeInput> | ScheduleCreateWithoutVisitTypeInput[] | ScheduleUncheckedCreateWithoutVisitTypeInput[]
    connectOrCreate?: ScheduleCreateOrConnectWithoutVisitTypeInput | ScheduleCreateOrConnectWithoutVisitTypeInput[]
    createMany?: ScheduleCreateManyVisitTypeInputEnvelope
    connect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
  }

  export type ScheduleUncheckedCreateNestedManyWithoutVisitTypeInput = {
    create?: XOR<ScheduleCreateWithoutVisitTypeInput, ScheduleUncheckedCreateWithoutVisitTypeInput> | ScheduleCreateWithoutVisitTypeInput[] | ScheduleUncheckedCreateWithoutVisitTypeInput[]
    connectOrCreate?: ScheduleCreateOrConnectWithoutVisitTypeInput | ScheduleCreateOrConnectWithoutVisitTypeInput[]
    createMany?: ScheduleCreateManyVisitTypeInputEnvelope
    connect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
  }

  export type AgencyUpdateOneRequiredWithoutVisitTypesNestedInput = {
    create?: XOR<AgencyCreateWithoutVisitTypesInput, AgencyUncheckedCreateWithoutVisitTypesInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutVisitTypesInput
    upsert?: AgencyUpsertWithoutVisitTypesInput
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutVisitTypesInput, AgencyUpdateWithoutVisitTypesInput>, AgencyUncheckedUpdateWithoutVisitTypesInput>
  }

  export type ScheduleUpdateManyWithoutVisitTypeNestedInput = {
    create?: XOR<ScheduleCreateWithoutVisitTypeInput, ScheduleUncheckedCreateWithoutVisitTypeInput> | ScheduleCreateWithoutVisitTypeInput[] | ScheduleUncheckedCreateWithoutVisitTypeInput[]
    connectOrCreate?: ScheduleCreateOrConnectWithoutVisitTypeInput | ScheduleCreateOrConnectWithoutVisitTypeInput[]
    upsert?: ScheduleUpsertWithWhereUniqueWithoutVisitTypeInput | ScheduleUpsertWithWhereUniqueWithoutVisitTypeInput[]
    createMany?: ScheduleCreateManyVisitTypeInputEnvelope
    set?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    disconnect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    delete?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    connect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    update?: ScheduleUpdateWithWhereUniqueWithoutVisitTypeInput | ScheduleUpdateWithWhereUniqueWithoutVisitTypeInput[]
    updateMany?: ScheduleUpdateManyWithWhereWithoutVisitTypeInput | ScheduleUpdateManyWithWhereWithoutVisitTypeInput[]
    deleteMany?: ScheduleScalarWhereInput | ScheduleScalarWhereInput[]
  }

  export type ScheduleUncheckedUpdateManyWithoutVisitTypeNestedInput = {
    create?: XOR<ScheduleCreateWithoutVisitTypeInput, ScheduleUncheckedCreateWithoutVisitTypeInput> | ScheduleCreateWithoutVisitTypeInput[] | ScheduleUncheckedCreateWithoutVisitTypeInput[]
    connectOrCreate?: ScheduleCreateOrConnectWithoutVisitTypeInput | ScheduleCreateOrConnectWithoutVisitTypeInput[]
    upsert?: ScheduleUpsertWithWhereUniqueWithoutVisitTypeInput | ScheduleUpsertWithWhereUniqueWithoutVisitTypeInput[]
    createMany?: ScheduleCreateManyVisitTypeInputEnvelope
    set?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    disconnect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    delete?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    connect?: ScheduleWhereUniqueInput | ScheduleWhereUniqueInput[]
    update?: ScheduleUpdateWithWhereUniqueWithoutVisitTypeInput | ScheduleUpdateWithWhereUniqueWithoutVisitTypeInput[]
    updateMany?: ScheduleUpdateManyWithWhereWithoutVisitTypeInput | ScheduleUpdateManyWithWhereWithoutVisitTypeInput[]
    deleteMany?: ScheduleScalarWhereInput | ScheduleScalarWhereInput[]
  }

  export type VisitTypeCreateNestedOneWithoutSchedulesInput = {
    create?: XOR<VisitTypeCreateWithoutSchedulesInput, VisitTypeUncheckedCreateWithoutSchedulesInput>
    connectOrCreate?: VisitTypeCreateOrConnectWithoutSchedulesInput
    connect?: VisitTypeWhereUniqueInput
  }

  export type AgencyCreateNestedOneWithoutSchedulesInput = {
    create?: XOR<AgencyCreateWithoutSchedulesInput, AgencyUncheckedCreateWithoutSchedulesInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutSchedulesInput
    connect?: AgencyWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutClientSchedulesInput = {
    create?: XOR<UserCreateWithoutClientSchedulesInput, UserUncheckedCreateWithoutClientSchedulesInput>
    connectOrCreate?: UserCreateOrConnectWithoutClientSchedulesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCareWorkerSchedulesInput = {
    create?: XOR<UserCreateWithoutCareWorkerSchedulesInput, UserUncheckedCreateWithoutCareWorkerSchedulesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCareWorkerSchedulesInput
    connect?: UserWhereUniqueInput
  }

  export type EnumScheduleTypeFieldUpdateOperationsInput = {
    set?: $Enums.ScheduleType
  }

  export type VisitTypeUpdateOneWithoutSchedulesNestedInput = {
    create?: XOR<VisitTypeCreateWithoutSchedulesInput, VisitTypeUncheckedCreateWithoutSchedulesInput>
    connectOrCreate?: VisitTypeCreateOrConnectWithoutSchedulesInput
    upsert?: VisitTypeUpsertWithoutSchedulesInput
    disconnect?: VisitTypeWhereInput | boolean
    delete?: VisitTypeWhereInput | boolean
    connect?: VisitTypeWhereUniqueInput
    update?: XOR<XOR<VisitTypeUpdateToOneWithWhereWithoutSchedulesInput, VisitTypeUpdateWithoutSchedulesInput>, VisitTypeUncheckedUpdateWithoutSchedulesInput>
  }

  export type AgencyUpdateOneRequiredWithoutSchedulesNestedInput = {
    create?: XOR<AgencyCreateWithoutSchedulesInput, AgencyUncheckedCreateWithoutSchedulesInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutSchedulesInput
    upsert?: AgencyUpsertWithoutSchedulesInput
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutSchedulesInput, AgencyUpdateWithoutSchedulesInput>, AgencyUncheckedUpdateWithoutSchedulesInput>
  }

  export type UserUpdateOneRequiredWithoutClientSchedulesNestedInput = {
    create?: XOR<UserCreateWithoutClientSchedulesInput, UserUncheckedCreateWithoutClientSchedulesInput>
    connectOrCreate?: UserCreateOrConnectWithoutClientSchedulesInput
    upsert?: UserUpsertWithoutClientSchedulesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutClientSchedulesInput, UserUpdateWithoutClientSchedulesInput>, UserUncheckedUpdateWithoutClientSchedulesInput>
  }

  export type UserUpdateOneRequiredWithoutCareWorkerSchedulesNestedInput = {
    create?: XOR<UserCreateWithoutCareWorkerSchedulesInput, UserUncheckedCreateWithoutCareWorkerSchedulesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCareWorkerSchedulesInput
    upsert?: UserUpsertWithoutCareWorkerSchedulesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCareWorkerSchedulesInput, UserUpdateWithoutCareWorkerSchedulesInput>, UserUncheckedUpdateWithoutCareWorkerSchedulesInput>
  }

  export type ReportTaskCreateNestedManyWithoutReportInput = {
    create?: XOR<ReportTaskCreateWithoutReportInput, ReportTaskUncheckedCreateWithoutReportInput> | ReportTaskCreateWithoutReportInput[] | ReportTaskUncheckedCreateWithoutReportInput[]
    connectOrCreate?: ReportTaskCreateOrConnectWithoutReportInput | ReportTaskCreateOrConnectWithoutReportInput[]
    createMany?: ReportTaskCreateManyReportInputEnvelope
    connect?: ReportTaskWhereUniqueInput | ReportTaskWhereUniqueInput[]
  }

  export type ReportAlertCreateNestedManyWithoutReportInput = {
    create?: XOR<ReportAlertCreateWithoutReportInput, ReportAlertUncheckedCreateWithoutReportInput> | ReportAlertCreateWithoutReportInput[] | ReportAlertUncheckedCreateWithoutReportInput[]
    connectOrCreate?: ReportAlertCreateOrConnectWithoutReportInput | ReportAlertCreateOrConnectWithoutReportInput[]
    createMany?: ReportAlertCreateManyReportInputEnvelope
    connect?: ReportAlertWhereUniqueInput | ReportAlertWhereUniqueInput[]
  }

  export type BodyMapObservationCreateNestedManyWithoutReportInput = {
    create?: XOR<BodyMapObservationCreateWithoutReportInput, BodyMapObservationUncheckedCreateWithoutReportInput> | BodyMapObservationCreateWithoutReportInput[] | BodyMapObservationUncheckedCreateWithoutReportInput[]
    connectOrCreate?: BodyMapObservationCreateOrConnectWithoutReportInput | BodyMapObservationCreateOrConnectWithoutReportInput[]
    createMany?: BodyMapObservationCreateManyReportInputEnvelope
    connect?: BodyMapObservationWhereUniqueInput | BodyMapObservationWhereUniqueInput[]
  }

  export type MedicationAdministrationCreateNestedManyWithoutReportInput = {
    create?: XOR<MedicationAdministrationCreateWithoutReportInput, MedicationAdministrationUncheckedCreateWithoutReportInput> | MedicationAdministrationCreateWithoutReportInput[] | MedicationAdministrationUncheckedCreateWithoutReportInput[]
    connectOrCreate?: MedicationAdministrationCreateOrConnectWithoutReportInput | MedicationAdministrationCreateOrConnectWithoutReportInput[]
    createMany?: MedicationAdministrationCreateManyReportInputEnvelope
    connect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
  }

  export type ReportEditCreateNestedManyWithoutReportInput = {
    create?: XOR<ReportEditCreateWithoutReportInput, ReportEditUncheckedCreateWithoutReportInput> | ReportEditCreateWithoutReportInput[] | ReportEditUncheckedCreateWithoutReportInput[]
    connectOrCreate?: ReportEditCreateOrConnectWithoutReportInput | ReportEditCreateOrConnectWithoutReportInput[]
    createMany?: ReportEditCreateManyReportInputEnvelope
    connect?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutClientReportsInput = {
    create?: XOR<UserCreateWithoutClientReportsInput, UserUncheckedCreateWithoutClientReportsInput>
    connectOrCreate?: UserCreateOrConnectWithoutClientReportsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCareReportsInput = {
    create?: XOR<UserCreateWithoutCareReportsInput, UserUncheckedCreateWithoutCareReportsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCareReportsInput
    connect?: UserWhereUniqueInput
  }

  export type AgencyCreateNestedOneWithoutReportInput = {
    create?: XOR<AgencyCreateWithoutReportInput, AgencyUncheckedCreateWithoutReportInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutReportInput
    connect?: AgencyWhereUniqueInput
  }

  export type ReportTaskUncheckedCreateNestedManyWithoutReportInput = {
    create?: XOR<ReportTaskCreateWithoutReportInput, ReportTaskUncheckedCreateWithoutReportInput> | ReportTaskCreateWithoutReportInput[] | ReportTaskUncheckedCreateWithoutReportInput[]
    connectOrCreate?: ReportTaskCreateOrConnectWithoutReportInput | ReportTaskCreateOrConnectWithoutReportInput[]
    createMany?: ReportTaskCreateManyReportInputEnvelope
    connect?: ReportTaskWhereUniqueInput | ReportTaskWhereUniqueInput[]
  }

  export type ReportAlertUncheckedCreateNestedManyWithoutReportInput = {
    create?: XOR<ReportAlertCreateWithoutReportInput, ReportAlertUncheckedCreateWithoutReportInput> | ReportAlertCreateWithoutReportInput[] | ReportAlertUncheckedCreateWithoutReportInput[]
    connectOrCreate?: ReportAlertCreateOrConnectWithoutReportInput | ReportAlertCreateOrConnectWithoutReportInput[]
    createMany?: ReportAlertCreateManyReportInputEnvelope
    connect?: ReportAlertWhereUniqueInput | ReportAlertWhereUniqueInput[]
  }

  export type BodyMapObservationUncheckedCreateNestedManyWithoutReportInput = {
    create?: XOR<BodyMapObservationCreateWithoutReportInput, BodyMapObservationUncheckedCreateWithoutReportInput> | BodyMapObservationCreateWithoutReportInput[] | BodyMapObservationUncheckedCreateWithoutReportInput[]
    connectOrCreate?: BodyMapObservationCreateOrConnectWithoutReportInput | BodyMapObservationCreateOrConnectWithoutReportInput[]
    createMany?: BodyMapObservationCreateManyReportInputEnvelope
    connect?: BodyMapObservationWhereUniqueInput | BodyMapObservationWhereUniqueInput[]
  }

  export type MedicationAdministrationUncheckedCreateNestedManyWithoutReportInput = {
    create?: XOR<MedicationAdministrationCreateWithoutReportInput, MedicationAdministrationUncheckedCreateWithoutReportInput> | MedicationAdministrationCreateWithoutReportInput[] | MedicationAdministrationUncheckedCreateWithoutReportInput[]
    connectOrCreate?: MedicationAdministrationCreateOrConnectWithoutReportInput | MedicationAdministrationCreateOrConnectWithoutReportInput[]
    createMany?: MedicationAdministrationCreateManyReportInputEnvelope
    connect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
  }

  export type ReportEditUncheckedCreateNestedManyWithoutReportInput = {
    create?: XOR<ReportEditCreateWithoutReportInput, ReportEditUncheckedCreateWithoutReportInput> | ReportEditCreateWithoutReportInput[] | ReportEditUncheckedCreateWithoutReportInput[]
    connectOrCreate?: ReportEditCreateOrConnectWithoutReportInput | ReportEditCreateOrConnectWithoutReportInput[]
    createMany?: ReportEditCreateManyReportInputEnvelope
    connect?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
  }

  export type EnumReportStatusFieldUpdateOperationsInput = {
    set?: $Enums.ReportStatus
  }

  export type ReportTaskUpdateManyWithoutReportNestedInput = {
    create?: XOR<ReportTaskCreateWithoutReportInput, ReportTaskUncheckedCreateWithoutReportInput> | ReportTaskCreateWithoutReportInput[] | ReportTaskUncheckedCreateWithoutReportInput[]
    connectOrCreate?: ReportTaskCreateOrConnectWithoutReportInput | ReportTaskCreateOrConnectWithoutReportInput[]
    upsert?: ReportTaskUpsertWithWhereUniqueWithoutReportInput | ReportTaskUpsertWithWhereUniqueWithoutReportInput[]
    createMany?: ReportTaskCreateManyReportInputEnvelope
    set?: ReportTaskWhereUniqueInput | ReportTaskWhereUniqueInput[]
    disconnect?: ReportTaskWhereUniqueInput | ReportTaskWhereUniqueInput[]
    delete?: ReportTaskWhereUniqueInput | ReportTaskWhereUniqueInput[]
    connect?: ReportTaskWhereUniqueInput | ReportTaskWhereUniqueInput[]
    update?: ReportTaskUpdateWithWhereUniqueWithoutReportInput | ReportTaskUpdateWithWhereUniqueWithoutReportInput[]
    updateMany?: ReportTaskUpdateManyWithWhereWithoutReportInput | ReportTaskUpdateManyWithWhereWithoutReportInput[]
    deleteMany?: ReportTaskScalarWhereInput | ReportTaskScalarWhereInput[]
  }

  export type ReportAlertUpdateManyWithoutReportNestedInput = {
    create?: XOR<ReportAlertCreateWithoutReportInput, ReportAlertUncheckedCreateWithoutReportInput> | ReportAlertCreateWithoutReportInput[] | ReportAlertUncheckedCreateWithoutReportInput[]
    connectOrCreate?: ReportAlertCreateOrConnectWithoutReportInput | ReportAlertCreateOrConnectWithoutReportInput[]
    upsert?: ReportAlertUpsertWithWhereUniqueWithoutReportInput | ReportAlertUpsertWithWhereUniqueWithoutReportInput[]
    createMany?: ReportAlertCreateManyReportInputEnvelope
    set?: ReportAlertWhereUniqueInput | ReportAlertWhereUniqueInput[]
    disconnect?: ReportAlertWhereUniqueInput | ReportAlertWhereUniqueInput[]
    delete?: ReportAlertWhereUniqueInput | ReportAlertWhereUniqueInput[]
    connect?: ReportAlertWhereUniqueInput | ReportAlertWhereUniqueInput[]
    update?: ReportAlertUpdateWithWhereUniqueWithoutReportInput | ReportAlertUpdateWithWhereUniqueWithoutReportInput[]
    updateMany?: ReportAlertUpdateManyWithWhereWithoutReportInput | ReportAlertUpdateManyWithWhereWithoutReportInput[]
    deleteMany?: ReportAlertScalarWhereInput | ReportAlertScalarWhereInput[]
  }

  export type BodyMapObservationUpdateManyWithoutReportNestedInput = {
    create?: XOR<BodyMapObservationCreateWithoutReportInput, BodyMapObservationUncheckedCreateWithoutReportInput> | BodyMapObservationCreateWithoutReportInput[] | BodyMapObservationUncheckedCreateWithoutReportInput[]
    connectOrCreate?: BodyMapObservationCreateOrConnectWithoutReportInput | BodyMapObservationCreateOrConnectWithoutReportInput[]
    upsert?: BodyMapObservationUpsertWithWhereUniqueWithoutReportInput | BodyMapObservationUpsertWithWhereUniqueWithoutReportInput[]
    createMany?: BodyMapObservationCreateManyReportInputEnvelope
    set?: BodyMapObservationWhereUniqueInput | BodyMapObservationWhereUniqueInput[]
    disconnect?: BodyMapObservationWhereUniqueInput | BodyMapObservationWhereUniqueInput[]
    delete?: BodyMapObservationWhereUniqueInput | BodyMapObservationWhereUniqueInput[]
    connect?: BodyMapObservationWhereUniqueInput | BodyMapObservationWhereUniqueInput[]
    update?: BodyMapObservationUpdateWithWhereUniqueWithoutReportInput | BodyMapObservationUpdateWithWhereUniqueWithoutReportInput[]
    updateMany?: BodyMapObservationUpdateManyWithWhereWithoutReportInput | BodyMapObservationUpdateManyWithWhereWithoutReportInput[]
    deleteMany?: BodyMapObservationScalarWhereInput | BodyMapObservationScalarWhereInput[]
  }

  export type MedicationAdministrationUpdateManyWithoutReportNestedInput = {
    create?: XOR<MedicationAdministrationCreateWithoutReportInput, MedicationAdministrationUncheckedCreateWithoutReportInput> | MedicationAdministrationCreateWithoutReportInput[] | MedicationAdministrationUncheckedCreateWithoutReportInput[]
    connectOrCreate?: MedicationAdministrationCreateOrConnectWithoutReportInput | MedicationAdministrationCreateOrConnectWithoutReportInput[]
    upsert?: MedicationAdministrationUpsertWithWhereUniqueWithoutReportInput | MedicationAdministrationUpsertWithWhereUniqueWithoutReportInput[]
    createMany?: MedicationAdministrationCreateManyReportInputEnvelope
    set?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    disconnect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    delete?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    connect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    update?: MedicationAdministrationUpdateWithWhereUniqueWithoutReportInput | MedicationAdministrationUpdateWithWhereUniqueWithoutReportInput[]
    updateMany?: MedicationAdministrationUpdateManyWithWhereWithoutReportInput | MedicationAdministrationUpdateManyWithWhereWithoutReportInput[]
    deleteMany?: MedicationAdministrationScalarWhereInput | MedicationAdministrationScalarWhereInput[]
  }

  export type ReportEditUpdateManyWithoutReportNestedInput = {
    create?: XOR<ReportEditCreateWithoutReportInput, ReportEditUncheckedCreateWithoutReportInput> | ReportEditCreateWithoutReportInput[] | ReportEditUncheckedCreateWithoutReportInput[]
    connectOrCreate?: ReportEditCreateOrConnectWithoutReportInput | ReportEditCreateOrConnectWithoutReportInput[]
    upsert?: ReportEditUpsertWithWhereUniqueWithoutReportInput | ReportEditUpsertWithWhereUniqueWithoutReportInput[]
    createMany?: ReportEditCreateManyReportInputEnvelope
    set?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
    disconnect?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
    delete?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
    connect?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
    update?: ReportEditUpdateWithWhereUniqueWithoutReportInput | ReportEditUpdateWithWhereUniqueWithoutReportInput[]
    updateMany?: ReportEditUpdateManyWithWhereWithoutReportInput | ReportEditUpdateManyWithWhereWithoutReportInput[]
    deleteMany?: ReportEditScalarWhereInput | ReportEditScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutClientReportsNestedInput = {
    create?: XOR<UserCreateWithoutClientReportsInput, UserUncheckedCreateWithoutClientReportsInput>
    connectOrCreate?: UserCreateOrConnectWithoutClientReportsInput
    upsert?: UserUpsertWithoutClientReportsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutClientReportsInput, UserUpdateWithoutClientReportsInput>, UserUncheckedUpdateWithoutClientReportsInput>
  }

  export type UserUpdateOneRequiredWithoutCareReportsNestedInput = {
    create?: XOR<UserCreateWithoutCareReportsInput, UserUncheckedCreateWithoutCareReportsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCareReportsInput
    upsert?: UserUpsertWithoutCareReportsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCareReportsInput, UserUpdateWithoutCareReportsInput>, UserUncheckedUpdateWithoutCareReportsInput>
  }

  export type AgencyUpdateOneRequiredWithoutReportNestedInput = {
    create?: XOR<AgencyCreateWithoutReportInput, AgencyUncheckedCreateWithoutReportInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutReportInput
    upsert?: AgencyUpsertWithoutReportInput
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutReportInput, AgencyUpdateWithoutReportInput>, AgencyUncheckedUpdateWithoutReportInput>
  }

  export type ReportTaskUncheckedUpdateManyWithoutReportNestedInput = {
    create?: XOR<ReportTaskCreateWithoutReportInput, ReportTaskUncheckedCreateWithoutReportInput> | ReportTaskCreateWithoutReportInput[] | ReportTaskUncheckedCreateWithoutReportInput[]
    connectOrCreate?: ReportTaskCreateOrConnectWithoutReportInput | ReportTaskCreateOrConnectWithoutReportInput[]
    upsert?: ReportTaskUpsertWithWhereUniqueWithoutReportInput | ReportTaskUpsertWithWhereUniqueWithoutReportInput[]
    createMany?: ReportTaskCreateManyReportInputEnvelope
    set?: ReportTaskWhereUniqueInput | ReportTaskWhereUniqueInput[]
    disconnect?: ReportTaskWhereUniqueInput | ReportTaskWhereUniqueInput[]
    delete?: ReportTaskWhereUniqueInput | ReportTaskWhereUniqueInput[]
    connect?: ReportTaskWhereUniqueInput | ReportTaskWhereUniqueInput[]
    update?: ReportTaskUpdateWithWhereUniqueWithoutReportInput | ReportTaskUpdateWithWhereUniqueWithoutReportInput[]
    updateMany?: ReportTaskUpdateManyWithWhereWithoutReportInput | ReportTaskUpdateManyWithWhereWithoutReportInput[]
    deleteMany?: ReportTaskScalarWhereInput | ReportTaskScalarWhereInput[]
  }

  export type ReportAlertUncheckedUpdateManyWithoutReportNestedInput = {
    create?: XOR<ReportAlertCreateWithoutReportInput, ReportAlertUncheckedCreateWithoutReportInput> | ReportAlertCreateWithoutReportInput[] | ReportAlertUncheckedCreateWithoutReportInput[]
    connectOrCreate?: ReportAlertCreateOrConnectWithoutReportInput | ReportAlertCreateOrConnectWithoutReportInput[]
    upsert?: ReportAlertUpsertWithWhereUniqueWithoutReportInput | ReportAlertUpsertWithWhereUniqueWithoutReportInput[]
    createMany?: ReportAlertCreateManyReportInputEnvelope
    set?: ReportAlertWhereUniqueInput | ReportAlertWhereUniqueInput[]
    disconnect?: ReportAlertWhereUniqueInput | ReportAlertWhereUniqueInput[]
    delete?: ReportAlertWhereUniqueInput | ReportAlertWhereUniqueInput[]
    connect?: ReportAlertWhereUniqueInput | ReportAlertWhereUniqueInput[]
    update?: ReportAlertUpdateWithWhereUniqueWithoutReportInput | ReportAlertUpdateWithWhereUniqueWithoutReportInput[]
    updateMany?: ReportAlertUpdateManyWithWhereWithoutReportInput | ReportAlertUpdateManyWithWhereWithoutReportInput[]
    deleteMany?: ReportAlertScalarWhereInput | ReportAlertScalarWhereInput[]
  }

  export type BodyMapObservationUncheckedUpdateManyWithoutReportNestedInput = {
    create?: XOR<BodyMapObservationCreateWithoutReportInput, BodyMapObservationUncheckedCreateWithoutReportInput> | BodyMapObservationCreateWithoutReportInput[] | BodyMapObservationUncheckedCreateWithoutReportInput[]
    connectOrCreate?: BodyMapObservationCreateOrConnectWithoutReportInput | BodyMapObservationCreateOrConnectWithoutReportInput[]
    upsert?: BodyMapObservationUpsertWithWhereUniqueWithoutReportInput | BodyMapObservationUpsertWithWhereUniqueWithoutReportInput[]
    createMany?: BodyMapObservationCreateManyReportInputEnvelope
    set?: BodyMapObservationWhereUniqueInput | BodyMapObservationWhereUniqueInput[]
    disconnect?: BodyMapObservationWhereUniqueInput | BodyMapObservationWhereUniqueInput[]
    delete?: BodyMapObservationWhereUniqueInput | BodyMapObservationWhereUniqueInput[]
    connect?: BodyMapObservationWhereUniqueInput | BodyMapObservationWhereUniqueInput[]
    update?: BodyMapObservationUpdateWithWhereUniqueWithoutReportInput | BodyMapObservationUpdateWithWhereUniqueWithoutReportInput[]
    updateMany?: BodyMapObservationUpdateManyWithWhereWithoutReportInput | BodyMapObservationUpdateManyWithWhereWithoutReportInput[]
    deleteMany?: BodyMapObservationScalarWhereInput | BodyMapObservationScalarWhereInput[]
  }

  export type MedicationAdministrationUncheckedUpdateManyWithoutReportNestedInput = {
    create?: XOR<MedicationAdministrationCreateWithoutReportInput, MedicationAdministrationUncheckedCreateWithoutReportInput> | MedicationAdministrationCreateWithoutReportInput[] | MedicationAdministrationUncheckedCreateWithoutReportInput[]
    connectOrCreate?: MedicationAdministrationCreateOrConnectWithoutReportInput | MedicationAdministrationCreateOrConnectWithoutReportInput[]
    upsert?: MedicationAdministrationUpsertWithWhereUniqueWithoutReportInput | MedicationAdministrationUpsertWithWhereUniqueWithoutReportInput[]
    createMany?: MedicationAdministrationCreateManyReportInputEnvelope
    set?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    disconnect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    delete?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    connect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    update?: MedicationAdministrationUpdateWithWhereUniqueWithoutReportInput | MedicationAdministrationUpdateWithWhereUniqueWithoutReportInput[]
    updateMany?: MedicationAdministrationUpdateManyWithWhereWithoutReportInput | MedicationAdministrationUpdateManyWithWhereWithoutReportInput[]
    deleteMany?: MedicationAdministrationScalarWhereInput | MedicationAdministrationScalarWhereInput[]
  }

  export type ReportEditUncheckedUpdateManyWithoutReportNestedInput = {
    create?: XOR<ReportEditCreateWithoutReportInput, ReportEditUncheckedCreateWithoutReportInput> | ReportEditCreateWithoutReportInput[] | ReportEditUncheckedCreateWithoutReportInput[]
    connectOrCreate?: ReportEditCreateOrConnectWithoutReportInput | ReportEditCreateOrConnectWithoutReportInput[]
    upsert?: ReportEditUpsertWithWhereUniqueWithoutReportInput | ReportEditUpsertWithWhereUniqueWithoutReportInput[]
    createMany?: ReportEditCreateManyReportInputEnvelope
    set?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
    disconnect?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
    delete?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
    connect?: ReportEditWhereUniqueInput | ReportEditWhereUniqueInput[]
    update?: ReportEditUpdateWithWhereUniqueWithoutReportInput | ReportEditUpdateWithWhereUniqueWithoutReportInput[]
    updateMany?: ReportEditUpdateManyWithWhereWithoutReportInput | ReportEditUpdateManyWithWhereWithoutReportInput[]
    deleteMany?: ReportEditScalarWhereInput | ReportEditScalarWhereInput[]
  }

  export type ReportCreateNestedOneWithoutTasksCompletedInput = {
    create?: XOR<ReportCreateWithoutTasksCompletedInput, ReportUncheckedCreateWithoutTasksCompletedInput>
    connectOrCreate?: ReportCreateOrConnectWithoutTasksCompletedInput
    connect?: ReportWhereUniqueInput
  }

  export type ReportUpdateOneRequiredWithoutTasksCompletedNestedInput = {
    create?: XOR<ReportCreateWithoutTasksCompletedInput, ReportUncheckedCreateWithoutTasksCompletedInput>
    connectOrCreate?: ReportCreateOrConnectWithoutTasksCompletedInput
    upsert?: ReportUpsertWithoutTasksCompletedInput
    connect?: ReportWhereUniqueInput
    update?: XOR<XOR<ReportUpdateToOneWithWhereWithoutTasksCompletedInput, ReportUpdateWithoutTasksCompletedInput>, ReportUncheckedUpdateWithoutTasksCompletedInput>
  }

  export type ReportCreateNestedOneWithoutAlertsInput = {
    create?: XOR<ReportCreateWithoutAlertsInput, ReportUncheckedCreateWithoutAlertsInput>
    connectOrCreate?: ReportCreateOrConnectWithoutAlertsInput
    connect?: ReportWhereUniqueInput
  }

  export type EnumAlertTypeFieldUpdateOperationsInput = {
    set?: $Enums.AlertType
  }

  export type EnumAlertSeverityFieldUpdateOperationsInput = {
    set?: $Enums.AlertSeverity
  }

  export type ReportUpdateOneRequiredWithoutAlertsNestedInput = {
    create?: XOR<ReportCreateWithoutAlertsInput, ReportUncheckedCreateWithoutAlertsInput>
    connectOrCreate?: ReportCreateOrConnectWithoutAlertsInput
    upsert?: ReportUpsertWithoutAlertsInput
    connect?: ReportWhereUniqueInput
    update?: XOR<XOR<ReportUpdateToOneWithWhereWithoutAlertsInput, ReportUpdateWithoutAlertsInput>, ReportUncheckedUpdateWithoutAlertsInput>
  }

  export type ReportCreateNestedOneWithoutBodyMapObservationsInput = {
    create?: XOR<ReportCreateWithoutBodyMapObservationsInput, ReportUncheckedCreateWithoutBodyMapObservationsInput>
    connectOrCreate?: ReportCreateOrConnectWithoutBodyMapObservationsInput
    connect?: ReportWhereUniqueInput
  }

  export type ReportUpdateOneRequiredWithoutBodyMapObservationsNestedInput = {
    create?: XOR<ReportCreateWithoutBodyMapObservationsInput, ReportUncheckedCreateWithoutBodyMapObservationsInput>
    connectOrCreate?: ReportCreateOrConnectWithoutBodyMapObservationsInput
    upsert?: ReportUpsertWithoutBodyMapObservationsInput
    connect?: ReportWhereUniqueInput
    update?: XOR<XOR<ReportUpdateToOneWithWhereWithoutBodyMapObservationsInput, ReportUpdateWithoutBodyMapObservationsInput>, ReportUncheckedUpdateWithoutBodyMapObservationsInput>
  }

  export type ReportCreateNestedOneWithoutEditHistoryInput = {
    create?: XOR<ReportCreateWithoutEditHistoryInput, ReportUncheckedCreateWithoutEditHistoryInput>
    connectOrCreate?: ReportCreateOrConnectWithoutEditHistoryInput
    connect?: ReportWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReportEditsInput = {
    create?: XOR<UserCreateWithoutReportEditsInput, UserUncheckedCreateWithoutReportEditsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReportEditsInput
    connect?: UserWhereUniqueInput
  }

  export type ReportUpdateOneRequiredWithoutEditHistoryNestedInput = {
    create?: XOR<ReportCreateWithoutEditHistoryInput, ReportUncheckedCreateWithoutEditHistoryInput>
    connectOrCreate?: ReportCreateOrConnectWithoutEditHistoryInput
    upsert?: ReportUpsertWithoutEditHistoryInput
    connect?: ReportWhereUniqueInput
    update?: XOR<XOR<ReportUpdateToOneWithWhereWithoutEditHistoryInput, ReportUpdateWithoutEditHistoryInput>, ReportUncheckedUpdateWithoutEditHistoryInput>
  }

  export type UserUpdateOneRequiredWithoutReportEditsNestedInput = {
    create?: XOR<UserCreateWithoutReportEditsInput, UserUncheckedCreateWithoutReportEditsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReportEditsInput
    upsert?: UserUpsertWithoutReportEditsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReportEditsInput, UserUpdateWithoutReportEditsInput>, UserUncheckedUpdateWithoutReportEditsInput>
  }

  export type MedicationDatabaseLinkCreateNestedOneWithoutMedicationRecordInput = {
    create?: XOR<MedicationDatabaseLinkCreateWithoutMedicationRecordInput, MedicationDatabaseLinkUncheckedCreateWithoutMedicationRecordInput>
    connectOrCreate?: MedicationDatabaseLinkCreateOrConnectWithoutMedicationRecordInput
    connect?: MedicationDatabaseLinkWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutClientMedicationsInput = {
    create?: XOR<UserCreateWithoutClientMedicationsInput, UserUncheckedCreateWithoutClientMedicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutClientMedicationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCareWorkerMedicationsInput = {
    create?: XOR<UserCreateWithoutCareWorkerMedicationsInput, UserUncheckedCreateWithoutCareWorkerMedicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCareWorkerMedicationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutMedicationRecordsInput = {
    create?: XOR<UserCreateWithoutMedicationRecordsInput, UserUncheckedCreateWithoutMedicationRecordsInput>
    connectOrCreate?: UserCreateOrConnectWithoutMedicationRecordsInput
    connect?: UserWhereUniqueInput
  }

  export type MedicationAdministrationCreateNestedManyWithoutMedicationRecordInput = {
    create?: XOR<MedicationAdministrationCreateWithoutMedicationRecordInput, MedicationAdministrationUncheckedCreateWithoutMedicationRecordInput> | MedicationAdministrationCreateWithoutMedicationRecordInput[] | MedicationAdministrationUncheckedCreateWithoutMedicationRecordInput[]
    connectOrCreate?: MedicationAdministrationCreateOrConnectWithoutMedicationRecordInput | MedicationAdministrationCreateOrConnectWithoutMedicationRecordInput[]
    createMany?: MedicationAdministrationCreateManyMedicationRecordInputEnvelope
    connect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
  }

  export type MedicationAdministrationUncheckedCreateNestedManyWithoutMedicationRecordInput = {
    create?: XOR<MedicationAdministrationCreateWithoutMedicationRecordInput, MedicationAdministrationUncheckedCreateWithoutMedicationRecordInput> | MedicationAdministrationCreateWithoutMedicationRecordInput[] | MedicationAdministrationUncheckedCreateWithoutMedicationRecordInput[]
    connectOrCreate?: MedicationAdministrationCreateOrConnectWithoutMedicationRecordInput | MedicationAdministrationCreateOrConnectWithoutMedicationRecordInput[]
    createMany?: MedicationAdministrationCreateManyMedicationRecordInputEnvelope
    connect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
  }

  export type MedicationDatabaseLinkUpdateOneRequiredWithoutMedicationRecordNestedInput = {
    create?: XOR<MedicationDatabaseLinkCreateWithoutMedicationRecordInput, MedicationDatabaseLinkUncheckedCreateWithoutMedicationRecordInput>
    connectOrCreate?: MedicationDatabaseLinkCreateOrConnectWithoutMedicationRecordInput
    upsert?: MedicationDatabaseLinkUpsertWithoutMedicationRecordInput
    connect?: MedicationDatabaseLinkWhereUniqueInput
    update?: XOR<XOR<MedicationDatabaseLinkUpdateToOneWithWhereWithoutMedicationRecordInput, MedicationDatabaseLinkUpdateWithoutMedicationRecordInput>, MedicationDatabaseLinkUncheckedUpdateWithoutMedicationRecordInput>
  }

  export type UserUpdateOneRequiredWithoutClientMedicationsNestedInput = {
    create?: XOR<UserCreateWithoutClientMedicationsInput, UserUncheckedCreateWithoutClientMedicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutClientMedicationsInput
    upsert?: UserUpsertWithoutClientMedicationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutClientMedicationsInput, UserUpdateWithoutClientMedicationsInput>, UserUncheckedUpdateWithoutClientMedicationsInput>
  }

  export type UserUpdateOneRequiredWithoutCareWorkerMedicationsNestedInput = {
    create?: XOR<UserCreateWithoutCareWorkerMedicationsInput, UserUncheckedCreateWithoutCareWorkerMedicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCareWorkerMedicationsInput
    upsert?: UserUpsertWithoutCareWorkerMedicationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCareWorkerMedicationsInput, UserUpdateWithoutCareWorkerMedicationsInput>, UserUncheckedUpdateWithoutCareWorkerMedicationsInput>
  }

  export type UserUpdateOneRequiredWithoutMedicationRecordsNestedInput = {
    create?: XOR<UserCreateWithoutMedicationRecordsInput, UserUncheckedCreateWithoutMedicationRecordsInput>
    connectOrCreate?: UserCreateOrConnectWithoutMedicationRecordsInput
    upsert?: UserUpsertWithoutMedicationRecordsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMedicationRecordsInput, UserUpdateWithoutMedicationRecordsInput>, UserUncheckedUpdateWithoutMedicationRecordsInput>
  }

  export type MedicationAdministrationUpdateManyWithoutMedicationRecordNestedInput = {
    create?: XOR<MedicationAdministrationCreateWithoutMedicationRecordInput, MedicationAdministrationUncheckedCreateWithoutMedicationRecordInput> | MedicationAdministrationCreateWithoutMedicationRecordInput[] | MedicationAdministrationUncheckedCreateWithoutMedicationRecordInput[]
    connectOrCreate?: MedicationAdministrationCreateOrConnectWithoutMedicationRecordInput | MedicationAdministrationCreateOrConnectWithoutMedicationRecordInput[]
    upsert?: MedicationAdministrationUpsertWithWhereUniqueWithoutMedicationRecordInput | MedicationAdministrationUpsertWithWhereUniqueWithoutMedicationRecordInput[]
    createMany?: MedicationAdministrationCreateManyMedicationRecordInputEnvelope
    set?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    disconnect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    delete?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    connect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    update?: MedicationAdministrationUpdateWithWhereUniqueWithoutMedicationRecordInput | MedicationAdministrationUpdateWithWhereUniqueWithoutMedicationRecordInput[]
    updateMany?: MedicationAdministrationUpdateManyWithWhereWithoutMedicationRecordInput | MedicationAdministrationUpdateManyWithWhereWithoutMedicationRecordInput[]
    deleteMany?: MedicationAdministrationScalarWhereInput | MedicationAdministrationScalarWhereInput[]
  }

  export type MedicationAdministrationUncheckedUpdateManyWithoutMedicationRecordNestedInput = {
    create?: XOR<MedicationAdministrationCreateWithoutMedicationRecordInput, MedicationAdministrationUncheckedCreateWithoutMedicationRecordInput> | MedicationAdministrationCreateWithoutMedicationRecordInput[] | MedicationAdministrationUncheckedCreateWithoutMedicationRecordInput[]
    connectOrCreate?: MedicationAdministrationCreateOrConnectWithoutMedicationRecordInput | MedicationAdministrationCreateOrConnectWithoutMedicationRecordInput[]
    upsert?: MedicationAdministrationUpsertWithWhereUniqueWithoutMedicationRecordInput | MedicationAdministrationUpsertWithWhereUniqueWithoutMedicationRecordInput[]
    createMany?: MedicationAdministrationCreateManyMedicationRecordInputEnvelope
    set?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    disconnect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    delete?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    connect?: MedicationAdministrationWhereUniqueInput | MedicationAdministrationWhereUniqueInput[]
    update?: MedicationAdministrationUpdateWithWhereUniqueWithoutMedicationRecordInput | MedicationAdministrationUpdateWithWhereUniqueWithoutMedicationRecordInput[]
    updateMany?: MedicationAdministrationUpdateManyWithWhereWithoutMedicationRecordInput | MedicationAdministrationUpdateManyWithWhereWithoutMedicationRecordInput[]
    deleteMany?: MedicationAdministrationScalarWhereInput | MedicationAdministrationScalarWhereInput[]
  }

  export type MedicationRecordCreateNestedOneWithoutAdministrationRecordsInput = {
    create?: XOR<MedicationRecordCreateWithoutAdministrationRecordsInput, MedicationRecordUncheckedCreateWithoutAdministrationRecordsInput>
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutAdministrationRecordsInput
    connect?: MedicationRecordWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutMedicationAdministrationsInput = {
    create?: XOR<UserCreateWithoutMedicationAdministrationsInput, UserUncheckedCreateWithoutMedicationAdministrationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutMedicationAdministrationsInput
    connect?: UserWhereUniqueInput
  }

  export type ReportCreateNestedOneWithoutMedicationAdministrationsInput = {
    create?: XOR<ReportCreateWithoutMedicationAdministrationsInput, ReportUncheckedCreateWithoutMedicationAdministrationsInput>
    connectOrCreate?: ReportCreateOrConnectWithoutMedicationAdministrationsInput
    connect?: ReportWhereUniqueInput
  }

  export type EnumDoseTypeFieldUpdateOperationsInput = {
    set?: $Enums.DoseType
  }

  export type MedicationRecordUpdateOneRequiredWithoutAdministrationRecordsNestedInput = {
    create?: XOR<MedicationRecordCreateWithoutAdministrationRecordsInput, MedicationRecordUncheckedCreateWithoutAdministrationRecordsInput>
    connectOrCreate?: MedicationRecordCreateOrConnectWithoutAdministrationRecordsInput
    upsert?: MedicationRecordUpsertWithoutAdministrationRecordsInput
    connect?: MedicationRecordWhereUniqueInput
    update?: XOR<XOR<MedicationRecordUpdateToOneWithWhereWithoutAdministrationRecordsInput, MedicationRecordUpdateWithoutAdministrationRecordsInput>, MedicationRecordUncheckedUpdateWithoutAdministrationRecordsInput>
  }

  export type UserUpdateOneRequiredWithoutMedicationAdministrationsNestedInput = {
    create?: XOR<UserCreateWithoutMedicationAdministrationsInput, UserUncheckedCreateWithoutMedicationAdministrationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutMedicationAdministrationsInput
    upsert?: UserUpsertWithoutMedicationAdministrationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMedicationAdministrationsInput, UserUpdateWithoutMedicationAdministrationsInput>, UserUncheckedUpdateWithoutMedicationAdministrationsInput>
  }

  export type ReportUpdateOneWithoutMedicationAdministrationsNestedInput = {
    create?: XOR<ReportCreateWithoutMedicationAdministrationsInput, ReportUncheckedCreateWithoutMedicationAdministrationsInput>
    connectOrCreate?: ReportCreateOrConnectWithoutMedicationAdministrationsInput
    upsert?: ReportUpsertWithoutMedicationAdministrationsInput
    disconnect?: ReportWhereInput | boolean
    delete?: ReportWhereInput | boolean
    connect?: ReportWhereUniqueInput
    update?: XOR<XOR<ReportUpdateToOneWithWhereWithoutMedicationAdministrationsInput, ReportUpdateWithoutMedicationAdministrationsInput>, ReportUncheckedUpdateWithoutMedicationAdministrationsInput>
  }

  export type AgencyCreateNestedOneWithoutInvoicesInput = {
    create?: XOR<AgencyCreateWithoutInvoicesInput, AgencyUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutInvoicesInput
    connect?: AgencyWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutInvoiceInput = {
    create?: XOR<UserCreateWithoutInvoiceInput, UserUncheckedCreateWithoutInvoiceInput>
    connectOrCreate?: UserCreateOrConnectWithoutInvoiceInput
    connect?: UserWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumInvoiceStatusFieldUpdateOperationsInput = {
    set?: $Enums.InvoiceStatus
  }

  export type AgencyUpdateOneRequiredWithoutInvoicesNestedInput = {
    create?: XOR<AgencyCreateWithoutInvoicesInput, AgencyUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutInvoicesInput
    upsert?: AgencyUpsertWithoutInvoicesInput
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutInvoicesInput, AgencyUpdateWithoutInvoicesInput>, AgencyUncheckedUpdateWithoutInvoicesInput>
  }

  export type UserUpdateOneWithoutInvoiceNestedInput = {
    create?: XOR<UserCreateWithoutInvoiceInput, UserUncheckedCreateWithoutInvoiceInput>
    connectOrCreate?: UserCreateOrConnectWithoutInvoiceInput
    upsert?: UserUpsertWithoutInvoiceInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutInvoiceInput, UserUpdateWithoutInvoiceInput>, UserUncheckedUpdateWithoutInvoiceInput>
  }

  export type AgencyCreateNestedOneWithoutMileageRecordsInput = {
    create?: XOR<AgencyCreateWithoutMileageRecordsInput, AgencyUncheckedCreateWithoutMileageRecordsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutMileageRecordsInput
    connect?: AgencyWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutClientMileageInput = {
    create?: XOR<UserCreateWithoutClientMileageInput, UserUncheckedCreateWithoutClientMileageInput>
    connectOrCreate?: UserCreateOrConnectWithoutClientMileageInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCareWorkerMileageInput = {
    create?: XOR<UserCreateWithoutCareWorkerMileageInput, UserUncheckedCreateWithoutCareWorkerMileageInput>
    connectOrCreate?: UserCreateOrConnectWithoutCareWorkerMileageInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutMileageRecordsInput = {
    create?: XOR<UserCreateWithoutMileageRecordsInput, UserUncheckedCreateWithoutMileageRecordsInput>
    connectOrCreate?: UserCreateOrConnectWithoutMileageRecordsInput
    connect?: UserWhereUniqueInput
  }

  export type AgencyUpdateOneRequiredWithoutMileageRecordsNestedInput = {
    create?: XOR<AgencyCreateWithoutMileageRecordsInput, AgencyUncheckedCreateWithoutMileageRecordsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutMileageRecordsInput
    upsert?: AgencyUpsertWithoutMileageRecordsInput
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutMileageRecordsInput, AgencyUpdateWithoutMileageRecordsInput>, AgencyUncheckedUpdateWithoutMileageRecordsInput>
  }

  export type UserUpdateOneRequiredWithoutClientMileageNestedInput = {
    create?: XOR<UserCreateWithoutClientMileageInput, UserUncheckedCreateWithoutClientMileageInput>
    connectOrCreate?: UserCreateOrConnectWithoutClientMileageInput
    upsert?: UserUpsertWithoutClientMileageInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutClientMileageInput, UserUpdateWithoutClientMileageInput>, UserUncheckedUpdateWithoutClientMileageInput>
  }

  export type UserUpdateOneRequiredWithoutCareWorkerMileageNestedInput = {
    create?: XOR<UserCreateWithoutCareWorkerMileageInput, UserUncheckedCreateWithoutCareWorkerMileageInput>
    connectOrCreate?: UserCreateOrConnectWithoutCareWorkerMileageInput
    upsert?: UserUpsertWithoutCareWorkerMileageInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCareWorkerMileageInput, UserUpdateWithoutCareWorkerMileageInput>, UserUncheckedUpdateWithoutCareWorkerMileageInput>
  }

  export type UserUpdateOneRequiredWithoutMileageRecordsNestedInput = {
    create?: XOR<UserCreateWithoutMileageRecordsInput, UserUncheckedCreateWithoutMileageRecordsInput>
    connectOrCreate?: UserCreateOrConnectWithoutMileageRecordsInput
    upsert?: UserUpsertWithoutMileageRecordsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMileageRecordsInput, UserUpdateWithoutMileageRecordsInput>, UserUncheckedUpdateWithoutMileageRecordsInput>
  }

  export type UserCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<UserCreateWithoutDocumentsInput, UserUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDocumentsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDocumentInput = {
    create?: XOR<UserCreateWithoutDocumentInput, UserUncheckedCreateWithoutDocumentInput>
    connectOrCreate?: UserCreateOrConnectWithoutDocumentInput
    connect?: UserWhereUniqueInput
  }

  export type AgencyCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<AgencyCreateWithoutDocumentsInput, AgencyUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutDocumentsInput
    connect?: AgencyWhereUniqueInput
  }

  export type UserUpdateOneWithoutDocumentsNestedInput = {
    create?: XOR<UserCreateWithoutDocumentsInput, UserUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDocumentsInput
    upsert?: UserUpsertWithoutDocumentsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDocumentsInput, UserUpdateWithoutDocumentsInput>, UserUncheckedUpdateWithoutDocumentsInput>
  }

  export type UserUpdateOneWithoutDocumentNestedInput = {
    create?: XOR<UserCreateWithoutDocumentInput, UserUncheckedCreateWithoutDocumentInput>
    connectOrCreate?: UserCreateOrConnectWithoutDocumentInput
    upsert?: UserUpsertWithoutDocumentInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDocumentInput, UserUpdateWithoutDocumentInput>, UserUncheckedUpdateWithoutDocumentInput>
  }

  export type AgencyUpdateOneWithoutDocumentsNestedInput = {
    create?: XOR<AgencyCreateWithoutDocumentsInput, AgencyUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutDocumentsInput
    upsert?: AgencyUpsertWithoutDocumentsInput
    disconnect?: AgencyWhereInput | boolean
    delete?: AgencyWhereInput | boolean
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutDocumentsInput, AgencyUpdateWithoutDocumentsInput>, AgencyUncheckedUpdateWithoutDocumentsInput>
  }

  export type UserCreateNestedOneWithoutProfileInput = {
    create?: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutProfileInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutProfileNestedInput = {
    create?: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutProfileInput
    upsert?: UserUpsertWithoutProfileInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProfileInput, UserUpdateWithoutProfileInput>, UserUncheckedUpdateWithoutProfileInput>
  }

  export type UserCreateNestedOneWithoutIncidentReportsInput = {
    create?: XOR<UserCreateWithoutIncidentReportsInput, UserUncheckedCreateWithoutIncidentReportsInput>
    connectOrCreate?: UserCreateOrConnectWithoutIncidentReportsInput
    connect?: UserWhereUniqueInput
  }

  export type AgencyCreateNestedOneWithoutIncidentReportsInput = {
    create?: XOR<AgencyCreateWithoutIncidentReportsInput, AgencyUncheckedCreateWithoutIncidentReportsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutIncidentReportsInput
    connect?: AgencyWhereUniqueInput
  }

  export type EnumSeverityLevelFieldUpdateOperationsInput = {
    set?: $Enums.SeverityLevel
  }

  export type UserUpdateOneRequiredWithoutIncidentReportsNestedInput = {
    create?: XOR<UserCreateWithoutIncidentReportsInput, UserUncheckedCreateWithoutIncidentReportsInput>
    connectOrCreate?: UserCreateOrConnectWithoutIncidentReportsInput
    upsert?: UserUpsertWithoutIncidentReportsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutIncidentReportsInput, UserUpdateWithoutIncidentReportsInput>, UserUncheckedUpdateWithoutIncidentReportsInput>
  }

  export type AgencyUpdateOneRequiredWithoutIncidentReportsNestedInput = {
    create?: XOR<AgencyCreateWithoutIncidentReportsInput, AgencyUncheckedCreateWithoutIncidentReportsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutIncidentReportsInput
    upsert?: AgencyUpsertWithoutIncidentReportsInput
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutIncidentReportsInput, AgencyUpdateWithoutIncidentReportsInput>, AgencyUncheckedUpdateWithoutIncidentReportsInput>
  }

  export type UserCreateNestedOneWithoutSentMessagesInput = {
    create?: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentMessagesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReceivedMessagesInput = {
    create?: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedMessagesInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSentMessagesNestedInput = {
    create?: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentMessagesInput
    upsert?: UserUpsertWithoutSentMessagesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSentMessagesInput, UserUpdateWithoutSentMessagesInput>, UserUncheckedUpdateWithoutSentMessagesInput>
  }

  export type UserUpdateOneRequiredWithoutReceivedMessagesNestedInput = {
    create?: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedMessagesInput
    upsert?: UserUpsertWithoutReceivedMessagesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReceivedMessagesInput, UserUpdateWithoutReceivedMessagesInput>, UserUncheckedUpdateWithoutReceivedMessagesInput>
  }

  export type UserCreateNestedOneWithoutKeyContactsInput = {
    create?: XOR<UserCreateWithoutKeyContactsInput, UserUncheckedCreateWithoutKeyContactsInput>
    connectOrCreate?: UserCreateOrConnectWithoutKeyContactsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutKeyContactsNestedInput = {
    create?: XOR<UserCreateWithoutKeyContactsInput, UserUncheckedCreateWithoutKeyContactsInput>
    connectOrCreate?: UserCreateOrConnectWithoutKeyContactsInput
    upsert?: UserUpsertWithoutKeyContactsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutKeyContactsInput, UserUpdateWithoutKeyContactsInput>, UserUncheckedUpdateWithoutKeyContactsInput>
  }

  export type UserCreateNestedOneWithoutCareOutcomesInput = {
    create?: XOR<UserCreateWithoutCareOutcomesInput, UserUncheckedCreateWithoutCareOutcomesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCareOutcomesInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutCareOutcomesNestedInput = {
    create?: XOR<UserCreateWithoutCareOutcomesInput, UserUncheckedCreateWithoutCareOutcomesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCareOutcomesInput
    upsert?: UserUpsertWithoutCareOutcomesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCareOutcomesInput, UserUpdateWithoutCareOutcomesInput>, UserUncheckedUpdateWithoutCareOutcomesInput>
  }

  export type UserCreateNestedOneWithoutCommunicationLogsInput = {
    create?: XOR<UserCreateWithoutCommunicationLogsInput, UserUncheckedCreateWithoutCommunicationLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommunicationLogsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutCommunicationLogsNestedInput = {
    create?: XOR<UserCreateWithoutCommunicationLogsInput, UserUncheckedCreateWithoutCommunicationLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommunicationLogsInput
    upsert?: UserUpsertWithoutCommunicationLogsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCommunicationLogsInput, UserUpdateWithoutCommunicationLogsInput>, UserUncheckedUpdateWithoutCommunicationLogsInput>
  }

  export type AgencyCreateNestedOneWithoutRiskCategoriesInput = {
    create?: XOR<AgencyCreateWithoutRiskCategoriesInput, AgencyUncheckedCreateWithoutRiskCategoriesInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutRiskCategoriesInput
    connect?: AgencyWhereUniqueInput
  }

  export type RiskAssessmentCreateNestedManyWithoutRiskCategoryInput = {
    create?: XOR<RiskAssessmentCreateWithoutRiskCategoryInput, RiskAssessmentUncheckedCreateWithoutRiskCategoryInput> | RiskAssessmentCreateWithoutRiskCategoryInput[] | RiskAssessmentUncheckedCreateWithoutRiskCategoryInput[]
    connectOrCreate?: RiskAssessmentCreateOrConnectWithoutRiskCategoryInput | RiskAssessmentCreateOrConnectWithoutRiskCategoryInput[]
    createMany?: RiskAssessmentCreateManyRiskCategoryInputEnvelope
    connect?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
  }

  export type RiskAssessmentUncheckedCreateNestedManyWithoutRiskCategoryInput = {
    create?: XOR<RiskAssessmentCreateWithoutRiskCategoryInput, RiskAssessmentUncheckedCreateWithoutRiskCategoryInput> | RiskAssessmentCreateWithoutRiskCategoryInput[] | RiskAssessmentUncheckedCreateWithoutRiskCategoryInput[]
    connectOrCreate?: RiskAssessmentCreateOrConnectWithoutRiskCategoryInput | RiskAssessmentCreateOrConnectWithoutRiskCategoryInput[]
    createMany?: RiskAssessmentCreateManyRiskCategoryInputEnvelope
    connect?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
  }

  export type AgencyUpdateOneRequiredWithoutRiskCategoriesNestedInput = {
    create?: XOR<AgencyCreateWithoutRiskCategoriesInput, AgencyUncheckedCreateWithoutRiskCategoriesInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutRiskCategoriesInput
    upsert?: AgencyUpsertWithoutRiskCategoriesInput
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutRiskCategoriesInput, AgencyUpdateWithoutRiskCategoriesInput>, AgencyUncheckedUpdateWithoutRiskCategoriesInput>
  }

  export type RiskAssessmentUpdateManyWithoutRiskCategoryNestedInput = {
    create?: XOR<RiskAssessmentCreateWithoutRiskCategoryInput, RiskAssessmentUncheckedCreateWithoutRiskCategoryInput> | RiskAssessmentCreateWithoutRiskCategoryInput[] | RiskAssessmentUncheckedCreateWithoutRiskCategoryInput[]
    connectOrCreate?: RiskAssessmentCreateOrConnectWithoutRiskCategoryInput | RiskAssessmentCreateOrConnectWithoutRiskCategoryInput[]
    upsert?: RiskAssessmentUpsertWithWhereUniqueWithoutRiskCategoryInput | RiskAssessmentUpsertWithWhereUniqueWithoutRiskCategoryInput[]
    createMany?: RiskAssessmentCreateManyRiskCategoryInputEnvelope
    set?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
    disconnect?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
    delete?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
    connect?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
    update?: RiskAssessmentUpdateWithWhereUniqueWithoutRiskCategoryInput | RiskAssessmentUpdateWithWhereUniqueWithoutRiskCategoryInput[]
    updateMany?: RiskAssessmentUpdateManyWithWhereWithoutRiskCategoryInput | RiskAssessmentUpdateManyWithWhereWithoutRiskCategoryInput[]
    deleteMany?: RiskAssessmentScalarWhereInput | RiskAssessmentScalarWhereInput[]
  }

  export type RiskAssessmentUncheckedUpdateManyWithoutRiskCategoryNestedInput = {
    create?: XOR<RiskAssessmentCreateWithoutRiskCategoryInput, RiskAssessmentUncheckedCreateWithoutRiskCategoryInput> | RiskAssessmentCreateWithoutRiskCategoryInput[] | RiskAssessmentUncheckedCreateWithoutRiskCategoryInput[]
    connectOrCreate?: RiskAssessmentCreateOrConnectWithoutRiskCategoryInput | RiskAssessmentCreateOrConnectWithoutRiskCategoryInput[]
    upsert?: RiskAssessmentUpsertWithWhereUniqueWithoutRiskCategoryInput | RiskAssessmentUpsertWithWhereUniqueWithoutRiskCategoryInput[]
    createMany?: RiskAssessmentCreateManyRiskCategoryInputEnvelope
    set?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
    disconnect?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
    delete?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
    connect?: RiskAssessmentWhereUniqueInput | RiskAssessmentWhereUniqueInput[]
    update?: RiskAssessmentUpdateWithWhereUniqueWithoutRiskCategoryInput | RiskAssessmentUpdateWithWhereUniqueWithoutRiskCategoryInput[]
    updateMany?: RiskAssessmentUpdateManyWithWhereWithoutRiskCategoryInput | RiskAssessmentUpdateManyWithWhereWithoutRiskCategoryInput[]
    deleteMany?: RiskAssessmentScalarWhereInput | RiskAssessmentScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutRiskAssessmentsInput = {
    create?: XOR<UserCreateWithoutRiskAssessmentsInput, UserUncheckedCreateWithoutRiskAssessmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutRiskAssessmentsInput
    connect?: UserWhereUniqueInput
  }

  export type RiskCategoryCreateNestedOneWithoutRiskAssessmentsInput = {
    create?: XOR<RiskCategoryCreateWithoutRiskAssessmentsInput, RiskCategoryUncheckedCreateWithoutRiskAssessmentsInput>
    connectOrCreate?: RiskCategoryCreateOrConnectWithoutRiskAssessmentsInput
    connect?: RiskCategoryWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutRiskAssessmentsNestedInput = {
    create?: XOR<UserCreateWithoutRiskAssessmentsInput, UserUncheckedCreateWithoutRiskAssessmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutRiskAssessmentsInput
    upsert?: UserUpsertWithoutRiskAssessmentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRiskAssessmentsInput, UserUpdateWithoutRiskAssessmentsInput>, UserUncheckedUpdateWithoutRiskAssessmentsInput>
  }

  export type RiskCategoryUpdateOneRequiredWithoutRiskAssessmentsNestedInput = {
    create?: XOR<RiskCategoryCreateWithoutRiskAssessmentsInput, RiskCategoryUncheckedCreateWithoutRiskAssessmentsInput>
    connectOrCreate?: RiskCategoryCreateOrConnectWithoutRiskAssessmentsInput
    upsert?: RiskCategoryUpsertWithoutRiskAssessmentsInput
    connect?: RiskCategoryWhereUniqueInput
    update?: XOR<XOR<RiskCategoryUpdateToOneWithWhereWithoutRiskAssessmentsInput, RiskCategoryUpdateWithoutRiskAssessmentsInput>, RiskCategoryUncheckedUpdateWithoutRiskAssessmentsInput>
  }

  export type UserCreateNestedOneWithoutRemindersInput = {
    create?: XOR<UserCreateWithoutRemindersInput, UserUncheckedCreateWithoutRemindersInput>
    connectOrCreate?: UserCreateOrConnectWithoutRemindersInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutRemindersNestedInput = {
    create?: XOR<UserCreateWithoutRemindersInput, UserUncheckedCreateWithoutRemindersInput>
    connectOrCreate?: UserCreateOrConnectWithoutRemindersInput
    upsert?: UserUpsertWithoutRemindersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRemindersInput, UserUpdateWithoutRemindersInput>, UserUncheckedUpdateWithoutRemindersInput>
  }

  export type UserCreateNestedOneWithoutNotificationInput = {
    create?: XOR<UserCreateWithoutNotificationInput, UserUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationInput
    connect?: UserWhereUniqueInput
  }

  export type EnumNotificationTypeFieldUpdateOperationsInput = {
    set?: $Enums.NotificationType
  }

  export type UserUpdateOneRequiredWithoutNotificationNestedInput = {
    create?: XOR<UserCreateWithoutNotificationInput, UserUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationInput
    upsert?: UserUpsertWithoutNotificationInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotificationInput, UserUpdateWithoutNotificationInput>, UserUncheckedUpdateWithoutNotificationInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedEnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type NestedEnumSubRoleNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.SubRole | EnumSubRoleFieldRefInput<$PrismaModel> | null
    in?: $Enums.SubRole[] | ListEnumSubRoleFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SubRole[] | ListEnumSubRoleFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSubRoleNullableFilter<$PrismaModel> | $Enums.SubRole | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumInvitationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.InvitationStatus | EnumInvitationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvitationStatus[] | ListEnumInvitationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvitationStatus[] | ListEnumInvitationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvitationStatusFilter<$PrismaModel> | $Enums.InvitationStatus
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedEnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type NestedEnumSubRoleNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubRole | EnumSubRoleFieldRefInput<$PrismaModel> | null
    in?: $Enums.SubRole[] | ListEnumSubRoleFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SubRole[] | ListEnumSubRoleFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSubRoleNullableWithAggregatesFilter<$PrismaModel> | $Enums.SubRole | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumSubRoleNullableFilter<$PrismaModel>
    _max?: NestedEnumSubRoleNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumInvitationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InvitationStatus | EnumInvitationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvitationStatus[] | ListEnumInvitationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvitationStatus[] | ListEnumInvitationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvitationStatusWithAggregatesFilter<$PrismaModel> | $Enums.InvitationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInvitationStatusFilter<$PrismaModel>
    _max?: NestedEnumInvitationStatusFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumScheduleTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduleType | EnumScheduleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduleType[] | ListEnumScheduleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduleType[] | ListEnumScheduleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduleTypeFilter<$PrismaModel> | $Enums.ScheduleType
  }

  export type NestedEnumScheduleTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduleType | EnumScheduleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduleType[] | ListEnumScheduleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduleType[] | ListEnumScheduleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduleTypeWithAggregatesFilter<$PrismaModel> | $Enums.ScheduleType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumScheduleTypeFilter<$PrismaModel>
    _max?: NestedEnumScheduleTypeFilter<$PrismaModel>
  }

  export type NestedEnumReportStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportStatus | EnumReportStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReportStatusFilter<$PrismaModel> | $Enums.ReportStatus
  }

  export type NestedEnumReportStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportStatus | EnumReportStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReportStatusWithAggregatesFilter<$PrismaModel> | $Enums.ReportStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReportStatusFilter<$PrismaModel>
    _max?: NestedEnumReportStatusFilter<$PrismaModel>
  }

  export type NestedEnumAlertTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AlertType | EnumAlertTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AlertType[] | ListEnumAlertTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AlertType[] | ListEnumAlertTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAlertTypeFilter<$PrismaModel> | $Enums.AlertType
  }

  export type NestedEnumAlertSeverityFilter<$PrismaModel = never> = {
    equals?: $Enums.AlertSeverity | EnumAlertSeverityFieldRefInput<$PrismaModel>
    in?: $Enums.AlertSeverity[] | ListEnumAlertSeverityFieldRefInput<$PrismaModel>
    notIn?: $Enums.AlertSeverity[] | ListEnumAlertSeverityFieldRefInput<$PrismaModel>
    not?: NestedEnumAlertSeverityFilter<$PrismaModel> | $Enums.AlertSeverity
  }

  export type NestedEnumAlertTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AlertType | EnumAlertTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AlertType[] | ListEnumAlertTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AlertType[] | ListEnumAlertTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAlertTypeWithAggregatesFilter<$PrismaModel> | $Enums.AlertType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAlertTypeFilter<$PrismaModel>
    _max?: NestedEnumAlertTypeFilter<$PrismaModel>
  }

  export type NestedEnumAlertSeverityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AlertSeverity | EnumAlertSeverityFieldRefInput<$PrismaModel>
    in?: $Enums.AlertSeverity[] | ListEnumAlertSeverityFieldRefInput<$PrismaModel>
    notIn?: $Enums.AlertSeverity[] | ListEnumAlertSeverityFieldRefInput<$PrismaModel>
    not?: NestedEnumAlertSeverityWithAggregatesFilter<$PrismaModel> | $Enums.AlertSeverity
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAlertSeverityFilter<$PrismaModel>
    _max?: NestedEnumAlertSeverityFilter<$PrismaModel>
  }

  export type NestedEnumDoseTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DoseType | EnumDoseTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DoseType[] | ListEnumDoseTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DoseType[] | ListEnumDoseTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDoseTypeFilter<$PrismaModel> | $Enums.DoseType
  }

  export type NestedEnumDoseTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DoseType | EnumDoseTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DoseType[] | ListEnumDoseTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DoseType[] | ListEnumDoseTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDoseTypeWithAggregatesFilter<$PrismaModel> | $Enums.DoseType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDoseTypeFilter<$PrismaModel>
    _max?: NestedEnumDoseTypeFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumInvoiceStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.InvoiceStatus | EnumInvoiceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvoiceStatusFilter<$PrismaModel> | $Enums.InvoiceStatus
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumInvoiceStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InvoiceStatus | EnumInvoiceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvoiceStatus[] | ListEnumInvoiceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvoiceStatusWithAggregatesFilter<$PrismaModel> | $Enums.InvoiceStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInvoiceStatusFilter<$PrismaModel>
    _max?: NestedEnumInvoiceStatusFilter<$PrismaModel>
  }

  export type NestedEnumSeverityLevelFilter<$PrismaModel = never> = {
    equals?: $Enums.SeverityLevel | EnumSeverityLevelFieldRefInput<$PrismaModel>
    in?: $Enums.SeverityLevel[] | ListEnumSeverityLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.SeverityLevel[] | ListEnumSeverityLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumSeverityLevelFilter<$PrismaModel> | $Enums.SeverityLevel
  }

  export type NestedEnumSeverityLevelWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SeverityLevel | EnumSeverityLevelFieldRefInput<$PrismaModel>
    in?: $Enums.SeverityLevel[] | ListEnumSeverityLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.SeverityLevel[] | ListEnumSeverityLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumSeverityLevelWithAggregatesFilter<$PrismaModel> | $Enums.SeverityLevel
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSeverityLevelFilter<$PrismaModel>
    _max?: NestedEnumSeverityLevelFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedEnumNotificationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeFilter<$PrismaModel> | $Enums.NotificationType
  }

  export type NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel> | $Enums.NotificationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNotificationTypeFilter<$PrismaModel>
    _max?: NestedEnumNotificationTypeFilter<$PrismaModel>
  }

  export type UserCreateWithoutSentInvitationsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutSentInvitationsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutSentInvitationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSentInvitationsInput, UserUncheckedCreateWithoutSentInvitationsInput>
  }

  export type UserUpsertWithoutSentInvitationsInput = {
    update: XOR<UserUpdateWithoutSentInvitationsInput, UserUncheckedUpdateWithoutSentInvitationsInput>
    create: XOR<UserCreateWithoutSentInvitationsInput, UserUncheckedCreateWithoutSentInvitationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSentInvitationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSentInvitationsInput, UserUncheckedUpdateWithoutSentInvitationsInput>
  }

  export type UserUpdateWithoutSentInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutSentInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserCreateWithoutAgencyInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutAgencyInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutAgencyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAgencyInput, UserUncheckedCreateWithoutAgencyInput>
  }

  export type UserCreateManyAgencyInputEnvelope = {
    data: UserCreateManyAgencyInput | UserCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type ScheduleCreateWithoutAgencyInput = {
    id?: string
    date: Date | string
    startTime: string
    endTime: string
    status?: string
    type?: $Enums.ScheduleType
    notes?: string | null
    chargeRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    visitType?: VisitTypeCreateNestedOneWithoutSchedulesInput
    client: UserCreateNestedOneWithoutClientSchedulesInput
    user: UserCreateNestedOneWithoutCareWorkerSchedulesInput
  }

  export type ScheduleUncheckedCreateWithoutAgencyInput = {
    id?: string
    clientId: string
    userId: string
    date: Date | string
    startTime: string
    endTime: string
    status?: string
    type?: $Enums.ScheduleType
    notes?: string | null
    chargeRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    visitTypeId?: string | null
  }

  export type ScheduleCreateOrConnectWithoutAgencyInput = {
    where: ScheduleWhereUniqueInput
    create: XOR<ScheduleCreateWithoutAgencyInput, ScheduleUncheckedCreateWithoutAgencyInput>
  }

  export type ScheduleCreateManyAgencyInputEnvelope = {
    data: ScheduleCreateManyAgencyInput | ScheduleCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceCreateWithoutAgencyInput = {
    id?: string
    amount: number
    description: string
    issuedAt?: Date | string
    dueDate: Date | string
    status: $Enums.InvoiceStatus
    client?: UserCreateNestedOneWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutAgencyInput = {
    id?: string
    clientId?: string | null
    amount: number
    description: string
    issuedAt?: Date | string
    dueDate: Date | string
    status: $Enums.InvoiceStatus
  }

  export type InvoiceCreateOrConnectWithoutAgencyInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutAgencyInput, InvoiceUncheckedCreateWithoutAgencyInput>
  }

  export type InvoiceCreateManyAgencyInputEnvelope = {
    data: InvoiceCreateManyAgencyInput | InvoiceCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type MileageRecordCreateWithoutAgencyInput = {
    id?: string
    date: Date | string
    startMileage: number
    endMileage: number
    totalMiles: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutClientMileageInput
    user: UserCreateNestedOneWithoutCareWorkerMileageInput
    User: UserCreateNestedOneWithoutMileageRecordsInput
  }

  export type MileageRecordUncheckedCreateWithoutAgencyInput = {
    id?: string
    clientId: string
    userId: string
    date: Date | string
    startMileage: number
    endMileage: number
    totalMiles: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MileageRecordCreateOrConnectWithoutAgencyInput = {
    where: MileageRecordWhereUniqueInput
    create: XOR<MileageRecordCreateWithoutAgencyInput, MileageRecordUncheckedCreateWithoutAgencyInput>
  }

  export type MileageRecordCreateManyAgencyInputEnvelope = {
    data: MileageRecordCreateManyAgencyInput | MileageRecordCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type DocumentCreateWithoutAgencyInput = {
    id?: string
    title: string
    fileUrl: string
    uploadedAt?: Date | string
    user?: UserCreateNestedOneWithoutDocumentsInput
    client?: UserCreateNestedOneWithoutDocumentInput
  }

  export type DocumentUncheckedCreateWithoutAgencyInput = {
    id?: string
    title: string
    fileUrl: string
    uploadedAt?: Date | string
    userId?: string | null
    clientId?: string | null
  }

  export type DocumentCreateOrConnectWithoutAgencyInput = {
    where: DocumentWhereUniqueInput
    create: XOR<DocumentCreateWithoutAgencyInput, DocumentUncheckedCreateWithoutAgencyInput>
  }

  export type DocumentCreateManyAgencyInputEnvelope = {
    data: DocumentCreateManyAgencyInput | DocumentCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type IncidentReportCreateWithoutAgencyInput = {
    id?: string
    description: string
    severity: $Enums.SeverityLevel
    reportedAt?: Date | string
    reporter: UserCreateNestedOneWithoutIncidentReportsInput
  }

  export type IncidentReportUncheckedCreateWithoutAgencyInput = {
    id?: string
    reporterId: string
    description: string
    severity: $Enums.SeverityLevel
    reportedAt?: Date | string
  }

  export type IncidentReportCreateOrConnectWithoutAgencyInput = {
    where: IncidentReportWhereUniqueInput
    create: XOR<IncidentReportCreateWithoutAgencyInput, IncidentReportUncheckedCreateWithoutAgencyInput>
  }

  export type IncidentReportCreateManyAgencyInputEnvelope = {
    data: IncidentReportCreateManyAgencyInput | IncidentReportCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type MedicationDatabaseLinkCreateWithoutAgencyInput = {
    id?: string
    name: string
    isSpecialist?: boolean
    url: string
    source: string
    MedicationRecord?: MedicationRecordCreateNestedManyWithoutMedicationInput
  }

  export type MedicationDatabaseLinkUncheckedCreateWithoutAgencyInput = {
    id?: string
    name: string
    isSpecialist?: boolean
    url: string
    source: string
    MedicationRecord?: MedicationRecordUncheckedCreateNestedManyWithoutMedicationInput
  }

  export type MedicationDatabaseLinkCreateOrConnectWithoutAgencyInput = {
    where: MedicationDatabaseLinkWhereUniqueInput
    create: XOR<MedicationDatabaseLinkCreateWithoutAgencyInput, MedicationDatabaseLinkUncheckedCreateWithoutAgencyInput>
  }

  export type MedicationDatabaseLinkCreateManyAgencyInputEnvelope = {
    data: MedicationDatabaseLinkCreateManyAgencyInput | MedicationDatabaseLinkCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type VisitTypeCreateWithoutAgencyInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    schedules?: ScheduleCreateNestedManyWithoutVisitTypeInput
  }

  export type VisitTypeUncheckedCreateWithoutAgencyInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    schedules?: ScheduleUncheckedCreateNestedManyWithoutVisitTypeInput
  }

  export type VisitTypeCreateOrConnectWithoutAgencyInput = {
    where: VisitTypeWhereUniqueInput
    create: XOR<VisitTypeCreateWithoutAgencyInput, VisitTypeUncheckedCreateWithoutAgencyInput>
  }

  export type VisitTypeCreateManyAgencyInputEnvelope = {
    data: VisitTypeCreateManyAgencyInput | VisitTypeCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type RiskCategoryCreateWithoutAgencyInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutRiskCategoryInput
  }

  export type RiskCategoryUncheckedCreateWithoutAgencyInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutRiskCategoryInput
  }

  export type RiskCategoryCreateOrConnectWithoutAgencyInput = {
    where: RiskCategoryWhereUniqueInput
    create: XOR<RiskCategoryCreateWithoutAgencyInput, RiskCategoryUncheckedCreateWithoutAgencyInput>
  }

  export type RiskCategoryCreateManyAgencyInputEnvelope = {
    data: RiskCategoryCreateManyAgencyInput | RiskCategoryCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type ReportCreateWithoutAgencyInput = {
    id?: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    tasksCompleted?: ReportTaskCreateNestedManyWithoutReportInput
    alerts?: ReportAlertCreateNestedManyWithoutReportInput
    bodyMapObservations?: BodyMapObservationCreateNestedManyWithoutReportInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutReportInput
    editHistory?: ReportEditCreateNestedManyWithoutReportInput
    client: UserCreateNestedOneWithoutClientReportsInput
    caregiver: UserCreateNestedOneWithoutCareReportsInput
  }

  export type ReportUncheckedCreateWithoutAgencyInput = {
    id?: string
    clientId: string
    userId: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    tasksCompleted?: ReportTaskUncheckedCreateNestedManyWithoutReportInput
    alerts?: ReportAlertUncheckedCreateNestedManyWithoutReportInput
    bodyMapObservations?: BodyMapObservationUncheckedCreateNestedManyWithoutReportInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutReportInput
    editHistory?: ReportEditUncheckedCreateNestedManyWithoutReportInput
  }

  export type ReportCreateOrConnectWithoutAgencyInput = {
    where: ReportWhereUniqueInput
    create: XOR<ReportCreateWithoutAgencyInput, ReportUncheckedCreateWithoutAgencyInput>
  }

  export type ReportCreateManyAgencyInputEnvelope = {
    data: ReportCreateManyAgencyInput | ReportCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutAgencyInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutAgencyInput, UserUncheckedUpdateWithoutAgencyInput>
    create: XOR<UserCreateWithoutAgencyInput, UserUncheckedCreateWithoutAgencyInput>
  }

  export type UserUpdateWithWhereUniqueWithoutAgencyInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutAgencyInput, UserUncheckedUpdateWithoutAgencyInput>
  }

  export type UserUpdateManyWithWhereWithoutAgencyInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutAgencyInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    cognitoId?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    role?: EnumRoleFilter<"User"> | $Enums.Role
    subRole?: EnumSubRoleNullableFilter<"User"> | $Enums.SubRole | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    agencyId?: StringNullableFilter<"User"> | string | null
    invitedById?: StringNullableFilter<"User"> | string | null
    title?: StringNullableFilter<"User"> | string | null
    addressLine1?: StringNullableFilter<"User"> | string | null
    addressLine2?: StringNullableFilter<"User"> | string | null
    townOrCity?: StringNullableFilter<"User"> | string | null
    county?: StringNullableFilter<"User"> | string | null
    postalCode?: StringNullableFilter<"User"> | string | null
    propertyAccess?: StringNullableFilter<"User"> | string | null
    phoneNumber?: StringNullableFilter<"User"> | string | null
    nhsNumber?: StringNullableFilter<"User"> | string | null
    dnraOrder?: BoolNullableFilter<"User"> | boolean | null
    chargeRate?: FloatNullableFilter<"User"> | number | null
    mobility?: StringNullableFilter<"User"> | string | null
    likesDislikes?: StringNullableFilter<"User"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"User"> | Date | string | null
    languages?: StringNullableFilter<"User"> | string | null
    allergies?: StringNullableFilter<"User"> | string | null
    interests?: StringNullableFilter<"User"> | string | null
    history?: StringNullableFilter<"User"> | string | null
    preferredName?: StringNullableFilter<"User"> | string | null
  }

  export type ScheduleUpsertWithWhereUniqueWithoutAgencyInput = {
    where: ScheduleWhereUniqueInput
    update: XOR<ScheduleUpdateWithoutAgencyInput, ScheduleUncheckedUpdateWithoutAgencyInput>
    create: XOR<ScheduleCreateWithoutAgencyInput, ScheduleUncheckedCreateWithoutAgencyInput>
  }

  export type ScheduleUpdateWithWhereUniqueWithoutAgencyInput = {
    where: ScheduleWhereUniqueInput
    data: XOR<ScheduleUpdateWithoutAgencyInput, ScheduleUncheckedUpdateWithoutAgencyInput>
  }

  export type ScheduleUpdateManyWithWhereWithoutAgencyInput = {
    where: ScheduleScalarWhereInput
    data: XOR<ScheduleUpdateManyMutationInput, ScheduleUncheckedUpdateManyWithoutAgencyInput>
  }

  export type ScheduleScalarWhereInput = {
    AND?: ScheduleScalarWhereInput | ScheduleScalarWhereInput[]
    OR?: ScheduleScalarWhereInput[]
    NOT?: ScheduleScalarWhereInput | ScheduleScalarWhereInput[]
    id?: StringFilter<"Schedule"> | string
    agencyId?: StringFilter<"Schedule"> | string
    clientId?: StringFilter<"Schedule"> | string
    userId?: StringFilter<"Schedule"> | string
    date?: DateTimeFilter<"Schedule"> | Date | string
    startTime?: StringFilter<"Schedule"> | string
    endTime?: StringFilter<"Schedule"> | string
    status?: StringFilter<"Schedule"> | string
    type?: EnumScheduleTypeFilter<"Schedule"> | $Enums.ScheduleType
    notes?: StringNullableFilter<"Schedule"> | string | null
    chargeRate?: FloatNullableFilter<"Schedule"> | number | null
    createdAt?: DateTimeFilter<"Schedule"> | Date | string
    updatedAt?: DateTimeFilter<"Schedule"> | Date | string
    visitTypeId?: StringNullableFilter<"Schedule"> | string | null
  }

  export type InvoiceUpsertWithWhereUniqueWithoutAgencyInput = {
    where: InvoiceWhereUniqueInput
    update: XOR<InvoiceUpdateWithoutAgencyInput, InvoiceUncheckedUpdateWithoutAgencyInput>
    create: XOR<InvoiceCreateWithoutAgencyInput, InvoiceUncheckedCreateWithoutAgencyInput>
  }

  export type InvoiceUpdateWithWhereUniqueWithoutAgencyInput = {
    where: InvoiceWhereUniqueInput
    data: XOR<InvoiceUpdateWithoutAgencyInput, InvoiceUncheckedUpdateWithoutAgencyInput>
  }

  export type InvoiceUpdateManyWithWhereWithoutAgencyInput = {
    where: InvoiceScalarWhereInput
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyWithoutAgencyInput>
  }

  export type InvoiceScalarWhereInput = {
    AND?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
    OR?: InvoiceScalarWhereInput[]
    NOT?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
    id?: StringFilter<"Invoice"> | string
    agencyId?: StringFilter<"Invoice"> | string
    clientId?: StringNullableFilter<"Invoice"> | string | null
    amount?: FloatFilter<"Invoice"> | number
    description?: StringFilter<"Invoice"> | string
    issuedAt?: DateTimeFilter<"Invoice"> | Date | string
    dueDate?: DateTimeFilter<"Invoice"> | Date | string
    status?: EnumInvoiceStatusFilter<"Invoice"> | $Enums.InvoiceStatus
  }

  export type MileageRecordUpsertWithWhereUniqueWithoutAgencyInput = {
    where: MileageRecordWhereUniqueInput
    update: XOR<MileageRecordUpdateWithoutAgencyInput, MileageRecordUncheckedUpdateWithoutAgencyInput>
    create: XOR<MileageRecordCreateWithoutAgencyInput, MileageRecordUncheckedCreateWithoutAgencyInput>
  }

  export type MileageRecordUpdateWithWhereUniqueWithoutAgencyInput = {
    where: MileageRecordWhereUniqueInput
    data: XOR<MileageRecordUpdateWithoutAgencyInput, MileageRecordUncheckedUpdateWithoutAgencyInput>
  }

  export type MileageRecordUpdateManyWithWhereWithoutAgencyInput = {
    where: MileageRecordScalarWhereInput
    data: XOR<MileageRecordUpdateManyMutationInput, MileageRecordUncheckedUpdateManyWithoutAgencyInput>
  }

  export type MileageRecordScalarWhereInput = {
    AND?: MileageRecordScalarWhereInput | MileageRecordScalarWhereInput[]
    OR?: MileageRecordScalarWhereInput[]
    NOT?: MileageRecordScalarWhereInput | MileageRecordScalarWhereInput[]
    id?: StringFilter<"MileageRecord"> | string
    agencyId?: StringFilter<"MileageRecord"> | string
    clientId?: StringFilter<"MileageRecord"> | string
    userId?: StringFilter<"MileageRecord"> | string
    date?: DateTimeFilter<"MileageRecord"> | Date | string
    startMileage?: FloatFilter<"MileageRecord"> | number
    endMileage?: FloatFilter<"MileageRecord"> | number
    totalMiles?: FloatFilter<"MileageRecord"> | number
    notes?: StringNullableFilter<"MileageRecord"> | string | null
    createdAt?: DateTimeFilter<"MileageRecord"> | Date | string
    updatedAt?: DateTimeFilter<"MileageRecord"> | Date | string
  }

  export type DocumentUpsertWithWhereUniqueWithoutAgencyInput = {
    where: DocumentWhereUniqueInput
    update: XOR<DocumentUpdateWithoutAgencyInput, DocumentUncheckedUpdateWithoutAgencyInput>
    create: XOR<DocumentCreateWithoutAgencyInput, DocumentUncheckedCreateWithoutAgencyInput>
  }

  export type DocumentUpdateWithWhereUniqueWithoutAgencyInput = {
    where: DocumentWhereUniqueInput
    data: XOR<DocumentUpdateWithoutAgencyInput, DocumentUncheckedUpdateWithoutAgencyInput>
  }

  export type DocumentUpdateManyWithWhereWithoutAgencyInput = {
    where: DocumentScalarWhereInput
    data: XOR<DocumentUpdateManyMutationInput, DocumentUncheckedUpdateManyWithoutAgencyInput>
  }

  export type DocumentScalarWhereInput = {
    AND?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
    OR?: DocumentScalarWhereInput[]
    NOT?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
    id?: StringFilter<"Document"> | string
    title?: StringFilter<"Document"> | string
    fileUrl?: StringFilter<"Document"> | string
    uploadedAt?: DateTimeFilter<"Document"> | Date | string
    userId?: StringNullableFilter<"Document"> | string | null
    clientId?: StringNullableFilter<"Document"> | string | null
    agencyId?: StringNullableFilter<"Document"> | string | null
  }

  export type IncidentReportUpsertWithWhereUniqueWithoutAgencyInput = {
    where: IncidentReportWhereUniqueInput
    update: XOR<IncidentReportUpdateWithoutAgencyInput, IncidentReportUncheckedUpdateWithoutAgencyInput>
    create: XOR<IncidentReportCreateWithoutAgencyInput, IncidentReportUncheckedCreateWithoutAgencyInput>
  }

  export type IncidentReportUpdateWithWhereUniqueWithoutAgencyInput = {
    where: IncidentReportWhereUniqueInput
    data: XOR<IncidentReportUpdateWithoutAgencyInput, IncidentReportUncheckedUpdateWithoutAgencyInput>
  }

  export type IncidentReportUpdateManyWithWhereWithoutAgencyInput = {
    where: IncidentReportScalarWhereInput
    data: XOR<IncidentReportUpdateManyMutationInput, IncidentReportUncheckedUpdateManyWithoutAgencyInput>
  }

  export type IncidentReportScalarWhereInput = {
    AND?: IncidentReportScalarWhereInput | IncidentReportScalarWhereInput[]
    OR?: IncidentReportScalarWhereInput[]
    NOT?: IncidentReportScalarWhereInput | IncidentReportScalarWhereInput[]
    id?: StringFilter<"IncidentReport"> | string
    reporterId?: StringFilter<"IncidentReport"> | string
    agencyId?: StringFilter<"IncidentReport"> | string
    description?: StringFilter<"IncidentReport"> | string
    severity?: EnumSeverityLevelFilter<"IncidentReport"> | $Enums.SeverityLevel
    reportedAt?: DateTimeFilter<"IncidentReport"> | Date | string
  }

  export type MedicationDatabaseLinkUpsertWithWhereUniqueWithoutAgencyInput = {
    where: MedicationDatabaseLinkWhereUniqueInput
    update: XOR<MedicationDatabaseLinkUpdateWithoutAgencyInput, MedicationDatabaseLinkUncheckedUpdateWithoutAgencyInput>
    create: XOR<MedicationDatabaseLinkCreateWithoutAgencyInput, MedicationDatabaseLinkUncheckedCreateWithoutAgencyInput>
  }

  export type MedicationDatabaseLinkUpdateWithWhereUniqueWithoutAgencyInput = {
    where: MedicationDatabaseLinkWhereUniqueInput
    data: XOR<MedicationDatabaseLinkUpdateWithoutAgencyInput, MedicationDatabaseLinkUncheckedUpdateWithoutAgencyInput>
  }

  export type MedicationDatabaseLinkUpdateManyWithWhereWithoutAgencyInput = {
    where: MedicationDatabaseLinkScalarWhereInput
    data: XOR<MedicationDatabaseLinkUpdateManyMutationInput, MedicationDatabaseLinkUncheckedUpdateManyWithoutAgencyInput>
  }

  export type MedicationDatabaseLinkScalarWhereInput = {
    AND?: MedicationDatabaseLinkScalarWhereInput | MedicationDatabaseLinkScalarWhereInput[]
    OR?: MedicationDatabaseLinkScalarWhereInput[]
    NOT?: MedicationDatabaseLinkScalarWhereInput | MedicationDatabaseLinkScalarWhereInput[]
    id?: StringFilter<"MedicationDatabaseLink"> | string
    name?: StringFilter<"MedicationDatabaseLink"> | string
    isSpecialist?: BoolFilter<"MedicationDatabaseLink"> | boolean
    url?: StringFilter<"MedicationDatabaseLink"> | string
    source?: StringFilter<"MedicationDatabaseLink"> | string
    agencyId?: StringFilter<"MedicationDatabaseLink"> | string
  }

  export type VisitTypeUpsertWithWhereUniqueWithoutAgencyInput = {
    where: VisitTypeWhereUniqueInput
    update: XOR<VisitTypeUpdateWithoutAgencyInput, VisitTypeUncheckedUpdateWithoutAgencyInput>
    create: XOR<VisitTypeCreateWithoutAgencyInput, VisitTypeUncheckedCreateWithoutAgencyInput>
  }

  export type VisitTypeUpdateWithWhereUniqueWithoutAgencyInput = {
    where: VisitTypeWhereUniqueInput
    data: XOR<VisitTypeUpdateWithoutAgencyInput, VisitTypeUncheckedUpdateWithoutAgencyInput>
  }

  export type VisitTypeUpdateManyWithWhereWithoutAgencyInput = {
    where: VisitTypeScalarWhereInput
    data: XOR<VisitTypeUpdateManyMutationInput, VisitTypeUncheckedUpdateManyWithoutAgencyInput>
  }

  export type VisitTypeScalarWhereInput = {
    AND?: VisitTypeScalarWhereInput | VisitTypeScalarWhereInput[]
    OR?: VisitTypeScalarWhereInput[]
    NOT?: VisitTypeScalarWhereInput | VisitTypeScalarWhereInput[]
    id?: StringFilter<"VisitType"> | string
    agencyId?: StringFilter<"VisitType"> | string
    name?: StringFilter<"VisitType"> | string
    description?: StringNullableFilter<"VisitType"> | string | null
    createdAt?: DateTimeFilter<"VisitType"> | Date | string
    updatedAt?: DateTimeFilter<"VisitType"> | Date | string
  }

  export type RiskCategoryUpsertWithWhereUniqueWithoutAgencyInput = {
    where: RiskCategoryWhereUniqueInput
    update: XOR<RiskCategoryUpdateWithoutAgencyInput, RiskCategoryUncheckedUpdateWithoutAgencyInput>
    create: XOR<RiskCategoryCreateWithoutAgencyInput, RiskCategoryUncheckedCreateWithoutAgencyInput>
  }

  export type RiskCategoryUpdateWithWhereUniqueWithoutAgencyInput = {
    where: RiskCategoryWhereUniqueInput
    data: XOR<RiskCategoryUpdateWithoutAgencyInput, RiskCategoryUncheckedUpdateWithoutAgencyInput>
  }

  export type RiskCategoryUpdateManyWithWhereWithoutAgencyInput = {
    where: RiskCategoryScalarWhereInput
    data: XOR<RiskCategoryUpdateManyMutationInput, RiskCategoryUncheckedUpdateManyWithoutAgencyInput>
  }

  export type RiskCategoryScalarWhereInput = {
    AND?: RiskCategoryScalarWhereInput | RiskCategoryScalarWhereInput[]
    OR?: RiskCategoryScalarWhereInput[]
    NOT?: RiskCategoryScalarWhereInput | RiskCategoryScalarWhereInput[]
    id?: StringFilter<"RiskCategory"> | string
    agencyId?: StringFilter<"RiskCategory"> | string
    name?: StringFilter<"RiskCategory"> | string
    description?: StringNullableFilter<"RiskCategory"> | string | null
    createdAt?: DateTimeFilter<"RiskCategory"> | Date | string
  }

  export type ReportUpsertWithWhereUniqueWithoutAgencyInput = {
    where: ReportWhereUniqueInput
    update: XOR<ReportUpdateWithoutAgencyInput, ReportUncheckedUpdateWithoutAgencyInput>
    create: XOR<ReportCreateWithoutAgencyInput, ReportUncheckedCreateWithoutAgencyInput>
  }

  export type ReportUpdateWithWhereUniqueWithoutAgencyInput = {
    where: ReportWhereUniqueInput
    data: XOR<ReportUpdateWithoutAgencyInput, ReportUncheckedUpdateWithoutAgencyInput>
  }

  export type ReportUpdateManyWithWhereWithoutAgencyInput = {
    where: ReportScalarWhereInput
    data: XOR<ReportUpdateManyMutationInput, ReportUncheckedUpdateManyWithoutAgencyInput>
  }

  export type ReportScalarWhereInput = {
    AND?: ReportScalarWhereInput | ReportScalarWhereInput[]
    OR?: ReportScalarWhereInput[]
    NOT?: ReportScalarWhereInput | ReportScalarWhereInput[]
    id?: StringFilter<"Report"> | string
    clientId?: StringFilter<"Report"> | string
    agencyId?: StringFilter<"Report"> | string
    userId?: StringFilter<"Report"> | string
    condition?: StringFilter<"Report"> | string
    summary?: StringFilter<"Report"> | string
    checkInTime?: DateTimeFilter<"Report"> | Date | string
    checkOutTime?: DateTimeNullableFilter<"Report"> | Date | string | null
    createdAt?: DateTimeFilter<"Report"> | Date | string
    checkInDistance?: FloatNullableFilter<"Report"> | number | null
    checkOutDistance?: FloatNullableFilter<"Report"> | number | null
    checkInLocation?: StringNullableFilter<"Report"> | string | null
    checkOutLocation?: StringNullableFilter<"Report"> | string | null
    hasSignature?: BoolFilter<"Report"> | boolean
    signatureImageUrl?: StringNullableFilter<"Report"> | string | null
    status?: EnumReportStatusFilter<"Report"> | $Enums.ReportStatus
    lastEditedAt?: DateTimeNullableFilter<"Report"> | Date | string | null
    lastEditedBy?: StringNullableFilter<"Report"> | string | null
    lastEditReason?: StringNullableFilter<"Report"> | string | null
  }

  export type UserCreateWithoutClientAssignmentsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutClientAssignmentsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutClientAssignmentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutClientAssignmentsInput, UserUncheckedCreateWithoutClientAssignmentsInput>
  }

  export type UserCreateWithoutCareAssignmentsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutCareAssignmentsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutCareAssignmentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCareAssignmentsInput, UserUncheckedCreateWithoutCareAssignmentsInput>
  }

  export type UserUpsertWithoutClientAssignmentsInput = {
    update: XOR<UserUpdateWithoutClientAssignmentsInput, UserUncheckedUpdateWithoutClientAssignmentsInput>
    create: XOR<UserCreateWithoutClientAssignmentsInput, UserUncheckedCreateWithoutClientAssignmentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutClientAssignmentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutClientAssignmentsInput, UserUncheckedUpdateWithoutClientAssignmentsInput>
  }

  export type UserUpdateWithoutClientAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutClientAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserUpsertWithoutCareAssignmentsInput = {
    update: XOR<UserUpdateWithoutCareAssignmentsInput, UserUncheckedUpdateWithoutCareAssignmentsInput>
    create: XOR<UserCreateWithoutCareAssignmentsInput, UserUncheckedCreateWithoutCareAssignmentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCareAssignmentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCareAssignmentsInput, UserUncheckedUpdateWithoutCareAssignmentsInput>
  }

  export type UserUpdateWithoutCareAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutCareAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type InvitationCreateWithoutInviterInput = {
    id?: string
    email: string
    token: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    expiresAt: Date | string
    status?: $Enums.InvitationStatus
    createdAt?: Date | string
  }

  export type InvitationUncheckedCreateWithoutInviterInput = {
    id?: string
    email: string
    token: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    expiresAt: Date | string
    status?: $Enums.InvitationStatus
    createdAt?: Date | string
  }

  export type InvitationCreateOrConnectWithoutInviterInput = {
    where: InvitationWhereUniqueInput
    create: XOR<InvitationCreateWithoutInviterInput, InvitationUncheckedCreateWithoutInviterInput>
  }

  export type InvitationCreateManyInviterInputEnvelope = {
    data: InvitationCreateManyInviterInput | InvitationCreateManyInviterInput[]
    skipDuplicates?: boolean
  }

  export type AgencyCreateWithoutUsersInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    schedules?: ScheduleCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutAgencyInput
    documents?: DocumentCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryCreateNestedManyWithoutAgencyInput
    Report?: ReportCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutUsersInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    schedules?: ScheduleUncheckedCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutAgencyInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkUncheckedCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeUncheckedCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryUncheckedCreateNestedManyWithoutAgencyInput
    Report?: ReportUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutUsersInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutUsersInput, AgencyUncheckedCreateWithoutUsersInput>
  }

  export type UserCreateWithoutInvitedUsersInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutInvitedUsersInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutInvitedUsersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInvitedUsersInput, UserUncheckedCreateWithoutInvitedUsersInput>
  }

  export type UserCreateWithoutInvitedByInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutInvitedByInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutInvitedByInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInvitedByInput, UserUncheckedCreateWithoutInvitedByInput>
  }

  export type UserCreateManyInvitedByInputEnvelope = {
    data: UserCreateManyInvitedByInput | UserCreateManyInvitedByInput[]
    skipDuplicates?: boolean
  }

  export type CommunicationPreferenceCreateWithoutUserInput = {
    id?: string
    email?: boolean
    sms?: boolean
    phone?: boolean
    notes?: string | null
  }

  export type CommunicationPreferenceUncheckedCreateWithoutUserInput = {
    id?: string
    email?: boolean
    sms?: boolean
    phone?: boolean
    notes?: string | null
  }

  export type CommunicationPreferenceCreateOrConnectWithoutUserInput = {
    where: CommunicationPreferenceWhereUniqueInput
    create: XOR<CommunicationPreferenceCreateWithoutUserInput, CommunicationPreferenceUncheckedCreateWithoutUserInput>
  }

  export type ClientCareAssignmentCreateWithoutUserInput = {
    id?: string
    isDecisionMaker?: boolean
    assignedAt?: Date | string
    client: UserCreateNestedOneWithoutClientAssignmentsInput
  }

  export type ClientCareAssignmentUncheckedCreateWithoutUserInput = {
    id?: string
    clientId: string
    isDecisionMaker?: boolean
    assignedAt?: Date | string
  }

  export type ClientCareAssignmentCreateOrConnectWithoutUserInput = {
    where: ClientCareAssignmentWhereUniqueInput
    create: XOR<ClientCareAssignmentCreateWithoutUserInput, ClientCareAssignmentUncheckedCreateWithoutUserInput>
  }

  export type ClientCareAssignmentCreateManyUserInputEnvelope = {
    data: ClientCareAssignmentCreateManyUserInput | ClientCareAssignmentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ClientCareAssignmentCreateWithoutClientInput = {
    id?: string
    isDecisionMaker?: boolean
    assignedAt?: Date | string
    user: UserCreateNestedOneWithoutCareAssignmentsInput
  }

  export type ClientCareAssignmentUncheckedCreateWithoutClientInput = {
    id?: string
    userId: string
    isDecisionMaker?: boolean
    assignedAt?: Date | string
  }

  export type ClientCareAssignmentCreateOrConnectWithoutClientInput = {
    where: ClientCareAssignmentWhereUniqueInput
    create: XOR<ClientCareAssignmentCreateWithoutClientInput, ClientCareAssignmentUncheckedCreateWithoutClientInput>
  }

  export type ClientCareAssignmentCreateManyClientInputEnvelope = {
    data: ClientCareAssignmentCreateManyClientInput | ClientCareAssignmentCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type ScheduleCreateWithoutUserInput = {
    id?: string
    date: Date | string
    startTime: string
    endTime: string
    status?: string
    type?: $Enums.ScheduleType
    notes?: string | null
    chargeRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    visitType?: VisitTypeCreateNestedOneWithoutSchedulesInput
    agency: AgencyCreateNestedOneWithoutSchedulesInput
    client: UserCreateNestedOneWithoutClientSchedulesInput
  }

  export type ScheduleUncheckedCreateWithoutUserInput = {
    id?: string
    agencyId: string
    clientId: string
    date: Date | string
    startTime: string
    endTime: string
    status?: string
    type?: $Enums.ScheduleType
    notes?: string | null
    chargeRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    visitTypeId?: string | null
  }

  export type ScheduleCreateOrConnectWithoutUserInput = {
    where: ScheduleWhereUniqueInput
    create: XOR<ScheduleCreateWithoutUserInput, ScheduleUncheckedCreateWithoutUserInput>
  }

  export type ScheduleCreateManyUserInputEnvelope = {
    data: ScheduleCreateManyUserInput | ScheduleCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ScheduleCreateWithoutClientInput = {
    id?: string
    date: Date | string
    startTime: string
    endTime: string
    status?: string
    type?: $Enums.ScheduleType
    notes?: string | null
    chargeRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    visitType?: VisitTypeCreateNestedOneWithoutSchedulesInput
    agency: AgencyCreateNestedOneWithoutSchedulesInput
    user: UserCreateNestedOneWithoutCareWorkerSchedulesInput
  }

  export type ScheduleUncheckedCreateWithoutClientInput = {
    id?: string
    agencyId: string
    userId: string
    date: Date | string
    startTime: string
    endTime: string
    status?: string
    type?: $Enums.ScheduleType
    notes?: string | null
    chargeRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    visitTypeId?: string | null
  }

  export type ScheduleCreateOrConnectWithoutClientInput = {
    where: ScheduleWhereUniqueInput
    create: XOR<ScheduleCreateWithoutClientInput, ScheduleUncheckedCreateWithoutClientInput>
  }

  export type ScheduleCreateManyClientInputEnvelope = {
    data: ScheduleCreateManyClientInput | ScheduleCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type ReportCreateWithoutCaregiverInput = {
    id?: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    tasksCompleted?: ReportTaskCreateNestedManyWithoutReportInput
    alerts?: ReportAlertCreateNestedManyWithoutReportInput
    bodyMapObservations?: BodyMapObservationCreateNestedManyWithoutReportInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutReportInput
    editHistory?: ReportEditCreateNestedManyWithoutReportInput
    client: UserCreateNestedOneWithoutClientReportsInput
    agency: AgencyCreateNestedOneWithoutReportInput
  }

  export type ReportUncheckedCreateWithoutCaregiverInput = {
    id?: string
    clientId: string
    agencyId: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    tasksCompleted?: ReportTaskUncheckedCreateNestedManyWithoutReportInput
    alerts?: ReportAlertUncheckedCreateNestedManyWithoutReportInput
    bodyMapObservations?: BodyMapObservationUncheckedCreateNestedManyWithoutReportInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutReportInput
    editHistory?: ReportEditUncheckedCreateNestedManyWithoutReportInput
  }

  export type ReportCreateOrConnectWithoutCaregiverInput = {
    where: ReportWhereUniqueInput
    create: XOR<ReportCreateWithoutCaregiverInput, ReportUncheckedCreateWithoutCaregiverInput>
  }

  export type ReportCreateManyCaregiverInputEnvelope = {
    data: ReportCreateManyCaregiverInput | ReportCreateManyCaregiverInput[]
    skipDuplicates?: boolean
  }

  export type ReportCreateWithoutClientInput = {
    id?: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    tasksCompleted?: ReportTaskCreateNestedManyWithoutReportInput
    alerts?: ReportAlertCreateNestedManyWithoutReportInput
    bodyMapObservations?: BodyMapObservationCreateNestedManyWithoutReportInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutReportInput
    editHistory?: ReportEditCreateNestedManyWithoutReportInput
    caregiver: UserCreateNestedOneWithoutCareReportsInput
    agency: AgencyCreateNestedOneWithoutReportInput
  }

  export type ReportUncheckedCreateWithoutClientInput = {
    id?: string
    agencyId: string
    userId: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    tasksCompleted?: ReportTaskUncheckedCreateNestedManyWithoutReportInput
    alerts?: ReportAlertUncheckedCreateNestedManyWithoutReportInput
    bodyMapObservations?: BodyMapObservationUncheckedCreateNestedManyWithoutReportInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutReportInput
    editHistory?: ReportEditUncheckedCreateNestedManyWithoutReportInput
  }

  export type ReportCreateOrConnectWithoutClientInput = {
    where: ReportWhereUniqueInput
    create: XOR<ReportCreateWithoutClientInput, ReportUncheckedCreateWithoutClientInput>
  }

  export type ReportCreateManyClientInputEnvelope = {
    data: ReportCreateManyClientInput | ReportCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type MedicationRecordCreateWithoutUserInput = {
    id?: string
    dosage: string
    frequency: string
    startDate: Date | string
    endDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
    medication: MedicationDatabaseLinkCreateNestedOneWithoutMedicationRecordInput
    client: UserCreateNestedOneWithoutClientMedicationsInput
    User: UserCreateNestedOneWithoutMedicationRecordsInput
    administrationRecords?: MedicationAdministrationCreateNestedManyWithoutMedicationRecordInput
  }

  export type MedicationRecordUncheckedCreateWithoutUserInput = {
    id?: string
    medicationId: string
    clientId: string
    dosage: string
    frequency: string
    startDate: Date | string
    endDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
    administrationRecords?: MedicationAdministrationUncheckedCreateNestedManyWithoutMedicationRecordInput
  }

  export type MedicationRecordCreateOrConnectWithoutUserInput = {
    where: MedicationRecordWhereUniqueInput
    create: XOR<MedicationRecordCreateWithoutUserInput, MedicationRecordUncheckedCreateWithoutUserInput>
  }

  export type MedicationRecordCreateManyUserInputEnvelope = {
    data: MedicationRecordCreateManyUserInput | MedicationRecordCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type MedicationRecordCreateWithoutClientInput = {
    id?: string
    dosage: string
    frequency: string
    startDate: Date | string
    endDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
    medication: MedicationDatabaseLinkCreateNestedOneWithoutMedicationRecordInput
    user: UserCreateNestedOneWithoutCareWorkerMedicationsInput
    User: UserCreateNestedOneWithoutMedicationRecordsInput
    administrationRecords?: MedicationAdministrationCreateNestedManyWithoutMedicationRecordInput
  }

  export type MedicationRecordUncheckedCreateWithoutClientInput = {
    id?: string
    medicationId: string
    userId: string
    dosage: string
    frequency: string
    startDate: Date | string
    endDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
    administrationRecords?: MedicationAdministrationUncheckedCreateNestedManyWithoutMedicationRecordInput
  }

  export type MedicationRecordCreateOrConnectWithoutClientInput = {
    where: MedicationRecordWhereUniqueInput
    create: XOR<MedicationRecordCreateWithoutClientInput, MedicationRecordUncheckedCreateWithoutClientInput>
  }

  export type MedicationRecordCreateManyClientInputEnvelope = {
    data: MedicationRecordCreateManyClientInput | MedicationRecordCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type MileageRecordCreateWithoutUserInput = {
    id?: string
    date: Date | string
    startMileage: number
    endMileage: number
    totalMiles: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agency: AgencyCreateNestedOneWithoutMileageRecordsInput
    client: UserCreateNestedOneWithoutClientMileageInput
    User: UserCreateNestedOneWithoutMileageRecordsInput
  }

  export type MileageRecordUncheckedCreateWithoutUserInput = {
    id?: string
    agencyId: string
    clientId: string
    date: Date | string
    startMileage: number
    endMileage: number
    totalMiles: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MileageRecordCreateOrConnectWithoutUserInput = {
    where: MileageRecordWhereUniqueInput
    create: XOR<MileageRecordCreateWithoutUserInput, MileageRecordUncheckedCreateWithoutUserInput>
  }

  export type MileageRecordCreateManyUserInputEnvelope = {
    data: MileageRecordCreateManyUserInput | MileageRecordCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type MileageRecordCreateWithoutClientInput = {
    id?: string
    date: Date | string
    startMileage: number
    endMileage: number
    totalMiles: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agency: AgencyCreateNestedOneWithoutMileageRecordsInput
    user: UserCreateNestedOneWithoutCareWorkerMileageInput
    User: UserCreateNestedOneWithoutMileageRecordsInput
  }

  export type MileageRecordUncheckedCreateWithoutClientInput = {
    id?: string
    agencyId: string
    userId: string
    date: Date | string
    startMileage: number
    endMileage: number
    totalMiles: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MileageRecordCreateOrConnectWithoutClientInput = {
    where: MileageRecordWhereUniqueInput
    create: XOR<MileageRecordCreateWithoutClientInput, MileageRecordUncheckedCreateWithoutClientInput>
  }

  export type MileageRecordCreateManyClientInputEnvelope = {
    data: MileageRecordCreateManyClientInput | MileageRecordCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type ProfileCreateWithoutUserInput = {
    id?: string
    phone?: string | null
    avatarUrl?: string | null
    address?: string | null
  }

  export type ProfileUncheckedCreateWithoutUserInput = {
    id?: string
    phone?: string | null
    avatarUrl?: string | null
    address?: string | null
  }

  export type ProfileCreateOrConnectWithoutUserInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
  }

  export type MessageCreateWithoutSenderInput = {
    id?: string
    content: string
    sentAt?: Date | string
    receiver: UserCreateNestedOneWithoutReceivedMessagesInput
  }

  export type MessageUncheckedCreateWithoutSenderInput = {
    id?: string
    receiverId: string
    content: string
    sentAt?: Date | string
  }

  export type MessageCreateOrConnectWithoutSenderInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput>
  }

  export type MessageCreateManySenderInputEnvelope = {
    data: MessageCreateManySenderInput | MessageCreateManySenderInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutReceiverInput = {
    id?: string
    content: string
    sentAt?: Date | string
    sender: UserCreateNestedOneWithoutSentMessagesInput
  }

  export type MessageUncheckedCreateWithoutReceiverInput = {
    id?: string
    senderId: string
    content: string
    sentAt?: Date | string
  }

  export type MessageCreateOrConnectWithoutReceiverInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput>
  }

  export type MessageCreateManyReceiverInputEnvelope = {
    data: MessageCreateManyReceiverInput | MessageCreateManyReceiverInput[]
    skipDuplicates?: boolean
  }

  export type MedicationRecordCreateWithoutUserInput = {
    id?: string
    dosage: string
    frequency: string
    startDate: Date | string
    endDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
    medication: MedicationDatabaseLinkCreateNestedOneWithoutMedicationRecordInput
    client: UserCreateNestedOneWithoutClientMedicationsInput
    user: UserCreateNestedOneWithoutCareWorkerMedicationsInput
    administrationRecords?: MedicationAdministrationCreateNestedManyWithoutMedicationRecordInput
  }

  export type MedicationRecordUncheckedCreateWithoutUserInput = {
    id?: string
    medicationId: string
    clientId: string
    dosage: string
    frequency: string
    startDate: Date | string
    endDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
    administrationRecords?: MedicationAdministrationUncheckedCreateNestedManyWithoutMedicationRecordInput
  }

  export type MileageRecordCreateWithoutUserInput = {
    id?: string
    date: Date | string
    startMileage: number
    endMileage: number
    totalMiles: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agency: AgencyCreateNestedOneWithoutMileageRecordsInput
    client: UserCreateNestedOneWithoutClientMileageInput
    user: UserCreateNestedOneWithoutCareWorkerMileageInput
  }

  export type MileageRecordUncheckedCreateWithoutUserInput = {
    id?: string
    agencyId: string
    clientId: string
    date: Date | string
    startMileage: number
    endMileage: number
    totalMiles: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DocumentCreateWithoutUserInput = {
    id?: string
    title: string
    fileUrl: string
    uploadedAt?: Date | string
    client?: UserCreateNestedOneWithoutDocumentInput
    agency?: AgencyCreateNestedOneWithoutDocumentsInput
  }

  export type DocumentUncheckedCreateWithoutUserInput = {
    id?: string
    title: string
    fileUrl: string
    uploadedAt?: Date | string
    clientId?: string | null
    agencyId?: string | null
  }

  export type DocumentCreateOrConnectWithoutUserInput = {
    where: DocumentWhereUniqueInput
    create: XOR<DocumentCreateWithoutUserInput, DocumentUncheckedCreateWithoutUserInput>
  }

  export type DocumentCreateManyUserInputEnvelope = {
    data: DocumentCreateManyUserInput | DocumentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type IncidentReportCreateWithoutReporterInput = {
    id?: string
    description: string
    severity: $Enums.SeverityLevel
    reportedAt?: Date | string
    agency: AgencyCreateNestedOneWithoutIncidentReportsInput
  }

  export type IncidentReportUncheckedCreateWithoutReporterInput = {
    id?: string
    agencyId: string
    description: string
    severity: $Enums.SeverityLevel
    reportedAt?: Date | string
  }

  export type IncidentReportCreateOrConnectWithoutReporterInput = {
    where: IncidentReportWhereUniqueInput
    create: XOR<IncidentReportCreateWithoutReporterInput, IncidentReportUncheckedCreateWithoutReporterInput>
  }

  export type IncidentReportCreateManyReporterInputEnvelope = {
    data: IncidentReportCreateManyReporterInput | IncidentReportCreateManyReporterInput[]
    skipDuplicates?: boolean
  }

  export type KeyContactCreateWithoutClientInput = {
    id?: string
    name: string
    relation: string
    phone: string
    email?: string | null
  }

  export type KeyContactUncheckedCreateWithoutClientInput = {
    id?: string
    name: string
    relation: string
    phone: string
    email?: string | null
  }

  export type KeyContactCreateOrConnectWithoutClientInput = {
    where: KeyContactWhereUniqueInput
    create: XOR<KeyContactCreateWithoutClientInput, KeyContactUncheckedCreateWithoutClientInput>
  }

  export type KeyContactCreateManyClientInputEnvelope = {
    data: KeyContactCreateManyClientInput | KeyContactCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type CareOutcomeCreateWithoutClientInput = {
    id?: string
    outcome: string
  }

  export type CareOutcomeUncheckedCreateWithoutClientInput = {
    id?: string
    outcome: string
  }

  export type CareOutcomeCreateOrConnectWithoutClientInput = {
    where: CareOutcomeWhereUniqueInput
    create: XOR<CareOutcomeCreateWithoutClientInput, CareOutcomeUncheckedCreateWithoutClientInput>
  }

  export type CareOutcomeCreateManyClientInputEnvelope = {
    data: CareOutcomeCreateManyClientInput | CareOutcomeCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceCreateWithoutClientInput = {
    id?: string
    amount: number
    description: string
    issuedAt?: Date | string
    dueDate: Date | string
    status: $Enums.InvoiceStatus
    agency: AgencyCreateNestedOneWithoutInvoicesInput
  }

  export type InvoiceUncheckedCreateWithoutClientInput = {
    id?: string
    agencyId: string
    amount: number
    description: string
    issuedAt?: Date | string
    dueDate: Date | string
    status: $Enums.InvoiceStatus
  }

  export type InvoiceCreateOrConnectWithoutClientInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutClientInput, InvoiceUncheckedCreateWithoutClientInput>
  }

  export type InvoiceCreateManyClientInputEnvelope = {
    data: InvoiceCreateManyClientInput | InvoiceCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type DocumentCreateWithoutClientInput = {
    id?: string
    title: string
    fileUrl: string
    uploadedAt?: Date | string
    user?: UserCreateNestedOneWithoutDocumentsInput
    agency?: AgencyCreateNestedOneWithoutDocumentsInput
  }

  export type DocumentUncheckedCreateWithoutClientInput = {
    id?: string
    title: string
    fileUrl: string
    uploadedAt?: Date | string
    userId?: string | null
    agencyId?: string | null
  }

  export type DocumentCreateOrConnectWithoutClientInput = {
    where: DocumentWhereUniqueInput
    create: XOR<DocumentCreateWithoutClientInput, DocumentUncheckedCreateWithoutClientInput>
  }

  export type DocumentCreateManyClientInputEnvelope = {
    data: DocumentCreateManyClientInput | DocumentCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutUserInput = {
    id?: string
    title: string
    message: string
    type: $Enums.NotificationType
    read?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationUncheckedCreateWithoutUserInput = {
    id?: string
    title: string
    message: string
    type: $Enums.NotificationType
    read?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationCreateOrConnectWithoutUserInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationCreateManyUserInputEnvelope = {
    data: NotificationCreateManyUserInput | NotificationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type RiskAssessmentCreateWithoutClientInput = {
    id?: string
    description: string
    affectedParties: string
    mitigationStrategy: string
    likelihood: number
    severity: number
    riskScore: number
    createdAt?: Date | string
    updatedAt?: Date | string
    riskCategory: RiskCategoryCreateNestedOneWithoutRiskAssessmentsInput
  }

  export type RiskAssessmentUncheckedCreateWithoutClientInput = {
    id?: string
    riskCategoryId: string
    description: string
    affectedParties: string
    mitigationStrategy: string
    likelihood: number
    severity: number
    riskScore: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RiskAssessmentCreateOrConnectWithoutClientInput = {
    where: RiskAssessmentWhereUniqueInput
    create: XOR<RiskAssessmentCreateWithoutClientInput, RiskAssessmentUncheckedCreateWithoutClientInput>
  }

  export type RiskAssessmentCreateManyClientInputEnvelope = {
    data: RiskAssessmentCreateManyClientInput | RiskAssessmentCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type FamilyAccessCreateWithoutClientInput = {
    id?: string
    name: string
    relation: string
    phone: string
    email?: string | null
  }

  export type FamilyAccessUncheckedCreateWithoutClientInput = {
    id?: string
    name: string
    relation: string
    phone: string
    email?: string | null
  }

  export type FamilyAccessCreateOrConnectWithoutClientInput = {
    where: FamilyAccessWhereUniqueInput
    create: XOR<FamilyAccessCreateWithoutClientInput, FamilyAccessUncheckedCreateWithoutClientInput>
  }

  export type FamilyAccessCreateManyClientInputEnvelope = {
    data: FamilyAccessCreateManyClientInput | FamilyAccessCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type CommunicationLogCreateWithoutClientInput = {
    id?: string
    message: string
    createdAt?: Date | string
  }

  export type CommunicationLogUncheckedCreateWithoutClientInput = {
    id?: string
    message: string
    createdAt?: Date | string
  }

  export type CommunicationLogCreateOrConnectWithoutClientInput = {
    where: CommunicationLogWhereUniqueInput
    create: XOR<CommunicationLogCreateWithoutClientInput, CommunicationLogUncheckedCreateWithoutClientInput>
  }

  export type CommunicationLogCreateManyClientInputEnvelope = {
    data: CommunicationLogCreateManyClientInput | CommunicationLogCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type ReminderCreateWithoutClientInput = {
    id?: string
    title: string
    message?: string | null
    dueDate: Date | string
    completed?: boolean
    createdAt?: Date | string
  }

  export type ReminderUncheckedCreateWithoutClientInput = {
    id?: string
    title: string
    message?: string | null
    dueDate: Date | string
    completed?: boolean
    createdAt?: Date | string
  }

  export type ReminderCreateOrConnectWithoutClientInput = {
    where: ReminderWhereUniqueInput
    create: XOR<ReminderCreateWithoutClientInput, ReminderUncheckedCreateWithoutClientInput>
  }

  export type ReminderCreateManyClientInputEnvelope = {
    data: ReminderCreateManyClientInput | ReminderCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type MedicationAdministrationCreateWithoutAdministeredByInput = {
    id?: string
    administeredAt: Date | string
    doseType: $Enums.DoseType
    doseTaken?: boolean
    notes?: string | null
    createdAt?: Date | string
    medicationRecord: MedicationRecordCreateNestedOneWithoutAdministrationRecordsInput
    report?: ReportCreateNestedOneWithoutMedicationAdministrationsInput
  }

  export type MedicationAdministrationUncheckedCreateWithoutAdministeredByInput = {
    id?: string
    medicationRecordId: string
    administeredAt: Date | string
    doseType: $Enums.DoseType
    doseTaken?: boolean
    notes?: string | null
    createdAt?: Date | string
    reportId?: string | null
  }

  export type MedicationAdministrationCreateOrConnectWithoutAdministeredByInput = {
    where: MedicationAdministrationWhereUniqueInput
    create: XOR<MedicationAdministrationCreateWithoutAdministeredByInput, MedicationAdministrationUncheckedCreateWithoutAdministeredByInput>
  }

  export type MedicationAdministrationCreateManyAdministeredByInputEnvelope = {
    data: MedicationAdministrationCreateManyAdministeredByInput | MedicationAdministrationCreateManyAdministeredByInput[]
    skipDuplicates?: boolean
  }

  export type ReportEditCreateWithoutEditorInput = {
    id?: string
    editedAt?: Date | string
    reason: string
    changesJson: string
    report: ReportCreateNestedOneWithoutEditHistoryInput
  }

  export type ReportEditUncheckedCreateWithoutEditorInput = {
    id?: string
    reportId: string
    editedAt?: Date | string
    reason: string
    changesJson: string
  }

  export type ReportEditCreateOrConnectWithoutEditorInput = {
    where: ReportEditWhereUniqueInput
    create: XOR<ReportEditCreateWithoutEditorInput, ReportEditUncheckedCreateWithoutEditorInput>
  }

  export type ReportEditCreateManyEditorInputEnvelope = {
    data: ReportEditCreateManyEditorInput | ReportEditCreateManyEditorInput[]
    skipDuplicates?: boolean
  }

  export type InvitationUpsertWithWhereUniqueWithoutInviterInput = {
    where: InvitationWhereUniqueInput
    update: XOR<InvitationUpdateWithoutInviterInput, InvitationUncheckedUpdateWithoutInviterInput>
    create: XOR<InvitationCreateWithoutInviterInput, InvitationUncheckedCreateWithoutInviterInput>
  }

  export type InvitationUpdateWithWhereUniqueWithoutInviterInput = {
    where: InvitationWhereUniqueInput
    data: XOR<InvitationUpdateWithoutInviterInput, InvitationUncheckedUpdateWithoutInviterInput>
  }

  export type InvitationUpdateManyWithWhereWithoutInviterInput = {
    where: InvitationScalarWhereInput
    data: XOR<InvitationUpdateManyMutationInput, InvitationUncheckedUpdateManyWithoutInviterInput>
  }

  export type InvitationScalarWhereInput = {
    AND?: InvitationScalarWhereInput | InvitationScalarWhereInput[]
    OR?: InvitationScalarWhereInput[]
    NOT?: InvitationScalarWhereInput | InvitationScalarWhereInput[]
    id?: StringFilter<"Invitation"> | string
    email?: StringFilter<"Invitation"> | string
    token?: StringFilter<"Invitation"> | string
    role?: EnumRoleFilter<"Invitation"> | $Enums.Role
    subRole?: EnumSubRoleNullableFilter<"Invitation"> | $Enums.SubRole | null
    expiresAt?: DateTimeFilter<"Invitation"> | Date | string
    status?: EnumInvitationStatusFilter<"Invitation"> | $Enums.InvitationStatus
    createdAt?: DateTimeFilter<"Invitation"> | Date | string
    inviterId?: StringFilter<"Invitation"> | string
  }

  export type AgencyUpsertWithoutUsersInput = {
    update: XOR<AgencyUpdateWithoutUsersInput, AgencyUncheckedUpdateWithoutUsersInput>
    create: XOR<AgencyCreateWithoutUsersInput, AgencyUncheckedCreateWithoutUsersInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutUsersInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutUsersInput, AgencyUncheckedUpdateWithoutUsersInput>
  }

  export type AgencyUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    schedules?: ScheduleUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUpdateManyWithoutAgencyNestedInput
    Report?: ReportUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    schedules?: ScheduleUncheckedUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUncheckedUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUncheckedUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUncheckedUpdateManyWithoutAgencyNestedInput
    Report?: ReportUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type UserUpsertWithoutInvitedUsersInput = {
    update: XOR<UserUpdateWithoutInvitedUsersInput, UserUncheckedUpdateWithoutInvitedUsersInput>
    create: XOR<UserCreateWithoutInvitedUsersInput, UserUncheckedCreateWithoutInvitedUsersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutInvitedUsersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutInvitedUsersInput, UserUncheckedUpdateWithoutInvitedUsersInput>
  }

  export type UserUpdateWithoutInvitedUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutInvitedUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutInvitedByInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutInvitedByInput, UserUncheckedUpdateWithoutInvitedByInput>
    create: XOR<UserCreateWithoutInvitedByInput, UserUncheckedCreateWithoutInvitedByInput>
  }

  export type UserUpdateWithWhereUniqueWithoutInvitedByInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutInvitedByInput, UserUncheckedUpdateWithoutInvitedByInput>
  }

  export type UserUpdateManyWithWhereWithoutInvitedByInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutInvitedByInput>
  }

  export type CommunicationPreferenceUpsertWithoutUserInput = {
    update: XOR<CommunicationPreferenceUpdateWithoutUserInput, CommunicationPreferenceUncheckedUpdateWithoutUserInput>
    create: XOR<CommunicationPreferenceCreateWithoutUserInput, CommunicationPreferenceUncheckedCreateWithoutUserInput>
    where?: CommunicationPreferenceWhereInput
  }

  export type CommunicationPreferenceUpdateToOneWithWhereWithoutUserInput = {
    where?: CommunicationPreferenceWhereInput
    data: XOR<CommunicationPreferenceUpdateWithoutUserInput, CommunicationPreferenceUncheckedUpdateWithoutUserInput>
  }

  export type CommunicationPreferenceUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: BoolFieldUpdateOperationsInput | boolean
    sms?: BoolFieldUpdateOperationsInput | boolean
    phone?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommunicationPreferenceUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: BoolFieldUpdateOperationsInput | boolean
    sms?: BoolFieldUpdateOperationsInput | boolean
    phone?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClientCareAssignmentUpsertWithWhereUniqueWithoutUserInput = {
    where: ClientCareAssignmentWhereUniqueInput
    update: XOR<ClientCareAssignmentUpdateWithoutUserInput, ClientCareAssignmentUncheckedUpdateWithoutUserInput>
    create: XOR<ClientCareAssignmentCreateWithoutUserInput, ClientCareAssignmentUncheckedCreateWithoutUserInput>
  }

  export type ClientCareAssignmentUpdateWithWhereUniqueWithoutUserInput = {
    where: ClientCareAssignmentWhereUniqueInput
    data: XOR<ClientCareAssignmentUpdateWithoutUserInput, ClientCareAssignmentUncheckedUpdateWithoutUserInput>
  }

  export type ClientCareAssignmentUpdateManyWithWhereWithoutUserInput = {
    where: ClientCareAssignmentScalarWhereInput
    data: XOR<ClientCareAssignmentUpdateManyMutationInput, ClientCareAssignmentUncheckedUpdateManyWithoutUserInput>
  }

  export type ClientCareAssignmentScalarWhereInput = {
    AND?: ClientCareAssignmentScalarWhereInput | ClientCareAssignmentScalarWhereInput[]
    OR?: ClientCareAssignmentScalarWhereInput[]
    NOT?: ClientCareAssignmentScalarWhereInput | ClientCareAssignmentScalarWhereInput[]
    id?: StringFilter<"ClientCareAssignment"> | string
    clientId?: StringFilter<"ClientCareAssignment"> | string
    userId?: StringFilter<"ClientCareAssignment"> | string
    isDecisionMaker?: BoolFilter<"ClientCareAssignment"> | boolean
    assignedAt?: DateTimeFilter<"ClientCareAssignment"> | Date | string
  }

  export type ClientCareAssignmentUpsertWithWhereUniqueWithoutClientInput = {
    where: ClientCareAssignmentWhereUniqueInput
    update: XOR<ClientCareAssignmentUpdateWithoutClientInput, ClientCareAssignmentUncheckedUpdateWithoutClientInput>
    create: XOR<ClientCareAssignmentCreateWithoutClientInput, ClientCareAssignmentUncheckedCreateWithoutClientInput>
  }

  export type ClientCareAssignmentUpdateWithWhereUniqueWithoutClientInput = {
    where: ClientCareAssignmentWhereUniqueInput
    data: XOR<ClientCareAssignmentUpdateWithoutClientInput, ClientCareAssignmentUncheckedUpdateWithoutClientInput>
  }

  export type ClientCareAssignmentUpdateManyWithWhereWithoutClientInput = {
    where: ClientCareAssignmentScalarWhereInput
    data: XOR<ClientCareAssignmentUpdateManyMutationInput, ClientCareAssignmentUncheckedUpdateManyWithoutClientInput>
  }

  export type ScheduleUpsertWithWhereUniqueWithoutUserInput = {
    where: ScheduleWhereUniqueInput
    update: XOR<ScheduleUpdateWithoutUserInput, ScheduleUncheckedUpdateWithoutUserInput>
    create: XOR<ScheduleCreateWithoutUserInput, ScheduleUncheckedCreateWithoutUserInput>
  }

  export type ScheduleUpdateWithWhereUniqueWithoutUserInput = {
    where: ScheduleWhereUniqueInput
    data: XOR<ScheduleUpdateWithoutUserInput, ScheduleUncheckedUpdateWithoutUserInput>
  }

  export type ScheduleUpdateManyWithWhereWithoutUserInput = {
    where: ScheduleScalarWhereInput
    data: XOR<ScheduleUpdateManyMutationInput, ScheduleUncheckedUpdateManyWithoutUserInput>
  }

  export type ScheduleUpsertWithWhereUniqueWithoutClientInput = {
    where: ScheduleWhereUniqueInput
    update: XOR<ScheduleUpdateWithoutClientInput, ScheduleUncheckedUpdateWithoutClientInput>
    create: XOR<ScheduleCreateWithoutClientInput, ScheduleUncheckedCreateWithoutClientInput>
  }

  export type ScheduleUpdateWithWhereUniqueWithoutClientInput = {
    where: ScheduleWhereUniqueInput
    data: XOR<ScheduleUpdateWithoutClientInput, ScheduleUncheckedUpdateWithoutClientInput>
  }

  export type ScheduleUpdateManyWithWhereWithoutClientInput = {
    where: ScheduleScalarWhereInput
    data: XOR<ScheduleUpdateManyMutationInput, ScheduleUncheckedUpdateManyWithoutClientInput>
  }

  export type ReportUpsertWithWhereUniqueWithoutCaregiverInput = {
    where: ReportWhereUniqueInput
    update: XOR<ReportUpdateWithoutCaregiverInput, ReportUncheckedUpdateWithoutCaregiverInput>
    create: XOR<ReportCreateWithoutCaregiverInput, ReportUncheckedCreateWithoutCaregiverInput>
  }

  export type ReportUpdateWithWhereUniqueWithoutCaregiverInput = {
    where: ReportWhereUniqueInput
    data: XOR<ReportUpdateWithoutCaregiverInput, ReportUncheckedUpdateWithoutCaregiverInput>
  }

  export type ReportUpdateManyWithWhereWithoutCaregiverInput = {
    where: ReportScalarWhereInput
    data: XOR<ReportUpdateManyMutationInput, ReportUncheckedUpdateManyWithoutCaregiverInput>
  }

  export type ReportUpsertWithWhereUniqueWithoutClientInput = {
    where: ReportWhereUniqueInput
    update: XOR<ReportUpdateWithoutClientInput, ReportUncheckedUpdateWithoutClientInput>
    create: XOR<ReportCreateWithoutClientInput, ReportUncheckedCreateWithoutClientInput>
  }

  export type ReportUpdateWithWhereUniqueWithoutClientInput = {
    where: ReportWhereUniqueInput
    data: XOR<ReportUpdateWithoutClientInput, ReportUncheckedUpdateWithoutClientInput>
  }

  export type ReportUpdateManyWithWhereWithoutClientInput = {
    where: ReportScalarWhereInput
    data: XOR<ReportUpdateManyMutationInput, ReportUncheckedUpdateManyWithoutClientInput>
  }

  export type MedicationRecordUpsertWithWhereUniqueWithoutUserInput = {
    where: MedicationRecordWhereUniqueInput
    update: XOR<MedicationRecordUpdateWithoutUserInput, MedicationRecordUncheckedUpdateWithoutUserInput>
    create: XOR<MedicationRecordCreateWithoutUserInput, MedicationRecordUncheckedCreateWithoutUserInput>
  }

  export type MedicationRecordUpdateWithWhereUniqueWithoutUserInput = {
    where: MedicationRecordWhereUniqueInput
    data: XOR<MedicationRecordUpdateWithoutUserInput, MedicationRecordUncheckedUpdateWithoutUserInput>
  }

  export type MedicationRecordUpdateManyWithWhereWithoutUserInput = {
    where: MedicationRecordScalarWhereInput
    data: XOR<MedicationRecordUpdateManyMutationInput, MedicationRecordUncheckedUpdateManyWithoutUserInput>
  }

  export type MedicationRecordScalarWhereInput = {
    AND?: MedicationRecordScalarWhereInput | MedicationRecordScalarWhereInput[]
    OR?: MedicationRecordScalarWhereInput[]
    NOT?: MedicationRecordScalarWhereInput | MedicationRecordScalarWhereInput[]
    id?: StringFilter<"MedicationRecord"> | string
    medicationId?: StringFilter<"MedicationRecord"> | string
    clientId?: StringFilter<"MedicationRecord"> | string
    userId?: StringFilter<"MedicationRecord"> | string
    dosage?: StringFilter<"MedicationRecord"> | string
    frequency?: StringFilter<"MedicationRecord"> | string
    startDate?: DateTimeFilter<"MedicationRecord"> | Date | string
    endDate?: DateTimeNullableFilter<"MedicationRecord"> | Date | string | null
    notes?: StringNullableFilter<"MedicationRecord"> | string | null
    createdAt?: DateTimeFilter<"MedicationRecord"> | Date | string
    updatedAt?: DateTimeFilter<"MedicationRecord"> | Date | string
    morningDose?: BoolFilter<"MedicationRecord"> | boolean
    lunchDose?: BoolFilter<"MedicationRecord"> | boolean
    eveningDose?: BoolFilter<"MedicationRecord"> | boolean
    bedtimeDose?: BoolFilter<"MedicationRecord"> | boolean
    asNeededDose?: BoolFilter<"MedicationRecord"> | boolean
  }

  export type MedicationRecordUpsertWithWhereUniqueWithoutClientInput = {
    where: MedicationRecordWhereUniqueInput
    update: XOR<MedicationRecordUpdateWithoutClientInput, MedicationRecordUncheckedUpdateWithoutClientInput>
    create: XOR<MedicationRecordCreateWithoutClientInput, MedicationRecordUncheckedCreateWithoutClientInput>
  }

  export type MedicationRecordUpdateWithWhereUniqueWithoutClientInput = {
    where: MedicationRecordWhereUniqueInput
    data: XOR<MedicationRecordUpdateWithoutClientInput, MedicationRecordUncheckedUpdateWithoutClientInput>
  }

  export type MedicationRecordUpdateManyWithWhereWithoutClientInput = {
    where: MedicationRecordScalarWhereInput
    data: XOR<MedicationRecordUpdateManyMutationInput, MedicationRecordUncheckedUpdateManyWithoutClientInput>
  }

  export type MileageRecordUpsertWithWhereUniqueWithoutUserInput = {
    where: MileageRecordWhereUniqueInput
    update: XOR<MileageRecordUpdateWithoutUserInput, MileageRecordUncheckedUpdateWithoutUserInput>
    create: XOR<MileageRecordCreateWithoutUserInput, MileageRecordUncheckedCreateWithoutUserInput>
  }

  export type MileageRecordUpdateWithWhereUniqueWithoutUserInput = {
    where: MileageRecordWhereUniqueInput
    data: XOR<MileageRecordUpdateWithoutUserInput, MileageRecordUncheckedUpdateWithoutUserInput>
  }

  export type MileageRecordUpdateManyWithWhereWithoutUserInput = {
    where: MileageRecordScalarWhereInput
    data: XOR<MileageRecordUpdateManyMutationInput, MileageRecordUncheckedUpdateManyWithoutUserInput>
  }

  export type MileageRecordUpsertWithWhereUniqueWithoutClientInput = {
    where: MileageRecordWhereUniqueInput
    update: XOR<MileageRecordUpdateWithoutClientInput, MileageRecordUncheckedUpdateWithoutClientInput>
    create: XOR<MileageRecordCreateWithoutClientInput, MileageRecordUncheckedCreateWithoutClientInput>
  }

  export type MileageRecordUpdateWithWhereUniqueWithoutClientInput = {
    where: MileageRecordWhereUniqueInput
    data: XOR<MileageRecordUpdateWithoutClientInput, MileageRecordUncheckedUpdateWithoutClientInput>
  }

  export type MileageRecordUpdateManyWithWhereWithoutClientInput = {
    where: MileageRecordScalarWhereInput
    data: XOR<MileageRecordUpdateManyMutationInput, MileageRecordUncheckedUpdateManyWithoutClientInput>
  }

  export type ProfileUpsertWithoutUserInput = {
    update: XOR<ProfileUpdateWithoutUserInput, ProfileUncheckedUpdateWithoutUserInput>
    create: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutUserInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutUserInput, ProfileUncheckedUpdateWithoutUserInput>
  }

  export type ProfileUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProfileUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MessageUpsertWithWhereUniqueWithoutSenderInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutSenderInput, MessageUncheckedUpdateWithoutSenderInput>
    create: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutSenderInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutSenderInput, MessageUncheckedUpdateWithoutSenderInput>
  }

  export type MessageUpdateManyWithWhereWithoutSenderInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutSenderInput>
  }

  export type MessageScalarWhereInput = {
    AND?: MessageScalarWhereInput | MessageScalarWhereInput[]
    OR?: MessageScalarWhereInput[]
    NOT?: MessageScalarWhereInput | MessageScalarWhereInput[]
    id?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    receiverId?: StringFilter<"Message"> | string
    content?: StringFilter<"Message"> | string
    sentAt?: DateTimeFilter<"Message"> | Date | string
  }

  export type MessageUpsertWithWhereUniqueWithoutReceiverInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutReceiverInput, MessageUncheckedUpdateWithoutReceiverInput>
    create: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutReceiverInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutReceiverInput, MessageUncheckedUpdateWithoutReceiverInput>
  }

  export type MessageUpdateManyWithWhereWithoutReceiverInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutReceiverInput>
  }

  export type MedicationRecordUpsertWithWhereUniqueWithoutUserInput = {
    where: MedicationRecordWhereUniqueInput
    update: XOR<MedicationRecordUpdateWithoutUserInput, MedicationRecordUncheckedUpdateWithoutUserInput>
    create: XOR<MedicationRecordCreateWithoutUserInput, MedicationRecordUncheckedCreateWithoutUserInput>
  }

  export type MedicationRecordUpdateWithWhereUniqueWithoutUserInput = {
    where: MedicationRecordWhereUniqueInput
    data: XOR<MedicationRecordUpdateWithoutUserInput, MedicationRecordUncheckedUpdateWithoutUserInput>
  }

  export type MedicationRecordUpdateManyWithWhereWithoutUserInput = {
    where: MedicationRecordScalarWhereInput
    data: XOR<MedicationRecordUpdateManyMutationInput, MedicationRecordUncheckedUpdateManyWithoutUserInput>
  }

  export type MileageRecordUpsertWithWhereUniqueWithoutUserInput = {
    where: MileageRecordWhereUniqueInput
    update: XOR<MileageRecordUpdateWithoutUserInput, MileageRecordUncheckedUpdateWithoutUserInput>
    create: XOR<MileageRecordCreateWithoutUserInput, MileageRecordUncheckedCreateWithoutUserInput>
  }

  export type MileageRecordUpdateWithWhereUniqueWithoutUserInput = {
    where: MileageRecordWhereUniqueInput
    data: XOR<MileageRecordUpdateWithoutUserInput, MileageRecordUncheckedUpdateWithoutUserInput>
  }

  export type MileageRecordUpdateManyWithWhereWithoutUserInput = {
    where: MileageRecordScalarWhereInput
    data: XOR<MileageRecordUpdateManyMutationInput, MileageRecordUncheckedUpdateManyWithoutUserInput>
  }

  export type DocumentUpsertWithWhereUniqueWithoutUserInput = {
    where: DocumentWhereUniqueInput
    update: XOR<DocumentUpdateWithoutUserInput, DocumentUncheckedUpdateWithoutUserInput>
    create: XOR<DocumentCreateWithoutUserInput, DocumentUncheckedCreateWithoutUserInput>
  }

  export type DocumentUpdateWithWhereUniqueWithoutUserInput = {
    where: DocumentWhereUniqueInput
    data: XOR<DocumentUpdateWithoutUserInput, DocumentUncheckedUpdateWithoutUserInput>
  }

  export type DocumentUpdateManyWithWhereWithoutUserInput = {
    where: DocumentScalarWhereInput
    data: XOR<DocumentUpdateManyMutationInput, DocumentUncheckedUpdateManyWithoutUserInput>
  }

  export type IncidentReportUpsertWithWhereUniqueWithoutReporterInput = {
    where: IncidentReportWhereUniqueInput
    update: XOR<IncidentReportUpdateWithoutReporterInput, IncidentReportUncheckedUpdateWithoutReporterInput>
    create: XOR<IncidentReportCreateWithoutReporterInput, IncidentReportUncheckedCreateWithoutReporterInput>
  }

  export type IncidentReportUpdateWithWhereUniqueWithoutReporterInput = {
    where: IncidentReportWhereUniqueInput
    data: XOR<IncidentReportUpdateWithoutReporterInput, IncidentReportUncheckedUpdateWithoutReporterInput>
  }

  export type IncidentReportUpdateManyWithWhereWithoutReporterInput = {
    where: IncidentReportScalarWhereInput
    data: XOR<IncidentReportUpdateManyMutationInput, IncidentReportUncheckedUpdateManyWithoutReporterInput>
  }

  export type KeyContactUpsertWithWhereUniqueWithoutClientInput = {
    where: KeyContactWhereUniqueInput
    update: XOR<KeyContactUpdateWithoutClientInput, KeyContactUncheckedUpdateWithoutClientInput>
    create: XOR<KeyContactCreateWithoutClientInput, KeyContactUncheckedCreateWithoutClientInput>
  }

  export type KeyContactUpdateWithWhereUniqueWithoutClientInput = {
    where: KeyContactWhereUniqueInput
    data: XOR<KeyContactUpdateWithoutClientInput, KeyContactUncheckedUpdateWithoutClientInput>
  }

  export type KeyContactUpdateManyWithWhereWithoutClientInput = {
    where: KeyContactScalarWhereInput
    data: XOR<KeyContactUpdateManyMutationInput, KeyContactUncheckedUpdateManyWithoutClientInput>
  }

  export type KeyContactScalarWhereInput = {
    AND?: KeyContactScalarWhereInput | KeyContactScalarWhereInput[]
    OR?: KeyContactScalarWhereInput[]
    NOT?: KeyContactScalarWhereInput | KeyContactScalarWhereInput[]
    id?: StringFilter<"KeyContact"> | string
    clientId?: StringFilter<"KeyContact"> | string
    name?: StringFilter<"KeyContact"> | string
    relation?: StringFilter<"KeyContact"> | string
    phone?: StringFilter<"KeyContact"> | string
    email?: StringNullableFilter<"KeyContact"> | string | null
  }

  export type CareOutcomeUpsertWithWhereUniqueWithoutClientInput = {
    where: CareOutcomeWhereUniqueInput
    update: XOR<CareOutcomeUpdateWithoutClientInput, CareOutcomeUncheckedUpdateWithoutClientInput>
    create: XOR<CareOutcomeCreateWithoutClientInput, CareOutcomeUncheckedCreateWithoutClientInput>
  }

  export type CareOutcomeUpdateWithWhereUniqueWithoutClientInput = {
    where: CareOutcomeWhereUniqueInput
    data: XOR<CareOutcomeUpdateWithoutClientInput, CareOutcomeUncheckedUpdateWithoutClientInput>
  }

  export type CareOutcomeUpdateManyWithWhereWithoutClientInput = {
    where: CareOutcomeScalarWhereInput
    data: XOR<CareOutcomeUpdateManyMutationInput, CareOutcomeUncheckedUpdateManyWithoutClientInput>
  }

  export type CareOutcomeScalarWhereInput = {
    AND?: CareOutcomeScalarWhereInput | CareOutcomeScalarWhereInput[]
    OR?: CareOutcomeScalarWhereInput[]
    NOT?: CareOutcomeScalarWhereInput | CareOutcomeScalarWhereInput[]
    id?: StringFilter<"CareOutcome"> | string
    clientId?: StringFilter<"CareOutcome"> | string
    outcome?: StringFilter<"CareOutcome"> | string
  }

  export type InvoiceUpsertWithWhereUniqueWithoutClientInput = {
    where: InvoiceWhereUniqueInput
    update: XOR<InvoiceUpdateWithoutClientInput, InvoiceUncheckedUpdateWithoutClientInput>
    create: XOR<InvoiceCreateWithoutClientInput, InvoiceUncheckedCreateWithoutClientInput>
  }

  export type InvoiceUpdateWithWhereUniqueWithoutClientInput = {
    where: InvoiceWhereUniqueInput
    data: XOR<InvoiceUpdateWithoutClientInput, InvoiceUncheckedUpdateWithoutClientInput>
  }

  export type InvoiceUpdateManyWithWhereWithoutClientInput = {
    where: InvoiceScalarWhereInput
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyWithoutClientInput>
  }

  export type DocumentUpsertWithWhereUniqueWithoutClientInput = {
    where: DocumentWhereUniqueInput
    update: XOR<DocumentUpdateWithoutClientInput, DocumentUncheckedUpdateWithoutClientInput>
    create: XOR<DocumentCreateWithoutClientInput, DocumentUncheckedCreateWithoutClientInput>
  }

  export type DocumentUpdateWithWhereUniqueWithoutClientInput = {
    where: DocumentWhereUniqueInput
    data: XOR<DocumentUpdateWithoutClientInput, DocumentUncheckedUpdateWithoutClientInput>
  }

  export type DocumentUpdateManyWithWhereWithoutClientInput = {
    where: DocumentScalarWhereInput
    data: XOR<DocumentUpdateManyMutationInput, DocumentUncheckedUpdateManyWithoutClientInput>
  }

  export type NotificationUpsertWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
  }

  export type NotificationUpdateManyWithWhereWithoutUserInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutUserInput>
  }

  export type NotificationScalarWhereInput = {
    AND?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    OR?: NotificationScalarWhereInput[]
    NOT?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    id?: StringFilter<"Notification"> | string
    userId?: StringFilter<"Notification"> | string
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    read?: BoolFilter<"Notification"> | boolean
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    updatedAt?: DateTimeFilter<"Notification"> | Date | string
  }

  export type RiskAssessmentUpsertWithWhereUniqueWithoutClientInput = {
    where: RiskAssessmentWhereUniqueInput
    update: XOR<RiskAssessmentUpdateWithoutClientInput, RiskAssessmentUncheckedUpdateWithoutClientInput>
    create: XOR<RiskAssessmentCreateWithoutClientInput, RiskAssessmentUncheckedCreateWithoutClientInput>
  }

  export type RiskAssessmentUpdateWithWhereUniqueWithoutClientInput = {
    where: RiskAssessmentWhereUniqueInput
    data: XOR<RiskAssessmentUpdateWithoutClientInput, RiskAssessmentUncheckedUpdateWithoutClientInput>
  }

  export type RiskAssessmentUpdateManyWithWhereWithoutClientInput = {
    where: RiskAssessmentScalarWhereInput
    data: XOR<RiskAssessmentUpdateManyMutationInput, RiskAssessmentUncheckedUpdateManyWithoutClientInput>
  }

  export type RiskAssessmentScalarWhereInput = {
    AND?: RiskAssessmentScalarWhereInput | RiskAssessmentScalarWhereInput[]
    OR?: RiskAssessmentScalarWhereInput[]
    NOT?: RiskAssessmentScalarWhereInput | RiskAssessmentScalarWhereInput[]
    id?: StringFilter<"RiskAssessment"> | string
    clientId?: StringFilter<"RiskAssessment"> | string
    riskCategoryId?: StringFilter<"RiskAssessment"> | string
    description?: StringFilter<"RiskAssessment"> | string
    affectedParties?: StringFilter<"RiskAssessment"> | string
    mitigationStrategy?: StringFilter<"RiskAssessment"> | string
    likelihood?: IntFilter<"RiskAssessment"> | number
    severity?: IntFilter<"RiskAssessment"> | number
    riskScore?: IntFilter<"RiskAssessment"> | number
    createdAt?: DateTimeFilter<"RiskAssessment"> | Date | string
    updatedAt?: DateTimeFilter<"RiskAssessment"> | Date | string
  }

  export type FamilyAccessUpsertWithWhereUniqueWithoutClientInput = {
    where: FamilyAccessWhereUniqueInput
    update: XOR<FamilyAccessUpdateWithoutClientInput, FamilyAccessUncheckedUpdateWithoutClientInput>
    create: XOR<FamilyAccessCreateWithoutClientInput, FamilyAccessUncheckedCreateWithoutClientInput>
  }

  export type FamilyAccessUpdateWithWhereUniqueWithoutClientInput = {
    where: FamilyAccessWhereUniqueInput
    data: XOR<FamilyAccessUpdateWithoutClientInput, FamilyAccessUncheckedUpdateWithoutClientInput>
  }

  export type FamilyAccessUpdateManyWithWhereWithoutClientInput = {
    where: FamilyAccessScalarWhereInput
    data: XOR<FamilyAccessUpdateManyMutationInput, FamilyAccessUncheckedUpdateManyWithoutClientInput>
  }

  export type FamilyAccessScalarWhereInput = {
    AND?: FamilyAccessScalarWhereInput | FamilyAccessScalarWhereInput[]
    OR?: FamilyAccessScalarWhereInput[]
    NOT?: FamilyAccessScalarWhereInput | FamilyAccessScalarWhereInput[]
    id?: StringFilter<"FamilyAccess"> | string
    clientId?: StringFilter<"FamilyAccess"> | string
    name?: StringFilter<"FamilyAccess"> | string
    relation?: StringFilter<"FamilyAccess"> | string
    phone?: StringFilter<"FamilyAccess"> | string
    email?: StringNullableFilter<"FamilyAccess"> | string | null
  }

  export type CommunicationLogUpsertWithWhereUniqueWithoutClientInput = {
    where: CommunicationLogWhereUniqueInput
    update: XOR<CommunicationLogUpdateWithoutClientInput, CommunicationLogUncheckedUpdateWithoutClientInput>
    create: XOR<CommunicationLogCreateWithoutClientInput, CommunicationLogUncheckedCreateWithoutClientInput>
  }

  export type CommunicationLogUpdateWithWhereUniqueWithoutClientInput = {
    where: CommunicationLogWhereUniqueInput
    data: XOR<CommunicationLogUpdateWithoutClientInput, CommunicationLogUncheckedUpdateWithoutClientInput>
  }

  export type CommunicationLogUpdateManyWithWhereWithoutClientInput = {
    where: CommunicationLogScalarWhereInput
    data: XOR<CommunicationLogUpdateManyMutationInput, CommunicationLogUncheckedUpdateManyWithoutClientInput>
  }

  export type CommunicationLogScalarWhereInput = {
    AND?: CommunicationLogScalarWhereInput | CommunicationLogScalarWhereInput[]
    OR?: CommunicationLogScalarWhereInput[]
    NOT?: CommunicationLogScalarWhereInput | CommunicationLogScalarWhereInput[]
    id?: StringFilter<"CommunicationLog"> | string
    clientId?: StringFilter<"CommunicationLog"> | string
    message?: StringFilter<"CommunicationLog"> | string
    createdAt?: DateTimeFilter<"CommunicationLog"> | Date | string
  }

  export type ReminderUpsertWithWhereUniqueWithoutClientInput = {
    where: ReminderWhereUniqueInput
    update: XOR<ReminderUpdateWithoutClientInput, ReminderUncheckedUpdateWithoutClientInput>
    create: XOR<ReminderCreateWithoutClientInput, ReminderUncheckedCreateWithoutClientInput>
  }

  export type ReminderUpdateWithWhereUniqueWithoutClientInput = {
    where: ReminderWhereUniqueInput
    data: XOR<ReminderUpdateWithoutClientInput, ReminderUncheckedUpdateWithoutClientInput>
  }

  export type ReminderUpdateManyWithWhereWithoutClientInput = {
    where: ReminderScalarWhereInput
    data: XOR<ReminderUpdateManyMutationInput, ReminderUncheckedUpdateManyWithoutClientInput>
  }

  export type ReminderScalarWhereInput = {
    AND?: ReminderScalarWhereInput | ReminderScalarWhereInput[]
    OR?: ReminderScalarWhereInput[]
    NOT?: ReminderScalarWhereInput | ReminderScalarWhereInput[]
    id?: StringFilter<"Reminder"> | string
    clientId?: StringFilter<"Reminder"> | string
    title?: StringFilter<"Reminder"> | string
    message?: StringNullableFilter<"Reminder"> | string | null
    dueDate?: DateTimeFilter<"Reminder"> | Date | string
    completed?: BoolFilter<"Reminder"> | boolean
    createdAt?: DateTimeFilter<"Reminder"> | Date | string
  }

  export type MedicationAdministrationUpsertWithWhereUniqueWithoutAdministeredByInput = {
    where: MedicationAdministrationWhereUniqueInput
    update: XOR<MedicationAdministrationUpdateWithoutAdministeredByInput, MedicationAdministrationUncheckedUpdateWithoutAdministeredByInput>
    create: XOR<MedicationAdministrationCreateWithoutAdministeredByInput, MedicationAdministrationUncheckedCreateWithoutAdministeredByInput>
  }

  export type MedicationAdministrationUpdateWithWhereUniqueWithoutAdministeredByInput = {
    where: MedicationAdministrationWhereUniqueInput
    data: XOR<MedicationAdministrationUpdateWithoutAdministeredByInput, MedicationAdministrationUncheckedUpdateWithoutAdministeredByInput>
  }

  export type MedicationAdministrationUpdateManyWithWhereWithoutAdministeredByInput = {
    where: MedicationAdministrationScalarWhereInput
    data: XOR<MedicationAdministrationUpdateManyMutationInput, MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByInput>
  }

  export type MedicationAdministrationScalarWhereInput = {
    AND?: MedicationAdministrationScalarWhereInput | MedicationAdministrationScalarWhereInput[]
    OR?: MedicationAdministrationScalarWhereInput[]
    NOT?: MedicationAdministrationScalarWhereInput | MedicationAdministrationScalarWhereInput[]
    id?: StringFilter<"MedicationAdministration"> | string
    medicationRecordId?: StringFilter<"MedicationAdministration"> | string
    administeredById?: StringFilter<"MedicationAdministration"> | string
    administeredAt?: DateTimeFilter<"MedicationAdministration"> | Date | string
    doseType?: EnumDoseTypeFilter<"MedicationAdministration"> | $Enums.DoseType
    doseTaken?: BoolFilter<"MedicationAdministration"> | boolean
    notes?: StringNullableFilter<"MedicationAdministration"> | string | null
    createdAt?: DateTimeFilter<"MedicationAdministration"> | Date | string
    reportId?: StringNullableFilter<"MedicationAdministration"> | string | null
  }

  export type ReportEditUpsertWithWhereUniqueWithoutEditorInput = {
    where: ReportEditWhereUniqueInput
    update: XOR<ReportEditUpdateWithoutEditorInput, ReportEditUncheckedUpdateWithoutEditorInput>
    create: XOR<ReportEditCreateWithoutEditorInput, ReportEditUncheckedCreateWithoutEditorInput>
  }

  export type ReportEditUpdateWithWhereUniqueWithoutEditorInput = {
    where: ReportEditWhereUniqueInput
    data: XOR<ReportEditUpdateWithoutEditorInput, ReportEditUncheckedUpdateWithoutEditorInput>
  }

  export type ReportEditUpdateManyWithWhereWithoutEditorInput = {
    where: ReportEditScalarWhereInput
    data: XOR<ReportEditUpdateManyMutationInput, ReportEditUncheckedUpdateManyWithoutEditorInput>
  }

  export type ReportEditScalarWhereInput = {
    AND?: ReportEditScalarWhereInput | ReportEditScalarWhereInput[]
    OR?: ReportEditScalarWhereInput[]
    NOT?: ReportEditScalarWhereInput | ReportEditScalarWhereInput[]
    id?: StringFilter<"ReportEdit"> | string
    reportId?: StringFilter<"ReportEdit"> | string
    editedBy?: StringFilter<"ReportEdit"> | string
    editedAt?: DateTimeFilter<"ReportEdit"> | Date | string
    reason?: StringFilter<"ReportEdit"> | string
    changesJson?: StringFilter<"ReportEdit"> | string
  }

  export type UserCreateWithoutCommunicationPreferenceInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutCommunicationPreferenceInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutCommunicationPreferenceInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCommunicationPreferenceInput, UserUncheckedCreateWithoutCommunicationPreferenceInput>
  }

  export type UserUpsertWithoutCommunicationPreferenceInput = {
    update: XOR<UserUpdateWithoutCommunicationPreferenceInput, UserUncheckedUpdateWithoutCommunicationPreferenceInput>
    create: XOR<UserCreateWithoutCommunicationPreferenceInput, UserUncheckedCreateWithoutCommunicationPreferenceInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCommunicationPreferenceInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCommunicationPreferenceInput, UserUncheckedUpdateWithoutCommunicationPreferenceInput>
  }

  export type UserUpdateWithoutCommunicationPreferenceInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutCommunicationPreferenceInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserCreateWithoutFamilyAccessInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutFamilyAccessInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutFamilyAccessInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFamilyAccessInput, UserUncheckedCreateWithoutFamilyAccessInput>
  }

  export type UserUpsertWithoutFamilyAccessInput = {
    update: XOR<UserUpdateWithoutFamilyAccessInput, UserUncheckedUpdateWithoutFamilyAccessInput>
    create: XOR<UserCreateWithoutFamilyAccessInput, UserUncheckedCreateWithoutFamilyAccessInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFamilyAccessInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFamilyAccessInput, UserUncheckedUpdateWithoutFamilyAccessInput>
  }

  export type UserUpdateWithoutFamilyAccessInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutFamilyAccessInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type AgencyCreateWithoutMedicationsInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutAgencyInput
    documents?: DocumentCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryCreateNestedManyWithoutAgencyInput
    Report?: ReportCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutMedicationsInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleUncheckedCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutAgencyInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeUncheckedCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryUncheckedCreateNestedManyWithoutAgencyInput
    Report?: ReportUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutMedicationsInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutMedicationsInput, AgencyUncheckedCreateWithoutMedicationsInput>
  }

  export type MedicationRecordCreateWithoutMedicationInput = {
    id?: string
    dosage: string
    frequency: string
    startDate: Date | string
    endDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
    client: UserCreateNestedOneWithoutClientMedicationsInput
    user: UserCreateNestedOneWithoutCareWorkerMedicationsInput
    User: UserCreateNestedOneWithoutMedicationRecordsInput
    administrationRecords?: MedicationAdministrationCreateNestedManyWithoutMedicationRecordInput
  }

  export type MedicationRecordUncheckedCreateWithoutMedicationInput = {
    id?: string
    clientId: string
    userId: string
    dosage: string
    frequency: string
    startDate: Date | string
    endDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
    administrationRecords?: MedicationAdministrationUncheckedCreateNestedManyWithoutMedicationRecordInput
  }

  export type MedicationRecordCreateOrConnectWithoutMedicationInput = {
    where: MedicationRecordWhereUniqueInput
    create: XOR<MedicationRecordCreateWithoutMedicationInput, MedicationRecordUncheckedCreateWithoutMedicationInput>
  }

  export type MedicationRecordCreateManyMedicationInputEnvelope = {
    data: MedicationRecordCreateManyMedicationInput | MedicationRecordCreateManyMedicationInput[]
    skipDuplicates?: boolean
  }

  export type AgencyUpsertWithoutMedicationsInput = {
    update: XOR<AgencyUpdateWithoutMedicationsInput, AgencyUncheckedUpdateWithoutMedicationsInput>
    create: XOR<AgencyCreateWithoutMedicationsInput, AgencyUncheckedCreateWithoutMedicationsInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutMedicationsInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutMedicationsInput, AgencyUncheckedUpdateWithoutMedicationsInput>
  }

  export type AgencyUpdateWithoutMedicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUpdateManyWithoutAgencyNestedInput
    Report?: ReportUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutMedicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUncheckedUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUncheckedUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUncheckedUpdateManyWithoutAgencyNestedInput
    Report?: ReportUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type MedicationRecordUpsertWithWhereUniqueWithoutMedicationInput = {
    where: MedicationRecordWhereUniqueInput
    update: XOR<MedicationRecordUpdateWithoutMedicationInput, MedicationRecordUncheckedUpdateWithoutMedicationInput>
    create: XOR<MedicationRecordCreateWithoutMedicationInput, MedicationRecordUncheckedCreateWithoutMedicationInput>
  }

  export type MedicationRecordUpdateWithWhereUniqueWithoutMedicationInput = {
    where: MedicationRecordWhereUniqueInput
    data: XOR<MedicationRecordUpdateWithoutMedicationInput, MedicationRecordUncheckedUpdateWithoutMedicationInput>
  }

  export type MedicationRecordUpdateManyWithWhereWithoutMedicationInput = {
    where: MedicationRecordScalarWhereInput
    data: XOR<MedicationRecordUpdateManyMutationInput, MedicationRecordUncheckedUpdateManyWithoutMedicationInput>
  }

  export type AgencyCreateWithoutVisitTypesInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutAgencyInput
    documents?: DocumentCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryCreateNestedManyWithoutAgencyInput
    Report?: ReportCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutVisitTypesInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleUncheckedCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutAgencyInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkUncheckedCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryUncheckedCreateNestedManyWithoutAgencyInput
    Report?: ReportUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutVisitTypesInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutVisitTypesInput, AgencyUncheckedCreateWithoutVisitTypesInput>
  }

  export type ScheduleCreateWithoutVisitTypeInput = {
    id?: string
    date: Date | string
    startTime: string
    endTime: string
    status?: string
    type?: $Enums.ScheduleType
    notes?: string | null
    chargeRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agency: AgencyCreateNestedOneWithoutSchedulesInput
    client: UserCreateNestedOneWithoutClientSchedulesInput
    user: UserCreateNestedOneWithoutCareWorkerSchedulesInput
  }

  export type ScheduleUncheckedCreateWithoutVisitTypeInput = {
    id?: string
    agencyId: string
    clientId: string
    userId: string
    date: Date | string
    startTime: string
    endTime: string
    status?: string
    type?: $Enums.ScheduleType
    notes?: string | null
    chargeRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScheduleCreateOrConnectWithoutVisitTypeInput = {
    where: ScheduleWhereUniqueInput
    create: XOR<ScheduleCreateWithoutVisitTypeInput, ScheduleUncheckedCreateWithoutVisitTypeInput>
  }

  export type ScheduleCreateManyVisitTypeInputEnvelope = {
    data: ScheduleCreateManyVisitTypeInput | ScheduleCreateManyVisitTypeInput[]
    skipDuplicates?: boolean
  }

  export type AgencyUpsertWithoutVisitTypesInput = {
    update: XOR<AgencyUpdateWithoutVisitTypesInput, AgencyUncheckedUpdateWithoutVisitTypesInput>
    create: XOR<AgencyCreateWithoutVisitTypesInput, AgencyUncheckedCreateWithoutVisitTypesInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutVisitTypesInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutVisitTypesInput, AgencyUncheckedUpdateWithoutVisitTypesInput>
  }

  export type AgencyUpdateWithoutVisitTypesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUpdateManyWithoutAgencyNestedInput
    Report?: ReportUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutVisitTypesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUncheckedUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUncheckedUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUncheckedUpdateManyWithoutAgencyNestedInput
    Report?: ReportUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type ScheduleUpsertWithWhereUniqueWithoutVisitTypeInput = {
    where: ScheduleWhereUniqueInput
    update: XOR<ScheduleUpdateWithoutVisitTypeInput, ScheduleUncheckedUpdateWithoutVisitTypeInput>
    create: XOR<ScheduleCreateWithoutVisitTypeInput, ScheduleUncheckedCreateWithoutVisitTypeInput>
  }

  export type ScheduleUpdateWithWhereUniqueWithoutVisitTypeInput = {
    where: ScheduleWhereUniqueInput
    data: XOR<ScheduleUpdateWithoutVisitTypeInput, ScheduleUncheckedUpdateWithoutVisitTypeInput>
  }

  export type ScheduleUpdateManyWithWhereWithoutVisitTypeInput = {
    where: ScheduleScalarWhereInput
    data: XOR<ScheduleUpdateManyMutationInput, ScheduleUncheckedUpdateManyWithoutVisitTypeInput>
  }

  export type VisitTypeCreateWithoutSchedulesInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agency: AgencyCreateNestedOneWithoutVisitTypesInput
  }

  export type VisitTypeUncheckedCreateWithoutSchedulesInput = {
    id?: string
    agencyId: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VisitTypeCreateOrConnectWithoutSchedulesInput = {
    where: VisitTypeWhereUniqueInput
    create: XOR<VisitTypeCreateWithoutSchedulesInput, VisitTypeUncheckedCreateWithoutSchedulesInput>
  }

  export type AgencyCreateWithoutSchedulesInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutAgencyInput
    documents?: DocumentCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryCreateNestedManyWithoutAgencyInput
    Report?: ReportCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutSchedulesInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutAgencyInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkUncheckedCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeUncheckedCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryUncheckedCreateNestedManyWithoutAgencyInput
    Report?: ReportUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutSchedulesInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutSchedulesInput, AgencyUncheckedCreateWithoutSchedulesInput>
  }

  export type UserCreateWithoutClientSchedulesInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutClientSchedulesInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutClientSchedulesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutClientSchedulesInput, UserUncheckedCreateWithoutClientSchedulesInput>
  }

  export type UserCreateWithoutCareWorkerSchedulesInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutCareWorkerSchedulesInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutCareWorkerSchedulesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCareWorkerSchedulesInput, UserUncheckedCreateWithoutCareWorkerSchedulesInput>
  }

  export type VisitTypeUpsertWithoutSchedulesInput = {
    update: XOR<VisitTypeUpdateWithoutSchedulesInput, VisitTypeUncheckedUpdateWithoutSchedulesInput>
    create: XOR<VisitTypeCreateWithoutSchedulesInput, VisitTypeUncheckedCreateWithoutSchedulesInput>
    where?: VisitTypeWhereInput
  }

  export type VisitTypeUpdateToOneWithWhereWithoutSchedulesInput = {
    where?: VisitTypeWhereInput
    data: XOR<VisitTypeUpdateWithoutSchedulesInput, VisitTypeUncheckedUpdateWithoutSchedulesInput>
  }

  export type VisitTypeUpdateWithoutSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: AgencyUpdateOneRequiredWithoutVisitTypesNestedInput
  }

  export type VisitTypeUncheckedUpdateWithoutSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyUpsertWithoutSchedulesInput = {
    update: XOR<AgencyUpdateWithoutSchedulesInput, AgencyUncheckedUpdateWithoutSchedulesInput>
    create: XOR<AgencyCreateWithoutSchedulesInput, AgencyUncheckedCreateWithoutSchedulesInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutSchedulesInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutSchedulesInput, AgencyUncheckedUpdateWithoutSchedulesInput>
  }

  export type AgencyUpdateWithoutSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUpdateManyWithoutAgencyNestedInput
    Report?: ReportUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUncheckedUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUncheckedUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUncheckedUpdateManyWithoutAgencyNestedInput
    Report?: ReportUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type UserUpsertWithoutClientSchedulesInput = {
    update: XOR<UserUpdateWithoutClientSchedulesInput, UserUncheckedUpdateWithoutClientSchedulesInput>
    create: XOR<UserCreateWithoutClientSchedulesInput, UserUncheckedCreateWithoutClientSchedulesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutClientSchedulesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutClientSchedulesInput, UserUncheckedUpdateWithoutClientSchedulesInput>
  }

  export type UserUpdateWithoutClientSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutClientSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserUpsertWithoutCareWorkerSchedulesInput = {
    update: XOR<UserUpdateWithoutCareWorkerSchedulesInput, UserUncheckedUpdateWithoutCareWorkerSchedulesInput>
    create: XOR<UserCreateWithoutCareWorkerSchedulesInput, UserUncheckedCreateWithoutCareWorkerSchedulesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCareWorkerSchedulesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCareWorkerSchedulesInput, UserUncheckedUpdateWithoutCareWorkerSchedulesInput>
  }

  export type UserUpdateWithoutCareWorkerSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutCareWorkerSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type ReportTaskCreateWithoutReportInput = {
    id?: string
    taskName: string
    completed?: boolean
    notes?: string | null
    taskIcon?: string | null
    taskType?: string | null
    completedAt?: Date | string | null
  }

  export type ReportTaskUncheckedCreateWithoutReportInput = {
    id?: string
    taskName: string
    completed?: boolean
    notes?: string | null
    taskIcon?: string | null
    taskType?: string | null
    completedAt?: Date | string | null
  }

  export type ReportTaskCreateOrConnectWithoutReportInput = {
    where: ReportTaskWhereUniqueInput
    create: XOR<ReportTaskCreateWithoutReportInput, ReportTaskUncheckedCreateWithoutReportInput>
  }

  export type ReportTaskCreateManyReportInputEnvelope = {
    data: ReportTaskCreateManyReportInput | ReportTaskCreateManyReportInput[]
    skipDuplicates?: boolean
  }

  export type ReportAlertCreateWithoutReportInput = {
    id?: string
    type: $Enums.AlertType
    message: string
    severity: $Enums.AlertSeverity
    createdAt?: Date | string
    resolved?: boolean
    resolvedAt?: Date | string | null
    resolvedBy?: string | null
  }

  export type ReportAlertUncheckedCreateWithoutReportInput = {
    id?: string
    type: $Enums.AlertType
    message: string
    severity: $Enums.AlertSeverity
    createdAt?: Date | string
    resolved?: boolean
    resolvedAt?: Date | string | null
    resolvedBy?: string | null
  }

  export type ReportAlertCreateOrConnectWithoutReportInput = {
    where: ReportAlertWhereUniqueInput
    create: XOR<ReportAlertCreateWithoutReportInput, ReportAlertUncheckedCreateWithoutReportInput>
  }

  export type ReportAlertCreateManyReportInputEnvelope = {
    data: ReportAlertCreateManyReportInput | ReportAlertCreateManyReportInput[]
    skipDuplicates?: boolean
  }

  export type BodyMapObservationCreateWithoutReportInput = {
    id?: string
    bodyPart: string
    condition: string
    notes?: string | null
    createdAt?: Date | string
  }

  export type BodyMapObservationUncheckedCreateWithoutReportInput = {
    id?: string
    bodyPart: string
    condition: string
    notes?: string | null
    createdAt?: Date | string
  }

  export type BodyMapObservationCreateOrConnectWithoutReportInput = {
    where: BodyMapObservationWhereUniqueInput
    create: XOR<BodyMapObservationCreateWithoutReportInput, BodyMapObservationUncheckedCreateWithoutReportInput>
  }

  export type BodyMapObservationCreateManyReportInputEnvelope = {
    data: BodyMapObservationCreateManyReportInput | BodyMapObservationCreateManyReportInput[]
    skipDuplicates?: boolean
  }

  export type MedicationAdministrationCreateWithoutReportInput = {
    id?: string
    administeredAt: Date | string
    doseType: $Enums.DoseType
    doseTaken?: boolean
    notes?: string | null
    createdAt?: Date | string
    medicationRecord: MedicationRecordCreateNestedOneWithoutAdministrationRecordsInput
    administeredBy: UserCreateNestedOneWithoutMedicationAdministrationsInput
  }

  export type MedicationAdministrationUncheckedCreateWithoutReportInput = {
    id?: string
    medicationRecordId: string
    administeredById: string
    administeredAt: Date | string
    doseType: $Enums.DoseType
    doseTaken?: boolean
    notes?: string | null
    createdAt?: Date | string
  }

  export type MedicationAdministrationCreateOrConnectWithoutReportInput = {
    where: MedicationAdministrationWhereUniqueInput
    create: XOR<MedicationAdministrationCreateWithoutReportInput, MedicationAdministrationUncheckedCreateWithoutReportInput>
  }

  export type MedicationAdministrationCreateManyReportInputEnvelope = {
    data: MedicationAdministrationCreateManyReportInput | MedicationAdministrationCreateManyReportInput[]
    skipDuplicates?: boolean
  }

  export type ReportEditCreateWithoutReportInput = {
    id?: string
    editedAt?: Date | string
    reason: string
    changesJson: string
    editor: UserCreateNestedOneWithoutReportEditsInput
  }

  export type ReportEditUncheckedCreateWithoutReportInput = {
    id?: string
    editedBy: string
    editedAt?: Date | string
    reason: string
    changesJson: string
  }

  export type ReportEditCreateOrConnectWithoutReportInput = {
    where: ReportEditWhereUniqueInput
    create: XOR<ReportEditCreateWithoutReportInput, ReportEditUncheckedCreateWithoutReportInput>
  }

  export type ReportEditCreateManyReportInputEnvelope = {
    data: ReportEditCreateManyReportInput | ReportEditCreateManyReportInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutClientReportsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutClientReportsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutClientReportsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutClientReportsInput, UserUncheckedCreateWithoutClientReportsInput>
  }

  export type UserCreateWithoutCareReportsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutCareReportsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutCareReportsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCareReportsInput, UserUncheckedCreateWithoutCareReportsInput>
  }

  export type AgencyCreateWithoutReportInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutAgencyInput
    documents?: DocumentCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutReportInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleUncheckedCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutAgencyInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkUncheckedCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeUncheckedCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutReportInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutReportInput, AgencyUncheckedCreateWithoutReportInput>
  }

  export type ReportTaskUpsertWithWhereUniqueWithoutReportInput = {
    where: ReportTaskWhereUniqueInput
    update: XOR<ReportTaskUpdateWithoutReportInput, ReportTaskUncheckedUpdateWithoutReportInput>
    create: XOR<ReportTaskCreateWithoutReportInput, ReportTaskUncheckedCreateWithoutReportInput>
  }

  export type ReportTaskUpdateWithWhereUniqueWithoutReportInput = {
    where: ReportTaskWhereUniqueInput
    data: XOR<ReportTaskUpdateWithoutReportInput, ReportTaskUncheckedUpdateWithoutReportInput>
  }

  export type ReportTaskUpdateManyWithWhereWithoutReportInput = {
    where: ReportTaskScalarWhereInput
    data: XOR<ReportTaskUpdateManyMutationInput, ReportTaskUncheckedUpdateManyWithoutReportInput>
  }

  export type ReportTaskScalarWhereInput = {
    AND?: ReportTaskScalarWhereInput | ReportTaskScalarWhereInput[]
    OR?: ReportTaskScalarWhereInput[]
    NOT?: ReportTaskScalarWhereInput | ReportTaskScalarWhereInput[]
    id?: StringFilter<"ReportTask"> | string
    reportId?: StringFilter<"ReportTask"> | string
    taskName?: StringFilter<"ReportTask"> | string
    completed?: BoolFilter<"ReportTask"> | boolean
    notes?: StringNullableFilter<"ReportTask"> | string | null
    taskIcon?: StringNullableFilter<"ReportTask"> | string | null
    taskType?: StringNullableFilter<"ReportTask"> | string | null
    completedAt?: DateTimeNullableFilter<"ReportTask"> | Date | string | null
  }

  export type ReportAlertUpsertWithWhereUniqueWithoutReportInput = {
    where: ReportAlertWhereUniqueInput
    update: XOR<ReportAlertUpdateWithoutReportInput, ReportAlertUncheckedUpdateWithoutReportInput>
    create: XOR<ReportAlertCreateWithoutReportInput, ReportAlertUncheckedCreateWithoutReportInput>
  }

  export type ReportAlertUpdateWithWhereUniqueWithoutReportInput = {
    where: ReportAlertWhereUniqueInput
    data: XOR<ReportAlertUpdateWithoutReportInput, ReportAlertUncheckedUpdateWithoutReportInput>
  }

  export type ReportAlertUpdateManyWithWhereWithoutReportInput = {
    where: ReportAlertScalarWhereInput
    data: XOR<ReportAlertUpdateManyMutationInput, ReportAlertUncheckedUpdateManyWithoutReportInput>
  }

  export type ReportAlertScalarWhereInput = {
    AND?: ReportAlertScalarWhereInput | ReportAlertScalarWhereInput[]
    OR?: ReportAlertScalarWhereInput[]
    NOT?: ReportAlertScalarWhereInput | ReportAlertScalarWhereInput[]
    id?: StringFilter<"ReportAlert"> | string
    reportId?: StringFilter<"ReportAlert"> | string
    type?: EnumAlertTypeFilter<"ReportAlert"> | $Enums.AlertType
    message?: StringFilter<"ReportAlert"> | string
    severity?: EnumAlertSeverityFilter<"ReportAlert"> | $Enums.AlertSeverity
    createdAt?: DateTimeFilter<"ReportAlert"> | Date | string
    resolved?: BoolFilter<"ReportAlert"> | boolean
    resolvedAt?: DateTimeNullableFilter<"ReportAlert"> | Date | string | null
    resolvedBy?: StringNullableFilter<"ReportAlert"> | string | null
  }

  export type BodyMapObservationUpsertWithWhereUniqueWithoutReportInput = {
    where: BodyMapObservationWhereUniqueInput
    update: XOR<BodyMapObservationUpdateWithoutReportInput, BodyMapObservationUncheckedUpdateWithoutReportInput>
    create: XOR<BodyMapObservationCreateWithoutReportInput, BodyMapObservationUncheckedCreateWithoutReportInput>
  }

  export type BodyMapObservationUpdateWithWhereUniqueWithoutReportInput = {
    where: BodyMapObservationWhereUniqueInput
    data: XOR<BodyMapObservationUpdateWithoutReportInput, BodyMapObservationUncheckedUpdateWithoutReportInput>
  }

  export type BodyMapObservationUpdateManyWithWhereWithoutReportInput = {
    where: BodyMapObservationScalarWhereInput
    data: XOR<BodyMapObservationUpdateManyMutationInput, BodyMapObservationUncheckedUpdateManyWithoutReportInput>
  }

  export type BodyMapObservationScalarWhereInput = {
    AND?: BodyMapObservationScalarWhereInput | BodyMapObservationScalarWhereInput[]
    OR?: BodyMapObservationScalarWhereInput[]
    NOT?: BodyMapObservationScalarWhereInput | BodyMapObservationScalarWhereInput[]
    id?: StringFilter<"BodyMapObservation"> | string
    reportId?: StringFilter<"BodyMapObservation"> | string
    bodyPart?: StringFilter<"BodyMapObservation"> | string
    condition?: StringFilter<"BodyMapObservation"> | string
    notes?: StringNullableFilter<"BodyMapObservation"> | string | null
    createdAt?: DateTimeFilter<"BodyMapObservation"> | Date | string
  }

  export type MedicationAdministrationUpsertWithWhereUniqueWithoutReportInput = {
    where: MedicationAdministrationWhereUniqueInput
    update: XOR<MedicationAdministrationUpdateWithoutReportInput, MedicationAdministrationUncheckedUpdateWithoutReportInput>
    create: XOR<MedicationAdministrationCreateWithoutReportInput, MedicationAdministrationUncheckedCreateWithoutReportInput>
  }

  export type MedicationAdministrationUpdateWithWhereUniqueWithoutReportInput = {
    where: MedicationAdministrationWhereUniqueInput
    data: XOR<MedicationAdministrationUpdateWithoutReportInput, MedicationAdministrationUncheckedUpdateWithoutReportInput>
  }

  export type MedicationAdministrationUpdateManyWithWhereWithoutReportInput = {
    where: MedicationAdministrationScalarWhereInput
    data: XOR<MedicationAdministrationUpdateManyMutationInput, MedicationAdministrationUncheckedUpdateManyWithoutReportInput>
  }

  export type ReportEditUpsertWithWhereUniqueWithoutReportInput = {
    where: ReportEditWhereUniqueInput
    update: XOR<ReportEditUpdateWithoutReportInput, ReportEditUncheckedUpdateWithoutReportInput>
    create: XOR<ReportEditCreateWithoutReportInput, ReportEditUncheckedCreateWithoutReportInput>
  }

  export type ReportEditUpdateWithWhereUniqueWithoutReportInput = {
    where: ReportEditWhereUniqueInput
    data: XOR<ReportEditUpdateWithoutReportInput, ReportEditUncheckedUpdateWithoutReportInput>
  }

  export type ReportEditUpdateManyWithWhereWithoutReportInput = {
    where: ReportEditScalarWhereInput
    data: XOR<ReportEditUpdateManyMutationInput, ReportEditUncheckedUpdateManyWithoutReportInput>
  }

  export type UserUpsertWithoutClientReportsInput = {
    update: XOR<UserUpdateWithoutClientReportsInput, UserUncheckedUpdateWithoutClientReportsInput>
    create: XOR<UserCreateWithoutClientReportsInput, UserUncheckedCreateWithoutClientReportsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutClientReportsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutClientReportsInput, UserUncheckedUpdateWithoutClientReportsInput>
  }

  export type UserUpdateWithoutClientReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutClientReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserUpsertWithoutCareReportsInput = {
    update: XOR<UserUpdateWithoutCareReportsInput, UserUncheckedUpdateWithoutCareReportsInput>
    create: XOR<UserCreateWithoutCareReportsInput, UserUncheckedCreateWithoutCareReportsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCareReportsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCareReportsInput, UserUncheckedUpdateWithoutCareReportsInput>
  }

  export type UserUpdateWithoutCareReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutCareReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type AgencyUpsertWithoutReportInput = {
    update: XOR<AgencyUpdateWithoutReportInput, AgencyUncheckedUpdateWithoutReportInput>
    create: XOR<AgencyCreateWithoutReportInput, AgencyUncheckedCreateWithoutReportInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutReportInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutReportInput, AgencyUncheckedUpdateWithoutReportInput>
  }

  export type AgencyUpdateWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUncheckedUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUncheckedUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUncheckedUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type ReportCreateWithoutTasksCompletedInput = {
    id?: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    alerts?: ReportAlertCreateNestedManyWithoutReportInput
    bodyMapObservations?: BodyMapObservationCreateNestedManyWithoutReportInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutReportInput
    editHistory?: ReportEditCreateNestedManyWithoutReportInput
    client: UserCreateNestedOneWithoutClientReportsInput
    caregiver: UserCreateNestedOneWithoutCareReportsInput
    agency: AgencyCreateNestedOneWithoutReportInput
  }

  export type ReportUncheckedCreateWithoutTasksCompletedInput = {
    id?: string
    clientId: string
    agencyId: string
    userId: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    alerts?: ReportAlertUncheckedCreateNestedManyWithoutReportInput
    bodyMapObservations?: BodyMapObservationUncheckedCreateNestedManyWithoutReportInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutReportInput
    editHistory?: ReportEditUncheckedCreateNestedManyWithoutReportInput
  }

  export type ReportCreateOrConnectWithoutTasksCompletedInput = {
    where: ReportWhereUniqueInput
    create: XOR<ReportCreateWithoutTasksCompletedInput, ReportUncheckedCreateWithoutTasksCompletedInput>
  }

  export type ReportUpsertWithoutTasksCompletedInput = {
    update: XOR<ReportUpdateWithoutTasksCompletedInput, ReportUncheckedUpdateWithoutTasksCompletedInput>
    create: XOR<ReportCreateWithoutTasksCompletedInput, ReportUncheckedCreateWithoutTasksCompletedInput>
    where?: ReportWhereInput
  }

  export type ReportUpdateToOneWithWhereWithoutTasksCompletedInput = {
    where?: ReportWhereInput
    data: XOR<ReportUpdateWithoutTasksCompletedInput, ReportUncheckedUpdateWithoutTasksCompletedInput>
  }

  export type ReportUpdateWithoutTasksCompletedInput = {
    id?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    alerts?: ReportAlertUpdateManyWithoutReportNestedInput
    bodyMapObservations?: BodyMapObservationUpdateManyWithoutReportNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutReportNestedInput
    editHistory?: ReportEditUpdateManyWithoutReportNestedInput
    client?: UserUpdateOneRequiredWithoutClientReportsNestedInput
    caregiver?: UserUpdateOneRequiredWithoutCareReportsNestedInput
    agency?: AgencyUpdateOneRequiredWithoutReportNestedInput
  }

  export type ReportUncheckedUpdateWithoutTasksCompletedInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    alerts?: ReportAlertUncheckedUpdateManyWithoutReportNestedInput
    bodyMapObservations?: BodyMapObservationUncheckedUpdateManyWithoutReportNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutReportNestedInput
    editHistory?: ReportEditUncheckedUpdateManyWithoutReportNestedInput
  }

  export type ReportCreateWithoutAlertsInput = {
    id?: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    tasksCompleted?: ReportTaskCreateNestedManyWithoutReportInput
    bodyMapObservations?: BodyMapObservationCreateNestedManyWithoutReportInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutReportInput
    editHistory?: ReportEditCreateNestedManyWithoutReportInput
    client: UserCreateNestedOneWithoutClientReportsInput
    caregiver: UserCreateNestedOneWithoutCareReportsInput
    agency: AgencyCreateNestedOneWithoutReportInput
  }

  export type ReportUncheckedCreateWithoutAlertsInput = {
    id?: string
    clientId: string
    agencyId: string
    userId: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    tasksCompleted?: ReportTaskUncheckedCreateNestedManyWithoutReportInput
    bodyMapObservations?: BodyMapObservationUncheckedCreateNestedManyWithoutReportInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutReportInput
    editHistory?: ReportEditUncheckedCreateNestedManyWithoutReportInput
  }

  export type ReportCreateOrConnectWithoutAlertsInput = {
    where: ReportWhereUniqueInput
    create: XOR<ReportCreateWithoutAlertsInput, ReportUncheckedCreateWithoutAlertsInput>
  }

  export type ReportUpsertWithoutAlertsInput = {
    update: XOR<ReportUpdateWithoutAlertsInput, ReportUncheckedUpdateWithoutAlertsInput>
    create: XOR<ReportCreateWithoutAlertsInput, ReportUncheckedCreateWithoutAlertsInput>
    where?: ReportWhereInput
  }

  export type ReportUpdateToOneWithWhereWithoutAlertsInput = {
    where?: ReportWhereInput
    data: XOR<ReportUpdateWithoutAlertsInput, ReportUncheckedUpdateWithoutAlertsInput>
  }

  export type ReportUpdateWithoutAlertsInput = {
    id?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    tasksCompleted?: ReportTaskUpdateManyWithoutReportNestedInput
    bodyMapObservations?: BodyMapObservationUpdateManyWithoutReportNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutReportNestedInput
    editHistory?: ReportEditUpdateManyWithoutReportNestedInput
    client?: UserUpdateOneRequiredWithoutClientReportsNestedInput
    caregiver?: UserUpdateOneRequiredWithoutCareReportsNestedInput
    agency?: AgencyUpdateOneRequiredWithoutReportNestedInput
  }

  export type ReportUncheckedUpdateWithoutAlertsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    tasksCompleted?: ReportTaskUncheckedUpdateManyWithoutReportNestedInput
    bodyMapObservations?: BodyMapObservationUncheckedUpdateManyWithoutReportNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutReportNestedInput
    editHistory?: ReportEditUncheckedUpdateManyWithoutReportNestedInput
  }

  export type ReportCreateWithoutBodyMapObservationsInput = {
    id?: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    tasksCompleted?: ReportTaskCreateNestedManyWithoutReportInput
    alerts?: ReportAlertCreateNestedManyWithoutReportInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutReportInput
    editHistory?: ReportEditCreateNestedManyWithoutReportInput
    client: UserCreateNestedOneWithoutClientReportsInput
    caregiver: UserCreateNestedOneWithoutCareReportsInput
    agency: AgencyCreateNestedOneWithoutReportInput
  }

  export type ReportUncheckedCreateWithoutBodyMapObservationsInput = {
    id?: string
    clientId: string
    agencyId: string
    userId: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    tasksCompleted?: ReportTaskUncheckedCreateNestedManyWithoutReportInput
    alerts?: ReportAlertUncheckedCreateNestedManyWithoutReportInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutReportInput
    editHistory?: ReportEditUncheckedCreateNestedManyWithoutReportInput
  }

  export type ReportCreateOrConnectWithoutBodyMapObservationsInput = {
    where: ReportWhereUniqueInput
    create: XOR<ReportCreateWithoutBodyMapObservationsInput, ReportUncheckedCreateWithoutBodyMapObservationsInput>
  }

  export type ReportUpsertWithoutBodyMapObservationsInput = {
    update: XOR<ReportUpdateWithoutBodyMapObservationsInput, ReportUncheckedUpdateWithoutBodyMapObservationsInput>
    create: XOR<ReportCreateWithoutBodyMapObservationsInput, ReportUncheckedCreateWithoutBodyMapObservationsInput>
    where?: ReportWhereInput
  }

  export type ReportUpdateToOneWithWhereWithoutBodyMapObservationsInput = {
    where?: ReportWhereInput
    data: XOR<ReportUpdateWithoutBodyMapObservationsInput, ReportUncheckedUpdateWithoutBodyMapObservationsInput>
  }

  export type ReportUpdateWithoutBodyMapObservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    tasksCompleted?: ReportTaskUpdateManyWithoutReportNestedInput
    alerts?: ReportAlertUpdateManyWithoutReportNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutReportNestedInput
    editHistory?: ReportEditUpdateManyWithoutReportNestedInput
    client?: UserUpdateOneRequiredWithoutClientReportsNestedInput
    caregiver?: UserUpdateOneRequiredWithoutCareReportsNestedInput
    agency?: AgencyUpdateOneRequiredWithoutReportNestedInput
  }

  export type ReportUncheckedUpdateWithoutBodyMapObservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    tasksCompleted?: ReportTaskUncheckedUpdateManyWithoutReportNestedInput
    alerts?: ReportAlertUncheckedUpdateManyWithoutReportNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutReportNestedInput
    editHistory?: ReportEditUncheckedUpdateManyWithoutReportNestedInput
  }

  export type ReportCreateWithoutEditHistoryInput = {
    id?: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    tasksCompleted?: ReportTaskCreateNestedManyWithoutReportInput
    alerts?: ReportAlertCreateNestedManyWithoutReportInput
    bodyMapObservations?: BodyMapObservationCreateNestedManyWithoutReportInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutReportInput
    client: UserCreateNestedOneWithoutClientReportsInput
    caregiver: UserCreateNestedOneWithoutCareReportsInput
    agency: AgencyCreateNestedOneWithoutReportInput
  }

  export type ReportUncheckedCreateWithoutEditHistoryInput = {
    id?: string
    clientId: string
    agencyId: string
    userId: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    tasksCompleted?: ReportTaskUncheckedCreateNestedManyWithoutReportInput
    alerts?: ReportAlertUncheckedCreateNestedManyWithoutReportInput
    bodyMapObservations?: BodyMapObservationUncheckedCreateNestedManyWithoutReportInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutReportInput
  }

  export type ReportCreateOrConnectWithoutEditHistoryInput = {
    where: ReportWhereUniqueInput
    create: XOR<ReportCreateWithoutEditHistoryInput, ReportUncheckedCreateWithoutEditHistoryInput>
  }

  export type UserCreateWithoutReportEditsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
  }

  export type UserUncheckedCreateWithoutReportEditsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
  }

  export type UserCreateOrConnectWithoutReportEditsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReportEditsInput, UserUncheckedCreateWithoutReportEditsInput>
  }

  export type ReportUpsertWithoutEditHistoryInput = {
    update: XOR<ReportUpdateWithoutEditHistoryInput, ReportUncheckedUpdateWithoutEditHistoryInput>
    create: XOR<ReportCreateWithoutEditHistoryInput, ReportUncheckedCreateWithoutEditHistoryInput>
    where?: ReportWhereInput
  }

  export type ReportUpdateToOneWithWhereWithoutEditHistoryInput = {
    where?: ReportWhereInput
    data: XOR<ReportUpdateWithoutEditHistoryInput, ReportUncheckedUpdateWithoutEditHistoryInput>
  }

  export type ReportUpdateWithoutEditHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    tasksCompleted?: ReportTaskUpdateManyWithoutReportNestedInput
    alerts?: ReportAlertUpdateManyWithoutReportNestedInput
    bodyMapObservations?: BodyMapObservationUpdateManyWithoutReportNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutReportNestedInput
    client?: UserUpdateOneRequiredWithoutClientReportsNestedInput
    caregiver?: UserUpdateOneRequiredWithoutCareReportsNestedInput
    agency?: AgencyUpdateOneRequiredWithoutReportNestedInput
  }

  export type ReportUncheckedUpdateWithoutEditHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    tasksCompleted?: ReportTaskUncheckedUpdateManyWithoutReportNestedInput
    alerts?: ReportAlertUncheckedUpdateManyWithoutReportNestedInput
    bodyMapObservations?: BodyMapObservationUncheckedUpdateManyWithoutReportNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutReportNestedInput
  }

  export type UserUpsertWithoutReportEditsInput = {
    update: XOR<UserUpdateWithoutReportEditsInput, UserUncheckedUpdateWithoutReportEditsInput>
    create: XOR<UserCreateWithoutReportEditsInput, UserUncheckedCreateWithoutReportEditsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReportEditsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReportEditsInput, UserUncheckedUpdateWithoutReportEditsInput>
  }

  export type UserUpdateWithoutReportEditsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
  }

  export type UserUncheckedUpdateWithoutReportEditsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
  }

  export type MedicationDatabaseLinkCreateWithoutMedicationRecordInput = {
    id?: string
    name: string
    isSpecialist?: boolean
    url: string
    source: string
    agency: AgencyCreateNestedOneWithoutMedicationsInput
  }

  export type MedicationDatabaseLinkUncheckedCreateWithoutMedicationRecordInput = {
    id?: string
    name: string
    isSpecialist?: boolean
    url: string
    source: string
    agencyId: string
  }

  export type MedicationDatabaseLinkCreateOrConnectWithoutMedicationRecordInput = {
    where: MedicationDatabaseLinkWhereUniqueInput
    create: XOR<MedicationDatabaseLinkCreateWithoutMedicationRecordInput, MedicationDatabaseLinkUncheckedCreateWithoutMedicationRecordInput>
  }

  export type UserCreateWithoutClientMedicationsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutClientMedicationsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutClientMedicationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutClientMedicationsInput, UserUncheckedCreateWithoutClientMedicationsInput>
  }

  export type UserCreateWithoutCareWorkerMedicationsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutCareWorkerMedicationsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutCareWorkerMedicationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCareWorkerMedicationsInput, UserUncheckedCreateWithoutCareWorkerMedicationsInput>
  }

  export type UserCreateWithoutMedicationRecordsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutMedicationRecordsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutMedicationRecordsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMedicationRecordsInput, UserUncheckedCreateWithoutMedicationRecordsInput>
  }

  export type MedicationAdministrationCreateWithoutMedicationRecordInput = {
    id?: string
    administeredAt: Date | string
    doseType: $Enums.DoseType
    doseTaken?: boolean
    notes?: string | null
    createdAt?: Date | string
    administeredBy: UserCreateNestedOneWithoutMedicationAdministrationsInput
    report?: ReportCreateNestedOneWithoutMedicationAdministrationsInput
  }

  export type MedicationAdministrationUncheckedCreateWithoutMedicationRecordInput = {
    id?: string
    administeredById: string
    administeredAt: Date | string
    doseType: $Enums.DoseType
    doseTaken?: boolean
    notes?: string | null
    createdAt?: Date | string
    reportId?: string | null
  }

  export type MedicationAdministrationCreateOrConnectWithoutMedicationRecordInput = {
    where: MedicationAdministrationWhereUniqueInput
    create: XOR<MedicationAdministrationCreateWithoutMedicationRecordInput, MedicationAdministrationUncheckedCreateWithoutMedicationRecordInput>
  }

  export type MedicationAdministrationCreateManyMedicationRecordInputEnvelope = {
    data: MedicationAdministrationCreateManyMedicationRecordInput | MedicationAdministrationCreateManyMedicationRecordInput[]
    skipDuplicates?: boolean
  }

  export type MedicationDatabaseLinkUpsertWithoutMedicationRecordInput = {
    update: XOR<MedicationDatabaseLinkUpdateWithoutMedicationRecordInput, MedicationDatabaseLinkUncheckedUpdateWithoutMedicationRecordInput>
    create: XOR<MedicationDatabaseLinkCreateWithoutMedicationRecordInput, MedicationDatabaseLinkUncheckedCreateWithoutMedicationRecordInput>
    where?: MedicationDatabaseLinkWhereInput
  }

  export type MedicationDatabaseLinkUpdateToOneWithWhereWithoutMedicationRecordInput = {
    where?: MedicationDatabaseLinkWhereInput
    data: XOR<MedicationDatabaseLinkUpdateWithoutMedicationRecordInput, MedicationDatabaseLinkUncheckedUpdateWithoutMedicationRecordInput>
  }

  export type MedicationDatabaseLinkUpdateWithoutMedicationRecordInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isSpecialist?: BoolFieldUpdateOperationsInput | boolean
    url?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    agency?: AgencyUpdateOneRequiredWithoutMedicationsNestedInput
  }

  export type MedicationDatabaseLinkUncheckedUpdateWithoutMedicationRecordInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isSpecialist?: BoolFieldUpdateOperationsInput | boolean
    url?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
  }

  export type UserUpsertWithoutClientMedicationsInput = {
    update: XOR<UserUpdateWithoutClientMedicationsInput, UserUncheckedUpdateWithoutClientMedicationsInput>
    create: XOR<UserCreateWithoutClientMedicationsInput, UserUncheckedCreateWithoutClientMedicationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutClientMedicationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutClientMedicationsInput, UserUncheckedUpdateWithoutClientMedicationsInput>
  }

  export type UserUpdateWithoutClientMedicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutClientMedicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserUpsertWithoutCareWorkerMedicationsInput = {
    update: XOR<UserUpdateWithoutCareWorkerMedicationsInput, UserUncheckedUpdateWithoutCareWorkerMedicationsInput>
    create: XOR<UserCreateWithoutCareWorkerMedicationsInput, UserUncheckedCreateWithoutCareWorkerMedicationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCareWorkerMedicationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCareWorkerMedicationsInput, UserUncheckedUpdateWithoutCareWorkerMedicationsInput>
  }

  export type UserUpdateWithoutCareWorkerMedicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutCareWorkerMedicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserUpsertWithoutMedicationRecordsInput = {
    update: XOR<UserUpdateWithoutMedicationRecordsInput, UserUncheckedUpdateWithoutMedicationRecordsInput>
    create: XOR<UserCreateWithoutMedicationRecordsInput, UserUncheckedCreateWithoutMedicationRecordsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMedicationRecordsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMedicationRecordsInput, UserUncheckedUpdateWithoutMedicationRecordsInput>
  }

  export type UserUpdateWithoutMedicationRecordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutMedicationRecordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type MedicationAdministrationUpsertWithWhereUniqueWithoutMedicationRecordInput = {
    where: MedicationAdministrationWhereUniqueInput
    update: XOR<MedicationAdministrationUpdateWithoutMedicationRecordInput, MedicationAdministrationUncheckedUpdateWithoutMedicationRecordInput>
    create: XOR<MedicationAdministrationCreateWithoutMedicationRecordInput, MedicationAdministrationUncheckedCreateWithoutMedicationRecordInput>
  }

  export type MedicationAdministrationUpdateWithWhereUniqueWithoutMedicationRecordInput = {
    where: MedicationAdministrationWhereUniqueInput
    data: XOR<MedicationAdministrationUpdateWithoutMedicationRecordInput, MedicationAdministrationUncheckedUpdateWithoutMedicationRecordInput>
  }

  export type MedicationAdministrationUpdateManyWithWhereWithoutMedicationRecordInput = {
    where: MedicationAdministrationScalarWhereInput
    data: XOR<MedicationAdministrationUpdateManyMutationInput, MedicationAdministrationUncheckedUpdateManyWithoutMedicationRecordInput>
  }

  export type MedicationRecordCreateWithoutAdministrationRecordsInput = {
    id?: string
    dosage: string
    frequency: string
    startDate: Date | string
    endDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
    medication: MedicationDatabaseLinkCreateNestedOneWithoutMedicationRecordInput
    client: UserCreateNestedOneWithoutClientMedicationsInput
    user: UserCreateNestedOneWithoutCareWorkerMedicationsInput
    User: UserCreateNestedOneWithoutMedicationRecordsInput
  }

  export type MedicationRecordUncheckedCreateWithoutAdministrationRecordsInput = {
    id?: string
    medicationId: string
    clientId: string
    userId: string
    dosage: string
    frequency: string
    startDate: Date | string
    endDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
  }

  export type MedicationRecordCreateOrConnectWithoutAdministrationRecordsInput = {
    where: MedicationRecordWhereUniqueInput
    create: XOR<MedicationRecordCreateWithoutAdministrationRecordsInput, MedicationRecordUncheckedCreateWithoutAdministrationRecordsInput>
  }

  export type UserCreateWithoutMedicationAdministrationsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutMedicationAdministrationsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutMedicationAdministrationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMedicationAdministrationsInput, UserUncheckedCreateWithoutMedicationAdministrationsInput>
  }

  export type ReportCreateWithoutMedicationAdministrationsInput = {
    id?: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    tasksCompleted?: ReportTaskCreateNestedManyWithoutReportInput
    alerts?: ReportAlertCreateNestedManyWithoutReportInput
    bodyMapObservations?: BodyMapObservationCreateNestedManyWithoutReportInput
    editHistory?: ReportEditCreateNestedManyWithoutReportInput
    client: UserCreateNestedOneWithoutClientReportsInput
    caregiver: UserCreateNestedOneWithoutCareReportsInput
    agency: AgencyCreateNestedOneWithoutReportInput
  }

  export type ReportUncheckedCreateWithoutMedicationAdministrationsInput = {
    id?: string
    clientId: string
    agencyId: string
    userId: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
    tasksCompleted?: ReportTaskUncheckedCreateNestedManyWithoutReportInput
    alerts?: ReportAlertUncheckedCreateNestedManyWithoutReportInput
    bodyMapObservations?: BodyMapObservationUncheckedCreateNestedManyWithoutReportInput
    editHistory?: ReportEditUncheckedCreateNestedManyWithoutReportInput
  }

  export type ReportCreateOrConnectWithoutMedicationAdministrationsInput = {
    where: ReportWhereUniqueInput
    create: XOR<ReportCreateWithoutMedicationAdministrationsInput, ReportUncheckedCreateWithoutMedicationAdministrationsInput>
  }

  export type MedicationRecordUpsertWithoutAdministrationRecordsInput = {
    update: XOR<MedicationRecordUpdateWithoutAdministrationRecordsInput, MedicationRecordUncheckedUpdateWithoutAdministrationRecordsInput>
    create: XOR<MedicationRecordCreateWithoutAdministrationRecordsInput, MedicationRecordUncheckedCreateWithoutAdministrationRecordsInput>
    where?: MedicationRecordWhereInput
  }

  export type MedicationRecordUpdateToOneWithWhereWithoutAdministrationRecordsInput = {
    where?: MedicationRecordWhereInput
    data: XOR<MedicationRecordUpdateWithoutAdministrationRecordsInput, MedicationRecordUncheckedUpdateWithoutAdministrationRecordsInput>
  }

  export type MedicationRecordUpdateWithoutAdministrationRecordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
    medication?: MedicationDatabaseLinkUpdateOneRequiredWithoutMedicationRecordNestedInput
    client?: UserUpdateOneRequiredWithoutClientMedicationsNestedInput
    user?: UserUpdateOneRequiredWithoutCareWorkerMedicationsNestedInput
    User?: UserUpdateOneRequiredWithoutMedicationRecordsNestedInput
  }

  export type MedicationRecordUncheckedUpdateWithoutAdministrationRecordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    medicationId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UserUpsertWithoutMedicationAdministrationsInput = {
    update: XOR<UserUpdateWithoutMedicationAdministrationsInput, UserUncheckedUpdateWithoutMedicationAdministrationsInput>
    create: XOR<UserCreateWithoutMedicationAdministrationsInput, UserUncheckedCreateWithoutMedicationAdministrationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMedicationAdministrationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMedicationAdministrationsInput, UserUncheckedUpdateWithoutMedicationAdministrationsInput>
  }

  export type UserUpdateWithoutMedicationAdministrationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutMedicationAdministrationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type ReportUpsertWithoutMedicationAdministrationsInput = {
    update: XOR<ReportUpdateWithoutMedicationAdministrationsInput, ReportUncheckedUpdateWithoutMedicationAdministrationsInput>
    create: XOR<ReportCreateWithoutMedicationAdministrationsInput, ReportUncheckedCreateWithoutMedicationAdministrationsInput>
    where?: ReportWhereInput
  }

  export type ReportUpdateToOneWithWhereWithoutMedicationAdministrationsInput = {
    where?: ReportWhereInput
    data: XOR<ReportUpdateWithoutMedicationAdministrationsInput, ReportUncheckedUpdateWithoutMedicationAdministrationsInput>
  }

  export type ReportUpdateWithoutMedicationAdministrationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    tasksCompleted?: ReportTaskUpdateManyWithoutReportNestedInput
    alerts?: ReportAlertUpdateManyWithoutReportNestedInput
    bodyMapObservations?: BodyMapObservationUpdateManyWithoutReportNestedInput
    editHistory?: ReportEditUpdateManyWithoutReportNestedInput
    client?: UserUpdateOneRequiredWithoutClientReportsNestedInput
    caregiver?: UserUpdateOneRequiredWithoutCareReportsNestedInput
    agency?: AgencyUpdateOneRequiredWithoutReportNestedInput
  }

  export type ReportUncheckedUpdateWithoutMedicationAdministrationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    tasksCompleted?: ReportTaskUncheckedUpdateManyWithoutReportNestedInput
    alerts?: ReportAlertUncheckedUpdateManyWithoutReportNestedInput
    bodyMapObservations?: BodyMapObservationUncheckedUpdateManyWithoutReportNestedInput
    editHistory?: ReportEditUncheckedUpdateManyWithoutReportNestedInput
  }

  export type AgencyCreateWithoutInvoicesInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutAgencyInput
    documents?: DocumentCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryCreateNestedManyWithoutAgencyInput
    Report?: ReportCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutInvoicesInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleUncheckedCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutAgencyInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkUncheckedCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeUncheckedCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryUncheckedCreateNestedManyWithoutAgencyInput
    Report?: ReportUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutInvoicesInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutInvoicesInput, AgencyUncheckedCreateWithoutInvoicesInput>
  }

  export type UserCreateWithoutInvoiceInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutInvoiceInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutInvoiceInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInvoiceInput, UserUncheckedCreateWithoutInvoiceInput>
  }

  export type AgencyUpsertWithoutInvoicesInput = {
    update: XOR<AgencyUpdateWithoutInvoicesInput, AgencyUncheckedUpdateWithoutInvoicesInput>
    create: XOR<AgencyCreateWithoutInvoicesInput, AgencyUncheckedCreateWithoutInvoicesInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutInvoicesInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutInvoicesInput, AgencyUncheckedUpdateWithoutInvoicesInput>
  }

  export type AgencyUpdateWithoutInvoicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUpdateManyWithoutAgencyNestedInput
    Report?: ReportUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutInvoicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUncheckedUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUncheckedUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUncheckedUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUncheckedUpdateManyWithoutAgencyNestedInput
    Report?: ReportUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type UserUpsertWithoutInvoiceInput = {
    update: XOR<UserUpdateWithoutInvoiceInput, UserUncheckedUpdateWithoutInvoiceInput>
    create: XOR<UserCreateWithoutInvoiceInput, UserUncheckedCreateWithoutInvoiceInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutInvoiceInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutInvoiceInput, UserUncheckedUpdateWithoutInvoiceInput>
  }

  export type UserUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type AgencyCreateWithoutMileageRecordsInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceCreateNestedManyWithoutAgencyInput
    documents?: DocumentCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryCreateNestedManyWithoutAgencyInput
    Report?: ReportCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutMileageRecordsInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleUncheckedCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutAgencyInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkUncheckedCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeUncheckedCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryUncheckedCreateNestedManyWithoutAgencyInput
    Report?: ReportUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutMileageRecordsInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutMileageRecordsInput, AgencyUncheckedCreateWithoutMileageRecordsInput>
  }

  export type UserCreateWithoutClientMileageInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutClientMileageInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutClientMileageInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutClientMileageInput, UserUncheckedCreateWithoutClientMileageInput>
  }

  export type UserCreateWithoutCareWorkerMileageInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutCareWorkerMileageInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutCareWorkerMileageInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCareWorkerMileageInput, UserUncheckedCreateWithoutCareWorkerMileageInput>
  }

  export type UserCreateWithoutMileageRecordsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutMileageRecordsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutMileageRecordsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMileageRecordsInput, UserUncheckedCreateWithoutMileageRecordsInput>
  }

  export type AgencyUpsertWithoutMileageRecordsInput = {
    update: XOR<AgencyUpdateWithoutMileageRecordsInput, AgencyUncheckedUpdateWithoutMileageRecordsInput>
    create: XOR<AgencyCreateWithoutMileageRecordsInput, AgencyUncheckedCreateWithoutMileageRecordsInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutMileageRecordsInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutMileageRecordsInput, AgencyUncheckedUpdateWithoutMileageRecordsInput>
  }

  export type AgencyUpdateWithoutMileageRecordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUpdateManyWithoutAgencyNestedInput
    Report?: ReportUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutMileageRecordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUncheckedUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUncheckedUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUncheckedUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUncheckedUpdateManyWithoutAgencyNestedInput
    Report?: ReportUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type UserUpsertWithoutClientMileageInput = {
    update: XOR<UserUpdateWithoutClientMileageInput, UserUncheckedUpdateWithoutClientMileageInput>
    create: XOR<UserCreateWithoutClientMileageInput, UserUncheckedCreateWithoutClientMileageInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutClientMileageInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutClientMileageInput, UserUncheckedUpdateWithoutClientMileageInput>
  }

  export type UserUpdateWithoutClientMileageInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutClientMileageInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserUpsertWithoutCareWorkerMileageInput = {
    update: XOR<UserUpdateWithoutCareWorkerMileageInput, UserUncheckedUpdateWithoutCareWorkerMileageInput>
    create: XOR<UserCreateWithoutCareWorkerMileageInput, UserUncheckedCreateWithoutCareWorkerMileageInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCareWorkerMileageInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCareWorkerMileageInput, UserUncheckedUpdateWithoutCareWorkerMileageInput>
  }

  export type UserUpdateWithoutCareWorkerMileageInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutCareWorkerMileageInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserUpsertWithoutMileageRecordsInput = {
    update: XOR<UserUpdateWithoutMileageRecordsInput, UserUncheckedUpdateWithoutMileageRecordsInput>
    create: XOR<UserCreateWithoutMileageRecordsInput, UserUncheckedCreateWithoutMileageRecordsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMileageRecordsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMileageRecordsInput, UserUncheckedUpdateWithoutMileageRecordsInput>
  }

  export type UserUpdateWithoutMileageRecordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutMileageRecordsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserCreateWithoutDocumentsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutDocumentsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutDocumentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDocumentsInput, UserUncheckedCreateWithoutDocumentsInput>
  }

  export type UserCreateWithoutDocumentInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutDocumentInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutDocumentInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDocumentInput, UserUncheckedCreateWithoutDocumentInput>
  }

  export type AgencyCreateWithoutDocumentsInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryCreateNestedManyWithoutAgencyInput
    Report?: ReportCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutDocumentsInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleUncheckedCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkUncheckedCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeUncheckedCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryUncheckedCreateNestedManyWithoutAgencyInput
    Report?: ReportUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutDocumentsInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutDocumentsInput, AgencyUncheckedCreateWithoutDocumentsInput>
  }

  export type UserUpsertWithoutDocumentsInput = {
    update: XOR<UserUpdateWithoutDocumentsInput, UserUncheckedUpdateWithoutDocumentsInput>
    create: XOR<UserCreateWithoutDocumentsInput, UserUncheckedCreateWithoutDocumentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDocumentsInput, UserUncheckedUpdateWithoutDocumentsInput>
  }

  export type UserUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserUpsertWithoutDocumentInput = {
    update: XOR<UserUpdateWithoutDocumentInput, UserUncheckedUpdateWithoutDocumentInput>
    create: XOR<UserCreateWithoutDocumentInput, UserUncheckedCreateWithoutDocumentInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDocumentInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDocumentInput, UserUncheckedUpdateWithoutDocumentInput>
  }

  export type UserUpdateWithoutDocumentInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutDocumentInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type AgencyUpsertWithoutDocumentsInput = {
    update: XOR<AgencyUpdateWithoutDocumentsInput, AgencyUncheckedUpdateWithoutDocumentsInput>
    create: XOR<AgencyCreateWithoutDocumentsInput, AgencyUncheckedCreateWithoutDocumentsInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutDocumentsInput, AgencyUncheckedUpdateWithoutDocumentsInput>
  }

  export type AgencyUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUpdateManyWithoutAgencyNestedInput
    Report?: ReportUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUncheckedUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUncheckedUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUncheckedUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUncheckedUpdateManyWithoutAgencyNestedInput
    Report?: ReportUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type UserCreateWithoutProfileInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutProfileInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutProfileInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
  }

  export type UserUpsertWithoutProfileInput = {
    update: XOR<UserUpdateWithoutProfileInput, UserUncheckedUpdateWithoutProfileInput>
    create: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProfileInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProfileInput, UserUncheckedUpdateWithoutProfileInput>
  }

  export type UserUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserCreateWithoutIncidentReportsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutIncidentReportsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutIncidentReportsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutIncidentReportsInput, UserUncheckedCreateWithoutIncidentReportsInput>
  }

  export type AgencyCreateWithoutIncidentReportsInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutAgencyInput
    documents?: DocumentCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryCreateNestedManyWithoutAgencyInput
    Report?: ReportCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutIncidentReportsInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleUncheckedCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutAgencyInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkUncheckedCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeUncheckedCreateNestedManyWithoutAgencyInput
    riskCategories?: RiskCategoryUncheckedCreateNestedManyWithoutAgencyInput
    Report?: ReportUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutIncidentReportsInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutIncidentReportsInput, AgencyUncheckedCreateWithoutIncidentReportsInput>
  }

  export type UserUpsertWithoutIncidentReportsInput = {
    update: XOR<UserUpdateWithoutIncidentReportsInput, UserUncheckedUpdateWithoutIncidentReportsInput>
    create: XOR<UserCreateWithoutIncidentReportsInput, UserUncheckedCreateWithoutIncidentReportsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutIncidentReportsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutIncidentReportsInput, UserUncheckedUpdateWithoutIncidentReportsInput>
  }

  export type UserUpdateWithoutIncidentReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutIncidentReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type AgencyUpsertWithoutIncidentReportsInput = {
    update: XOR<AgencyUpdateWithoutIncidentReportsInput, AgencyUncheckedUpdateWithoutIncidentReportsInput>
    create: XOR<AgencyCreateWithoutIncidentReportsInput, AgencyUncheckedCreateWithoutIncidentReportsInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutIncidentReportsInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutIncidentReportsInput, AgencyUncheckedUpdateWithoutIncidentReportsInput>
  }

  export type AgencyUpdateWithoutIncidentReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUpdateManyWithoutAgencyNestedInput
    Report?: ReportUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutIncidentReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUncheckedUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUncheckedUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUncheckedUpdateManyWithoutAgencyNestedInput
    riskCategories?: RiskCategoryUncheckedUpdateManyWithoutAgencyNestedInput
    Report?: ReportUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type UserCreateWithoutSentMessagesInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutSentMessagesInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutSentMessagesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
  }

  export type UserCreateWithoutReceivedMessagesInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutReceivedMessagesInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutReceivedMessagesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
  }

  export type UserUpsertWithoutSentMessagesInput = {
    update: XOR<UserUpdateWithoutSentMessagesInput, UserUncheckedUpdateWithoutSentMessagesInput>
    create: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSentMessagesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSentMessagesInput, UserUncheckedUpdateWithoutSentMessagesInput>
  }

  export type UserUpdateWithoutSentMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutSentMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserUpsertWithoutReceivedMessagesInput = {
    update: XOR<UserUpdateWithoutReceivedMessagesInput, UserUncheckedUpdateWithoutReceivedMessagesInput>
    create: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReceivedMessagesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReceivedMessagesInput, UserUncheckedUpdateWithoutReceivedMessagesInput>
  }

  export type UserUpdateWithoutReceivedMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutReceivedMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserCreateWithoutKeyContactsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutKeyContactsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutKeyContactsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutKeyContactsInput, UserUncheckedCreateWithoutKeyContactsInput>
  }

  export type UserUpsertWithoutKeyContactsInput = {
    update: XOR<UserUpdateWithoutKeyContactsInput, UserUncheckedUpdateWithoutKeyContactsInput>
    create: XOR<UserCreateWithoutKeyContactsInput, UserUncheckedCreateWithoutKeyContactsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutKeyContactsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutKeyContactsInput, UserUncheckedUpdateWithoutKeyContactsInput>
  }

  export type UserUpdateWithoutKeyContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutKeyContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserCreateWithoutCareOutcomesInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutCareOutcomesInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutCareOutcomesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCareOutcomesInput, UserUncheckedCreateWithoutCareOutcomesInput>
  }

  export type UserUpsertWithoutCareOutcomesInput = {
    update: XOR<UserUpdateWithoutCareOutcomesInput, UserUncheckedUpdateWithoutCareOutcomesInput>
    create: XOR<UserCreateWithoutCareOutcomesInput, UserUncheckedCreateWithoutCareOutcomesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCareOutcomesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCareOutcomesInput, UserUncheckedUpdateWithoutCareOutcomesInput>
  }

  export type UserUpdateWithoutCareOutcomesInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutCareOutcomesInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserCreateWithoutCommunicationLogsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutCommunicationLogsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutCommunicationLogsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCommunicationLogsInput, UserUncheckedCreateWithoutCommunicationLogsInput>
  }

  export type UserUpsertWithoutCommunicationLogsInput = {
    update: XOR<UserUpdateWithoutCommunicationLogsInput, UserUncheckedUpdateWithoutCommunicationLogsInput>
    create: XOR<UserCreateWithoutCommunicationLogsInput, UserUncheckedCreateWithoutCommunicationLogsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCommunicationLogsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCommunicationLogsInput, UserUncheckedUpdateWithoutCommunicationLogsInput>
  }

  export type UserUpdateWithoutCommunicationLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutCommunicationLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type AgencyCreateWithoutRiskCategoriesInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutAgencyInput
    documents?: DocumentCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeCreateNestedManyWithoutAgencyInput
    Report?: ReportCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutRiskCategoriesInput = {
    id?: string
    name: string
    isActive?: boolean
    isSuspended?: boolean
    hasScheduleV2?: boolean
    hasEMAR?: boolean
    hasFinance?: boolean
    isWeek1And2ScheduleEnabled?: boolean
    hasPoliciesAndProcedures?: boolean
    isTestAccount?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutAgencyInput
    schedules?: ScheduleUncheckedCreateNestedManyWithoutAgencyInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutAgencyInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutAgencyInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAgencyInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutAgencyInput
    medications?: MedicationDatabaseLinkUncheckedCreateNestedManyWithoutAgencyInput
    visitTypes?: VisitTypeUncheckedCreateNestedManyWithoutAgencyInput
    Report?: ReportUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutRiskCategoriesInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutRiskCategoriesInput, AgencyUncheckedCreateWithoutRiskCategoriesInput>
  }

  export type RiskAssessmentCreateWithoutRiskCategoryInput = {
    id?: string
    description: string
    affectedParties: string
    mitigationStrategy: string
    likelihood: number
    severity: number
    riskScore: number
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutRiskAssessmentsInput
  }

  export type RiskAssessmentUncheckedCreateWithoutRiskCategoryInput = {
    id?: string
    clientId: string
    description: string
    affectedParties: string
    mitigationStrategy: string
    likelihood: number
    severity: number
    riskScore: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RiskAssessmentCreateOrConnectWithoutRiskCategoryInput = {
    where: RiskAssessmentWhereUniqueInput
    create: XOR<RiskAssessmentCreateWithoutRiskCategoryInput, RiskAssessmentUncheckedCreateWithoutRiskCategoryInput>
  }

  export type RiskAssessmentCreateManyRiskCategoryInputEnvelope = {
    data: RiskAssessmentCreateManyRiskCategoryInput | RiskAssessmentCreateManyRiskCategoryInput[]
    skipDuplicates?: boolean
  }

  export type AgencyUpsertWithoutRiskCategoriesInput = {
    update: XOR<AgencyUpdateWithoutRiskCategoriesInput, AgencyUncheckedUpdateWithoutRiskCategoriesInput>
    create: XOR<AgencyCreateWithoutRiskCategoriesInput, AgencyUncheckedCreateWithoutRiskCategoriesInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutRiskCategoriesInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutRiskCategoriesInput, AgencyUncheckedUpdateWithoutRiskCategoriesInput>
  }

  export type AgencyUpdateWithoutRiskCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUpdateManyWithoutAgencyNestedInput
    Report?: ReportUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutRiskCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    hasScheduleV2?: BoolFieldUpdateOperationsInput | boolean
    hasEMAR?: BoolFieldUpdateOperationsInput | boolean
    hasFinance?: BoolFieldUpdateOperationsInput | boolean
    isWeek1And2ScheduleEnabled?: BoolFieldUpdateOperationsInput | boolean
    hasPoliciesAndProcedures?: BoolFieldUpdateOperationsInput | boolean
    isTestAccount?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutAgencyNestedInput
    schedules?: ScheduleUncheckedUpdateManyWithoutAgencyNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutAgencyNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutAgencyNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAgencyNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutAgencyNestedInput
    medications?: MedicationDatabaseLinkUncheckedUpdateManyWithoutAgencyNestedInput
    visitTypes?: VisitTypeUncheckedUpdateManyWithoutAgencyNestedInput
    Report?: ReportUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type RiskAssessmentUpsertWithWhereUniqueWithoutRiskCategoryInput = {
    where: RiskAssessmentWhereUniqueInput
    update: XOR<RiskAssessmentUpdateWithoutRiskCategoryInput, RiskAssessmentUncheckedUpdateWithoutRiskCategoryInput>
    create: XOR<RiskAssessmentCreateWithoutRiskCategoryInput, RiskAssessmentUncheckedCreateWithoutRiskCategoryInput>
  }

  export type RiskAssessmentUpdateWithWhereUniqueWithoutRiskCategoryInput = {
    where: RiskAssessmentWhereUniqueInput
    data: XOR<RiskAssessmentUpdateWithoutRiskCategoryInput, RiskAssessmentUncheckedUpdateWithoutRiskCategoryInput>
  }

  export type RiskAssessmentUpdateManyWithWhereWithoutRiskCategoryInput = {
    where: RiskAssessmentScalarWhereInput
    data: XOR<RiskAssessmentUpdateManyMutationInput, RiskAssessmentUncheckedUpdateManyWithoutRiskCategoryInput>
  }

  export type UserCreateWithoutRiskAssessmentsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutRiskAssessmentsInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutRiskAssessmentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRiskAssessmentsInput, UserUncheckedCreateWithoutRiskAssessmentsInput>
  }

  export type RiskCategoryCreateWithoutRiskAssessmentsInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    agency: AgencyCreateNestedOneWithoutRiskCategoriesInput
  }

  export type RiskCategoryUncheckedCreateWithoutRiskAssessmentsInput = {
    id?: string
    agencyId: string
    name: string
    description?: string | null
    createdAt?: Date | string
  }

  export type RiskCategoryCreateOrConnectWithoutRiskAssessmentsInput = {
    where: RiskCategoryWhereUniqueInput
    create: XOR<RiskCategoryCreateWithoutRiskAssessmentsInput, RiskCategoryUncheckedCreateWithoutRiskAssessmentsInput>
  }

  export type UserUpsertWithoutRiskAssessmentsInput = {
    update: XOR<UserUpdateWithoutRiskAssessmentsInput, UserUncheckedUpdateWithoutRiskAssessmentsInput>
    create: XOR<UserCreateWithoutRiskAssessmentsInput, UserUncheckedCreateWithoutRiskAssessmentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRiskAssessmentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRiskAssessmentsInput, UserUncheckedUpdateWithoutRiskAssessmentsInput>
  }

  export type UserUpdateWithoutRiskAssessmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutRiskAssessmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type RiskCategoryUpsertWithoutRiskAssessmentsInput = {
    update: XOR<RiskCategoryUpdateWithoutRiskAssessmentsInput, RiskCategoryUncheckedUpdateWithoutRiskAssessmentsInput>
    create: XOR<RiskCategoryCreateWithoutRiskAssessmentsInput, RiskCategoryUncheckedCreateWithoutRiskAssessmentsInput>
    where?: RiskCategoryWhereInput
  }

  export type RiskCategoryUpdateToOneWithWhereWithoutRiskAssessmentsInput = {
    where?: RiskCategoryWhereInput
    data: XOR<RiskCategoryUpdateWithoutRiskAssessmentsInput, RiskCategoryUncheckedUpdateWithoutRiskAssessmentsInput>
  }

  export type RiskCategoryUpdateWithoutRiskAssessmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: AgencyUpdateOneRequiredWithoutRiskCategoriesNestedInput
  }

  export type RiskCategoryUncheckedUpdateWithoutRiskAssessmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateWithoutRemindersInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutRemindersInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutRemindersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRemindersInput, UserUncheckedCreateWithoutRemindersInput>
  }

  export type UserUpsertWithoutRemindersInput = {
    update: XOR<UserUpdateWithoutRemindersInput, UserUncheckedUpdateWithoutRemindersInput>
    create: XOR<UserCreateWithoutRemindersInput, UserUncheckedCreateWithoutRemindersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRemindersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRemindersInput, UserUncheckedUpdateWithoutRemindersInput>
  }

  export type UserUpdateWithoutRemindersInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutRemindersInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserCreateWithoutNotificationInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationCreateNestedManyWithoutInviterInput
    agency?: AgencyCreateNestedOneWithoutUsersInput
    invitedBy?: UserCreateNestedOneWithoutInvitedUsersInput
    invitedUsers?: UserCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleCreateNestedManyWithoutClientInput
    careReports?: ReportCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordCreateNestedManyWithoutClientInput
    profile?: ProfileCreateNestedOneWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordCreateNestedManyWithoutUserInput
    documents?: DocumentCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeCreateNestedManyWithoutClientInput
    Invoice?: InvoiceCreateNestedManyWithoutClientInput
    Document?: DocumentCreateNestedManyWithoutClientInput
    riskAssessments?: RiskAssessmentCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogCreateNestedManyWithoutClientInput
    reminders?: ReminderCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditCreateNestedManyWithoutEditorInput
  }

  export type UserUncheckedCreateWithoutNotificationInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
    sentInvitations?: InvitationUncheckedCreateNestedManyWithoutInviterInput
    invitedUsers?: UserUncheckedCreateNestedManyWithoutInvitedByInput
    communicationPreference?: CommunicationPreferenceUncheckedCreateNestedOneWithoutUserInput
    careAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutUserInput
    clientAssignments?: ClientCareAssignmentUncheckedCreateNestedManyWithoutClientInput
    careWorkerSchedules?: ScheduleUncheckedCreateNestedManyWithoutUserInput
    clientSchedules?: ScheduleUncheckedCreateNestedManyWithoutClientInput
    careReports?: ReportUncheckedCreateNestedManyWithoutCaregiverInput
    clientReports?: ReportUncheckedCreateNestedManyWithoutClientInput
    careWorkerMedications?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    clientMedications?: MedicationRecordUncheckedCreateNestedManyWithoutClientInput
    careWorkerMileage?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    clientMileage?: MileageRecordUncheckedCreateNestedManyWithoutClientInput
    profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    medicationRecords?: MedicationRecordUncheckedCreateNestedManyWithoutUserInput
    mileageRecords?: MileageRecordUncheckedCreateNestedManyWithoutUserInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUserInput
    incidentReports?: IncidentReportUncheckedCreateNestedManyWithoutReporterInput
    keyContacts?: KeyContactUncheckedCreateNestedManyWithoutClientInput
    careOutcomes?: CareOutcomeUncheckedCreateNestedManyWithoutClientInput
    Invoice?: InvoiceUncheckedCreateNestedManyWithoutClientInput
    Document?: DocumentUncheckedCreateNestedManyWithoutClientInput
    riskAssessments?: RiskAssessmentUncheckedCreateNestedManyWithoutClientInput
    familyAccess?: FamilyAccessUncheckedCreateNestedManyWithoutClientInput
    communicationLogs?: CommunicationLogUncheckedCreateNestedManyWithoutClientInput
    reminders?: ReminderUncheckedCreateNestedManyWithoutClientInput
    medicationAdministrations?: MedicationAdministrationUncheckedCreateNestedManyWithoutAdministeredByInput
    reportEdits?: ReportEditUncheckedCreateNestedManyWithoutEditorInput
  }

  export type UserCreateOrConnectWithoutNotificationInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotificationInput, UserUncheckedCreateWithoutNotificationInput>
  }

  export type UserUpsertWithoutNotificationInput = {
    update: XOR<UserUpdateWithoutNotificationInput, UserUncheckedUpdateWithoutNotificationInput>
    create: XOR<UserCreateWithoutNotificationInput, UserUncheckedCreateWithoutNotificationInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotificationInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotificationInput, UserUncheckedUpdateWithoutNotificationInput>
  }

  export type UserUpdateWithoutNotificationInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutNotificationInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserCreateManyAgencyInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    invitedById?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
  }

  export type ScheduleCreateManyAgencyInput = {
    id?: string
    clientId: string
    userId: string
    date: Date | string
    startTime: string
    endTime: string
    status?: string
    type?: $Enums.ScheduleType
    notes?: string | null
    chargeRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    visitTypeId?: string | null
  }

  export type InvoiceCreateManyAgencyInput = {
    id?: string
    clientId?: string | null
    amount: number
    description: string
    issuedAt?: Date | string
    dueDate: Date | string
    status: $Enums.InvoiceStatus
  }

  export type MileageRecordCreateManyAgencyInput = {
    id?: string
    clientId: string
    userId: string
    date: Date | string
    startMileage: number
    endMileage: number
    totalMiles: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DocumentCreateManyAgencyInput = {
    id?: string
    title: string
    fileUrl: string
    uploadedAt?: Date | string
    userId?: string | null
    clientId?: string | null
  }

  export type IncidentReportCreateManyAgencyInput = {
    id?: string
    reporterId: string
    description: string
    severity: $Enums.SeverityLevel
    reportedAt?: Date | string
  }

  export type MedicationDatabaseLinkCreateManyAgencyInput = {
    id?: string
    name: string
    isSpecialist?: boolean
    url: string
    source: string
  }

  export type VisitTypeCreateManyAgencyInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RiskCategoryCreateManyAgencyInput = {
    id?: string
    name: string
    description?: string | null
    createdAt?: Date | string
  }

  export type ReportCreateManyAgencyInput = {
    id?: string
    clientId: string
    userId: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
  }

  export type UserUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    invitedBy?: UserUpdateOneWithoutInvitedUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invitedById?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ScheduleUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    type?: EnumScheduleTypeFieldUpdateOperationsInput | $Enums.ScheduleType
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visitType?: VisitTypeUpdateOneWithoutSchedulesNestedInput
    client?: UserUpdateOneRequiredWithoutClientSchedulesNestedInput
    user?: UserUpdateOneRequiredWithoutCareWorkerSchedulesNestedInput
  }

  export type ScheduleUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    type?: EnumScheduleTypeFieldUpdateOperationsInput | $Enums.ScheduleType
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visitTypeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ScheduleUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    type?: EnumScheduleTypeFieldUpdateOperationsInput | $Enums.ScheduleType
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visitTypeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvoiceUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    client?: UserUpdateOneWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: FloatFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
  }

  export type InvoiceUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: FloatFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
  }

  export type MileageRecordUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startMileage?: FloatFieldUpdateOperationsInput | number
    endMileage?: FloatFieldUpdateOperationsInput | number
    totalMiles?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutClientMileageNestedInput
    user?: UserUpdateOneRequiredWithoutCareWorkerMileageNestedInput
    User?: UserUpdateOneRequiredWithoutMileageRecordsNestedInput
  }

  export type MileageRecordUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startMileage?: FloatFieldUpdateOperationsInput | number
    endMileage?: FloatFieldUpdateOperationsInput | number
    totalMiles?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MileageRecordUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startMileage?: FloatFieldUpdateOperationsInput | number
    endMileage?: FloatFieldUpdateOperationsInput | number
    totalMiles?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DocumentUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutDocumentsNestedInput
    client?: UserUpdateOneWithoutDocumentNestedInput
  }

  export type DocumentUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DocumentUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IncidentReportUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    severity?: EnumSeverityLevelFieldUpdateOperationsInput | $Enums.SeverityLevel
    reportedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reporter?: UserUpdateOneRequiredWithoutIncidentReportsNestedInput
  }

  export type IncidentReportUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    reporterId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    severity?: EnumSeverityLevelFieldUpdateOperationsInput | $Enums.SeverityLevel
    reportedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IncidentReportUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    reporterId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    severity?: EnumSeverityLevelFieldUpdateOperationsInput | $Enums.SeverityLevel
    reportedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MedicationDatabaseLinkUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isSpecialist?: BoolFieldUpdateOperationsInput | boolean
    url?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    MedicationRecord?: MedicationRecordUpdateManyWithoutMedicationNestedInput
  }

  export type MedicationDatabaseLinkUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isSpecialist?: BoolFieldUpdateOperationsInput | boolean
    url?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    MedicationRecord?: MedicationRecordUncheckedUpdateManyWithoutMedicationNestedInput
  }

  export type MedicationDatabaseLinkUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    isSpecialist?: BoolFieldUpdateOperationsInput | boolean
    url?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
  }

  export type VisitTypeUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    schedules?: ScheduleUpdateManyWithoutVisitTypeNestedInput
  }

  export type VisitTypeUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    schedules?: ScheduleUncheckedUpdateManyWithoutVisitTypeNestedInput
  }

  export type VisitTypeUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiskCategoryUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    riskAssessments?: RiskAssessmentUpdateManyWithoutRiskCategoryNestedInput
  }

  export type RiskCategoryUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutRiskCategoryNestedInput
  }

  export type RiskCategoryUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReportUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    tasksCompleted?: ReportTaskUpdateManyWithoutReportNestedInput
    alerts?: ReportAlertUpdateManyWithoutReportNestedInput
    bodyMapObservations?: BodyMapObservationUpdateManyWithoutReportNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutReportNestedInput
    editHistory?: ReportEditUpdateManyWithoutReportNestedInput
    client?: UserUpdateOneRequiredWithoutClientReportsNestedInput
    caregiver?: UserUpdateOneRequiredWithoutCareReportsNestedInput
  }

  export type ReportUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    tasksCompleted?: ReportTaskUncheckedUpdateManyWithoutReportNestedInput
    alerts?: ReportAlertUncheckedUpdateManyWithoutReportNestedInput
    bodyMapObservations?: BodyMapObservationUncheckedUpdateManyWithoutReportNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutReportNestedInput
    editHistory?: ReportEditUncheckedUpdateManyWithoutReportNestedInput
  }

  export type ReportUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvitationCreateManyInviterInput = {
    id?: string
    email: string
    token: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    expiresAt: Date | string
    status?: $Enums.InvitationStatus
    createdAt?: Date | string
  }

  export type UserCreateManyInvitedByInput = {
    id?: string
    cognitoId: string
    email: string
    firstName: string
    lastName: string
    role: $Enums.Role
    subRole?: $Enums.SubRole | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    title?: string | null
    addressLine1?: string | null
    addressLine2?: string | null
    townOrCity?: string | null
    county?: string | null
    postalCode?: string | null
    propertyAccess?: string | null
    phoneNumber?: string | null
    nhsNumber?: string | null
    dnraOrder?: boolean | null
    chargeRate?: number | null
    mobility?: string | null
    likesDislikes?: string | null
    dateOfBirth?: Date | string | null
    languages?: string | null
    allergies?: string | null
    interests?: string | null
    history?: string | null
    preferredName?: string | null
  }

  export type ClientCareAssignmentCreateManyUserInput = {
    id?: string
    clientId: string
    isDecisionMaker?: boolean
    assignedAt?: Date | string
  }

  export type ClientCareAssignmentCreateManyClientInput = {
    id?: string
    userId: string
    isDecisionMaker?: boolean
    assignedAt?: Date | string
  }

  export type ScheduleCreateManyUserInput = {
    id?: string
    agencyId: string
    clientId: string
    date: Date | string
    startTime: string
    endTime: string
    status?: string
    type?: $Enums.ScheduleType
    notes?: string | null
    chargeRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    visitTypeId?: string | null
  }

  export type ScheduleCreateManyClientInput = {
    id?: string
    agencyId: string
    userId: string
    date: Date | string
    startTime: string
    endTime: string
    status?: string
    type?: $Enums.ScheduleType
    notes?: string | null
    chargeRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    visitTypeId?: string | null
  }

  export type ReportCreateManyCaregiverInput = {
    id?: string
    clientId: string
    agencyId: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
  }

  export type ReportCreateManyClientInput = {
    id?: string
    agencyId: string
    userId: string
    condition: string
    summary: string
    checkInTime: Date | string
    checkOutTime?: Date | string | null
    createdAt?: Date | string
    checkInDistance?: number | null
    checkOutDistance?: number | null
    checkInLocation?: string | null
    checkOutLocation?: string | null
    hasSignature?: boolean
    signatureImageUrl?: string | null
    status?: $Enums.ReportStatus
    lastEditedAt?: Date | string | null
    lastEditedBy?: string | null
    lastEditReason?: string | null
  }

  export type MedicationRecordCreateManyUserInput = {
    id?: string
    medicationId: string
    clientId: string
    dosage: string
    frequency: string
    startDate: Date | string
    endDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
  }

  export type MedicationRecordCreateManyClientInput = {
    id?: string
    medicationId: string
    userId: string
    dosage: string
    frequency: string
    startDate: Date | string
    endDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
  }

  export type MileageRecordCreateManyUserInput = {
    id?: string
    agencyId: string
    clientId: string
    date: Date | string
    startMileage: number
    endMileage: number
    totalMiles: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MileageRecordCreateManyClientInput = {
    id?: string
    agencyId: string
    userId: string
    date: Date | string
    startMileage: number
    endMileage: number
    totalMiles: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MessageCreateManySenderInput = {
    id?: string
    receiverId: string
    content: string
    sentAt?: Date | string
  }

  export type MessageCreateManyReceiverInput = {
    id?: string
    senderId: string
    content: string
    sentAt?: Date | string
  }

  export type DocumentCreateManyUserInput = {
    id?: string
    title: string
    fileUrl: string
    uploadedAt?: Date | string
    clientId?: string | null
    agencyId?: string | null
  }

  export type IncidentReportCreateManyReporterInput = {
    id?: string
    agencyId: string
    description: string
    severity: $Enums.SeverityLevel
    reportedAt?: Date | string
  }

  export type KeyContactCreateManyClientInput = {
    id?: string
    name: string
    relation: string
    phone: string
    email?: string | null
  }

  export type CareOutcomeCreateManyClientInput = {
    id?: string
    outcome: string
  }

  export type InvoiceCreateManyClientInput = {
    id?: string
    agencyId: string
    amount: number
    description: string
    issuedAt?: Date | string
    dueDate: Date | string
    status: $Enums.InvoiceStatus
  }

  export type DocumentCreateManyClientInput = {
    id?: string
    title: string
    fileUrl: string
    uploadedAt?: Date | string
    userId?: string | null
    agencyId?: string | null
  }

  export type NotificationCreateManyUserInput = {
    id?: string
    title: string
    message: string
    type: $Enums.NotificationType
    read?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RiskAssessmentCreateManyClientInput = {
    id?: string
    riskCategoryId: string
    description: string
    affectedParties: string
    mitigationStrategy: string
    likelihood: number
    severity: number
    riskScore: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FamilyAccessCreateManyClientInput = {
    id?: string
    name: string
    relation: string
    phone: string
    email?: string | null
  }

  export type CommunicationLogCreateManyClientInput = {
    id?: string
    message: string
    createdAt?: Date | string
  }

  export type ReminderCreateManyClientInput = {
    id?: string
    title: string
    message?: string | null
    dueDate: Date | string
    completed?: boolean
    createdAt?: Date | string
  }

  export type MedicationAdministrationCreateManyAdministeredByInput = {
    id?: string
    medicationRecordId: string
    administeredAt: Date | string
    doseType: $Enums.DoseType
    doseTaken?: boolean
    notes?: string | null
    createdAt?: Date | string
    reportId?: string | null
  }

  export type ReportEditCreateManyEditorInput = {
    id?: string
    reportId: string
    editedAt?: Date | string
    reason: string
    changesJson: string
  }

  export type InvitationUpdateWithoutInviterInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvitationUncheckedUpdateWithoutInviterInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvitationUncheckedUpdateManyWithoutInviterInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpdateWithoutInvitedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUpdateManyWithoutInviterNestedInput
    agency?: AgencyUpdateOneWithoutUsersNestedInput
    invitedUsers?: UserUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUpdateManyWithoutClientNestedInput
    careReports?: ReportUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUpdateManyWithoutClientNestedInput
    profile?: ProfileUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUpdateManyWithoutUserNestedInput
    documents?: DocumentUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUpdateManyWithoutClientNestedInput
    Document?: DocumentUpdateManyWithoutClientNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUpdateManyWithoutClientNestedInput
    reminders?: ReminderUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateWithoutInvitedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
    sentInvitations?: InvitationUncheckedUpdateManyWithoutInviterNestedInput
    invitedUsers?: UserUncheckedUpdateManyWithoutInvitedByNestedInput
    communicationPreference?: CommunicationPreferenceUncheckedUpdateOneWithoutUserNestedInput
    careAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutUserNestedInput
    clientAssignments?: ClientCareAssignmentUncheckedUpdateManyWithoutClientNestedInput
    careWorkerSchedules?: ScheduleUncheckedUpdateManyWithoutUserNestedInput
    clientSchedules?: ScheduleUncheckedUpdateManyWithoutClientNestedInput
    careReports?: ReportUncheckedUpdateManyWithoutCaregiverNestedInput
    clientReports?: ReportUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMedications?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMedications?: MedicationRecordUncheckedUpdateManyWithoutClientNestedInput
    careWorkerMileage?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    clientMileage?: MileageRecordUncheckedUpdateManyWithoutClientNestedInput
    profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    medicationRecords?: MedicationRecordUncheckedUpdateManyWithoutUserNestedInput
    mileageRecords?: MileageRecordUncheckedUpdateManyWithoutUserNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUserNestedInput
    incidentReports?: IncidentReportUncheckedUpdateManyWithoutReporterNestedInput
    keyContacts?: KeyContactUncheckedUpdateManyWithoutClientNestedInput
    careOutcomes?: CareOutcomeUncheckedUpdateManyWithoutClientNestedInput
    Invoice?: InvoiceUncheckedUpdateManyWithoutClientNestedInput
    Document?: DocumentUncheckedUpdateManyWithoutClientNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    riskAssessments?: RiskAssessmentUncheckedUpdateManyWithoutClientNestedInput
    familyAccess?: FamilyAccessUncheckedUpdateManyWithoutClientNestedInput
    communicationLogs?: CommunicationLogUncheckedUpdateManyWithoutClientNestedInput
    reminders?: ReminderUncheckedUpdateManyWithoutClientNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByNestedInput
    reportEdits?: ReportEditUncheckedUpdateManyWithoutEditorNestedInput
  }

  export type UserUncheckedUpdateManyWithoutInvitedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    cognitoId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    subRole?: NullableEnumSubRoleFieldUpdateOperationsInput | $Enums.SubRole | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    townOrCity?: NullableStringFieldUpdateOperationsInput | string | null
    county?: NullableStringFieldUpdateOperationsInput | string | null
    postalCode?: NullableStringFieldUpdateOperationsInput | string | null
    propertyAccess?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    nhsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    dnraOrder?: NullableBoolFieldUpdateOperationsInput | boolean | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    mobility?: NullableStringFieldUpdateOperationsInput | string | null
    likesDislikes?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    allergies?: NullableStringFieldUpdateOperationsInput | string | null
    interests?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    preferredName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClientCareAssignmentUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    isDecisionMaker?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutClientAssignmentsNestedInput
  }

  export type ClientCareAssignmentUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    isDecisionMaker?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientCareAssignmentUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    isDecisionMaker?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientCareAssignmentUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    isDecisionMaker?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCareAssignmentsNestedInput
  }

  export type ClientCareAssignmentUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isDecisionMaker?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientCareAssignmentUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isDecisionMaker?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScheduleUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    type?: EnumScheduleTypeFieldUpdateOperationsInput | $Enums.ScheduleType
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visitType?: VisitTypeUpdateOneWithoutSchedulesNestedInput
    agency?: AgencyUpdateOneRequiredWithoutSchedulesNestedInput
    client?: UserUpdateOneRequiredWithoutClientSchedulesNestedInput
  }

  export type ScheduleUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    type?: EnumScheduleTypeFieldUpdateOperationsInput | $Enums.ScheduleType
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visitTypeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ScheduleUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    type?: EnumScheduleTypeFieldUpdateOperationsInput | $Enums.ScheduleType
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visitTypeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ScheduleUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    type?: EnumScheduleTypeFieldUpdateOperationsInput | $Enums.ScheduleType
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visitType?: VisitTypeUpdateOneWithoutSchedulesNestedInput
    agency?: AgencyUpdateOneRequiredWithoutSchedulesNestedInput
    user?: UserUpdateOneRequiredWithoutCareWorkerSchedulesNestedInput
  }

  export type ScheduleUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    type?: EnumScheduleTypeFieldUpdateOperationsInput | $Enums.ScheduleType
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visitTypeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ScheduleUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    type?: EnumScheduleTypeFieldUpdateOperationsInput | $Enums.ScheduleType
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    visitTypeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReportUpdateWithoutCaregiverInput = {
    id?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    tasksCompleted?: ReportTaskUpdateManyWithoutReportNestedInput
    alerts?: ReportAlertUpdateManyWithoutReportNestedInput
    bodyMapObservations?: BodyMapObservationUpdateManyWithoutReportNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutReportNestedInput
    editHistory?: ReportEditUpdateManyWithoutReportNestedInput
    client?: UserUpdateOneRequiredWithoutClientReportsNestedInput
    agency?: AgencyUpdateOneRequiredWithoutReportNestedInput
  }

  export type ReportUncheckedUpdateWithoutCaregiverInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    tasksCompleted?: ReportTaskUncheckedUpdateManyWithoutReportNestedInput
    alerts?: ReportAlertUncheckedUpdateManyWithoutReportNestedInput
    bodyMapObservations?: BodyMapObservationUncheckedUpdateManyWithoutReportNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutReportNestedInput
    editHistory?: ReportEditUncheckedUpdateManyWithoutReportNestedInput
  }

  export type ReportUncheckedUpdateManyWithoutCaregiverInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReportUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    tasksCompleted?: ReportTaskUpdateManyWithoutReportNestedInput
    alerts?: ReportAlertUpdateManyWithoutReportNestedInput
    bodyMapObservations?: BodyMapObservationUpdateManyWithoutReportNestedInput
    medicationAdministrations?: MedicationAdministrationUpdateManyWithoutReportNestedInput
    editHistory?: ReportEditUpdateManyWithoutReportNestedInput
    caregiver?: UserUpdateOneRequiredWithoutCareReportsNestedInput
    agency?: AgencyUpdateOneRequiredWithoutReportNestedInput
  }

  export type ReportUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
    tasksCompleted?: ReportTaskUncheckedUpdateManyWithoutReportNestedInput
    alerts?: ReportAlertUncheckedUpdateManyWithoutReportNestedInput
    bodyMapObservations?: BodyMapObservationUncheckedUpdateManyWithoutReportNestedInput
    medicationAdministrations?: MedicationAdministrationUncheckedUpdateManyWithoutReportNestedInput
    editHistory?: ReportEditUncheckedUpdateManyWithoutReportNestedInput
  }

  export type ReportUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    summary?: StringFieldUpdateOperationsInput | string
    checkInTime?: DateTimeFieldUpdateOperationsInput | Date | string
    checkOutTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    checkInDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkOutDistance?: NullableFloatFieldUpdateOperationsInput | number | null
    checkInLocation?: NullableStringFieldUpdateOperationsInput | string | null
    checkOutLocation?: NullableStringFieldUpdateOperationsInput | string | null
    hasSignature?: BoolFieldUpdateOperationsInput | boolean
    signatureImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    lastEditedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastEditReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MedicationRecordUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
    medication?: MedicationDatabaseLinkUpdateOneRequiredWithoutMedicationRecordNestedInput
    client?: UserUpdateOneRequiredWithoutClientMedicationsNestedInput
    User?: UserUpdateOneRequiredWithoutMedicationRecordsNestedInput
    administrationRecords?: MedicationAdministrationUpdateManyWithoutMedicationRecordNestedInput
  }

  export type MedicationRecordUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    medicationId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
    administrationRecords?: MedicationAdministrationUncheckedUpdateManyWithoutMedicationRecordNestedInput
  }

  export type MedicationRecordUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    medicationId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MedicationRecordUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
    medication?: MedicationDatabaseLinkUpdateOneRequiredWithoutMedicationRecordNestedInput
    user?: UserUpdateOneRequiredWithoutCareWorkerMedicationsNestedInput
    User?: UserUpdateOneRequiredWithoutMedicationRecordsNestedInput
    administrationRecords?: MedicationAdministrationUpdateManyWithoutMedicationRecordNestedInput
  }

  export type MedicationRecordUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    medicationId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
    administrationRecords?: MedicationAdministrationUncheckedUpdateManyWithoutMedicationRecordNestedInput
  }

  export type MedicationRecordUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    medicationId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MileageRecordUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startMileage?: FloatFieldUpdateOperationsInput | number
    endMileage?: FloatFieldUpdateOperationsInput | number
    totalMiles?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: AgencyUpdateOneRequiredWithoutMileageRecordsNestedInput
    client?: UserUpdateOneRequiredWithoutClientMileageNestedInput
    User?: UserUpdateOneRequiredWithoutMileageRecordsNestedInput
  }

  export type MileageRecordUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startMileage?: FloatFieldUpdateOperationsInput | number
    endMileage?: FloatFieldUpdateOperationsInput | number
    totalMiles?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MileageRecordUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startMileage?: FloatFieldUpdateOperationsInput | number
    endMileage?: FloatFieldUpdateOperationsInput | number
    totalMiles?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MileageRecordUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startMileage?: FloatFieldUpdateOperationsInput | number
    endMileage?: FloatFieldUpdateOperationsInput | number
    totalMiles?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: AgencyUpdateOneRequiredWithoutMileageRecordsNestedInput
    user?: UserUpdateOneRequiredWithoutCareWorkerMileageNestedInput
    User?: UserUpdateOneRequiredWithoutMileageRecordsNestedInput
  }

  export type MileageRecordUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startMileage?: FloatFieldUpdateOperationsInput | number
    endMileage?: FloatFieldUpdateOperationsInput | number
    totalMiles?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MileageRecordUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startMileage?: FloatFieldUpdateOperationsInput | number
    endMileage?: FloatFieldUpdateOperationsInput | number
    totalMiles?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    receiver?: UserUpdateOneRequiredWithoutReceivedMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUncheckedUpdateManyWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    receiverId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUpdateWithoutReceiverInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sender?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutReceiverInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUncheckedUpdateManyWithoutReceiverInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MedicationRecordUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
    medication?: MedicationDatabaseLinkUpdateOneRequiredWithoutMedicationRecordNestedInput
    client?: UserUpdateOneRequiredWithoutClientMedicationsNestedInput
    user?: UserUpdateOneRequiredWithoutCareWorkerMedicationsNestedInput
    administrationRecords?: MedicationAdministrationUpdateManyWithoutMedicationRecordNestedInput
  }

  export type MedicationRecordUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    medicationId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
    administrationRecords?: MedicationAdministrationUncheckedUpdateManyWithoutMedicationRecordNestedInput
  }

  export type MedicationRecordUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    medicationId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MileageRecordUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startMileage?: FloatFieldUpdateOperationsInput | number
    endMileage?: FloatFieldUpdateOperationsInput | number
    totalMiles?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: AgencyUpdateOneRequiredWithoutMileageRecordsNestedInput
    client?: UserUpdateOneRequiredWithoutClientMileageNestedInput
    user?: UserUpdateOneRequiredWithoutCareWorkerMileageNestedInput
  }

  export type MileageRecordUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startMileage?: FloatFieldUpdateOperationsInput | number
    endMileage?: FloatFieldUpdateOperationsInput | number
    totalMiles?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MileageRecordUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startMileage?: FloatFieldUpdateOperationsInput | number
    endMileage?: FloatFieldUpdateOperationsInput | number
    totalMiles?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DocumentUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneWithoutDocumentNestedInput
    agency?: AgencyUpdateOneWithoutDocumentsNestedInput
  }

  export type DocumentUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DocumentUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IncidentReportUpdateWithoutReporterInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    severity?: EnumSeverityLevelFieldUpdateOperationsInput | $Enums.SeverityLevel
    reportedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: AgencyUpdateOneRequiredWithoutIncidentReportsNestedInput
  }

  export type IncidentReportUncheckedUpdateWithoutReporterInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    severity?: EnumSeverityLevelFieldUpdateOperationsInput | $Enums.SeverityLevel
    reportedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IncidentReportUncheckedUpdateManyWithoutReporterInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    severity?: EnumSeverityLevelFieldUpdateOperationsInput | $Enums.SeverityLevel
    reportedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type KeyContactUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    relation?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type KeyContactUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    relation?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type KeyContactUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    relation?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CareOutcomeUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
  }

  export type CareOutcomeUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
  }

  export type CareOutcomeUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    outcome?: StringFieldUpdateOperationsInput | string
  }

  export type InvoiceUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
    agency?: AgencyUpdateOneRequiredWithoutInvoicesNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
  }

  export type InvoiceUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    issuedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumInvoiceStatusFieldUpdateOperationsInput | $Enums.InvoiceStatus
  }

  export type DocumentUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutDocumentsNestedInput
    agency?: AgencyUpdateOneWithoutDocumentsNestedInput
  }

  export type DocumentUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DocumentUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    read?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    read?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    read?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiskAssessmentUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    affectedParties?: StringFieldUpdateOperationsInput | string
    mitigationStrategy?: StringFieldUpdateOperationsInput | string
    likelihood?: IntFieldUpdateOperationsInput | number
    severity?: IntFieldUpdateOperationsInput | number
    riskScore?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    riskCategory?: RiskCategoryUpdateOneRequiredWithoutRiskAssessmentsNestedInput
  }

  export type RiskAssessmentUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    riskCategoryId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    affectedParties?: StringFieldUpdateOperationsInput | string
    mitigationStrategy?: StringFieldUpdateOperationsInput | string
    likelihood?: IntFieldUpdateOperationsInput | number
    severity?: IntFieldUpdateOperationsInput | number
    riskScore?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiskAssessmentUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    riskCategoryId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    affectedParties?: StringFieldUpdateOperationsInput | string
    mitigationStrategy?: StringFieldUpdateOperationsInput | string
    likelihood?: IntFieldUpdateOperationsInput | number
    severity?: IntFieldUpdateOperationsInput | number
    riskScore?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FamilyAccessUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    relation?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyAccessUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    relation?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyAccessUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    relation?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommunicationLogUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommunicationLogUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommunicationLogUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReminderUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReminderUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReminderUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MedicationAdministrationUpdateWithoutAdministeredByInput = {
    id?: StringFieldUpdateOperationsInput | string
    administeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doseType?: EnumDoseTypeFieldUpdateOperationsInput | $Enums.DoseType
    doseTaken?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    medicationRecord?: MedicationRecordUpdateOneRequiredWithoutAdministrationRecordsNestedInput
    report?: ReportUpdateOneWithoutMedicationAdministrationsNestedInput
  }

  export type MedicationAdministrationUncheckedUpdateWithoutAdministeredByInput = {
    id?: StringFieldUpdateOperationsInput | string
    medicationRecordId?: StringFieldUpdateOperationsInput | string
    administeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doseType?: EnumDoseTypeFieldUpdateOperationsInput | $Enums.DoseType
    doseTaken?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reportId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MedicationAdministrationUncheckedUpdateManyWithoutAdministeredByInput = {
    id?: StringFieldUpdateOperationsInput | string
    medicationRecordId?: StringFieldUpdateOperationsInput | string
    administeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doseType?: EnumDoseTypeFieldUpdateOperationsInput | $Enums.DoseType
    doseTaken?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reportId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReportEditUpdateWithoutEditorInput = {
    id?: StringFieldUpdateOperationsInput | string
    editedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: StringFieldUpdateOperationsInput | string
    changesJson?: StringFieldUpdateOperationsInput | string
    report?: ReportUpdateOneRequiredWithoutEditHistoryNestedInput
  }

  export type ReportEditUncheckedUpdateWithoutEditorInput = {
    id?: StringFieldUpdateOperationsInput | string
    reportId?: StringFieldUpdateOperationsInput | string
    editedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: StringFieldUpdateOperationsInput | string
    changesJson?: StringFieldUpdateOperationsInput | string
  }

  export type ReportEditUncheckedUpdateManyWithoutEditorInput = {
    id?: StringFieldUpdateOperationsInput | string
    reportId?: StringFieldUpdateOperationsInput | string
    editedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: StringFieldUpdateOperationsInput | string
    changesJson?: StringFieldUpdateOperationsInput | string
  }

  export type MedicationRecordCreateManyMedicationInput = {
    id?: string
    clientId: string
    userId: string
    dosage: string
    frequency: string
    startDate: Date | string
    endDate?: Date | string | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    morningDose?: boolean
    lunchDose?: boolean
    eveningDose?: boolean
    bedtimeDose?: boolean
    asNeededDose?: boolean
  }

  export type MedicationRecordUpdateWithoutMedicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
    client?: UserUpdateOneRequiredWithoutClientMedicationsNestedInput
    user?: UserUpdateOneRequiredWithoutCareWorkerMedicationsNestedInput
    User?: UserUpdateOneRequiredWithoutMedicationRecordsNestedInput
    administrationRecords?: MedicationAdministrationUpdateManyWithoutMedicationRecordNestedInput
  }

  export type MedicationRecordUncheckedUpdateWithoutMedicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
    administrationRecords?: MedicationAdministrationUncheckedUpdateManyWithoutMedicationRecordNestedInput
  }

  export type MedicationRecordUncheckedUpdateManyWithoutMedicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    dosage?: StringFieldUpdateOperationsInput | string
    frequency?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    morningDose?: BoolFieldUpdateOperationsInput | boolean
    lunchDose?: BoolFieldUpdateOperationsInput | boolean
    eveningDose?: BoolFieldUpdateOperationsInput | boolean
    bedtimeDose?: BoolFieldUpdateOperationsInput | boolean
    asNeededDose?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ScheduleCreateManyVisitTypeInput = {
    id?: string
    agencyId: string
    clientId: string
    userId: string
    date: Date | string
    startTime: string
    endTime: string
    status?: string
    type?: $Enums.ScheduleType
    notes?: string | null
    chargeRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScheduleUpdateWithoutVisitTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    type?: EnumScheduleTypeFieldUpdateOperationsInput | $Enums.ScheduleType
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: AgencyUpdateOneRequiredWithoutSchedulesNestedInput
    client?: UserUpdateOneRequiredWithoutClientSchedulesNestedInput
    user?: UserUpdateOneRequiredWithoutCareWorkerSchedulesNestedInput
  }

  export type ScheduleUncheckedUpdateWithoutVisitTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    type?: EnumScheduleTypeFieldUpdateOperationsInput | $Enums.ScheduleType
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScheduleUncheckedUpdateManyWithoutVisitTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    type?: EnumScheduleTypeFieldUpdateOperationsInput | $Enums.ScheduleType
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    chargeRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReportTaskCreateManyReportInput = {
    id?: string
    taskName: string
    completed?: boolean
    notes?: string | null
    taskIcon?: string | null
    taskType?: string | null
    completedAt?: Date | string | null
  }

  export type ReportAlertCreateManyReportInput = {
    id?: string
    type: $Enums.AlertType
    message: string
    severity: $Enums.AlertSeverity
    createdAt?: Date | string
    resolved?: boolean
    resolvedAt?: Date | string | null
    resolvedBy?: string | null
  }

  export type BodyMapObservationCreateManyReportInput = {
    id?: string
    bodyPart: string
    condition: string
    notes?: string | null
    createdAt?: Date | string
  }

  export type MedicationAdministrationCreateManyReportInput = {
    id?: string
    medicationRecordId: string
    administeredById: string
    administeredAt: Date | string
    doseType: $Enums.DoseType
    doseTaken?: boolean
    notes?: string | null
    createdAt?: Date | string
  }

  export type ReportEditCreateManyReportInput = {
    id?: string
    editedBy: string
    editedAt?: Date | string
    reason: string
    changesJson: string
  }

  export type ReportTaskUpdateWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    taskName?: StringFieldUpdateOperationsInput | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    taskIcon?: NullableStringFieldUpdateOperationsInput | string | null
    taskType?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReportTaskUncheckedUpdateWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    taskName?: StringFieldUpdateOperationsInput | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    taskIcon?: NullableStringFieldUpdateOperationsInput | string | null
    taskType?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReportTaskUncheckedUpdateManyWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    taskName?: StringFieldUpdateOperationsInput | string
    completed?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    taskIcon?: NullableStringFieldUpdateOperationsInput | string | null
    taskType?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReportAlertUpdateWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAlertTypeFieldUpdateOperationsInput | $Enums.AlertType
    message?: StringFieldUpdateOperationsInput | string
    severity?: EnumAlertSeverityFieldUpdateOperationsInput | $Enums.AlertSeverity
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    resolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReportAlertUncheckedUpdateWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAlertTypeFieldUpdateOperationsInput | $Enums.AlertType
    message?: StringFieldUpdateOperationsInput | string
    severity?: EnumAlertSeverityFieldUpdateOperationsInput | $Enums.AlertSeverity
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    resolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReportAlertUncheckedUpdateManyWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAlertTypeFieldUpdateOperationsInput | $Enums.AlertType
    message?: StringFieldUpdateOperationsInput | string
    severity?: EnumAlertSeverityFieldUpdateOperationsInput | $Enums.AlertSeverity
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    resolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BodyMapObservationUpdateWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    bodyPart?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BodyMapObservationUncheckedUpdateWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    bodyPart?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BodyMapObservationUncheckedUpdateManyWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    bodyPart?: StringFieldUpdateOperationsInput | string
    condition?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MedicationAdministrationUpdateWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    administeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doseType?: EnumDoseTypeFieldUpdateOperationsInput | $Enums.DoseType
    doseTaken?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    medicationRecord?: MedicationRecordUpdateOneRequiredWithoutAdministrationRecordsNestedInput
    administeredBy?: UserUpdateOneRequiredWithoutMedicationAdministrationsNestedInput
  }

  export type MedicationAdministrationUncheckedUpdateWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    medicationRecordId?: StringFieldUpdateOperationsInput | string
    administeredById?: StringFieldUpdateOperationsInput | string
    administeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doseType?: EnumDoseTypeFieldUpdateOperationsInput | $Enums.DoseType
    doseTaken?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MedicationAdministrationUncheckedUpdateManyWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    medicationRecordId?: StringFieldUpdateOperationsInput | string
    administeredById?: StringFieldUpdateOperationsInput | string
    administeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doseType?: EnumDoseTypeFieldUpdateOperationsInput | $Enums.DoseType
    doseTaken?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReportEditUpdateWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    editedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: StringFieldUpdateOperationsInput | string
    changesJson?: StringFieldUpdateOperationsInput | string
    editor?: UserUpdateOneRequiredWithoutReportEditsNestedInput
  }

  export type ReportEditUncheckedUpdateWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    editedBy?: StringFieldUpdateOperationsInput | string
    editedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: StringFieldUpdateOperationsInput | string
    changesJson?: StringFieldUpdateOperationsInput | string
  }

  export type ReportEditUncheckedUpdateManyWithoutReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    editedBy?: StringFieldUpdateOperationsInput | string
    editedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: StringFieldUpdateOperationsInput | string
    changesJson?: StringFieldUpdateOperationsInput | string
  }

  export type MedicationAdministrationCreateManyMedicationRecordInput = {
    id?: string
    administeredById: string
    administeredAt: Date | string
    doseType: $Enums.DoseType
    doseTaken?: boolean
    notes?: string | null
    createdAt?: Date | string
    reportId?: string | null
  }

  export type MedicationAdministrationUpdateWithoutMedicationRecordInput = {
    id?: StringFieldUpdateOperationsInput | string
    administeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doseType?: EnumDoseTypeFieldUpdateOperationsInput | $Enums.DoseType
    doseTaken?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    administeredBy?: UserUpdateOneRequiredWithoutMedicationAdministrationsNestedInput
    report?: ReportUpdateOneWithoutMedicationAdministrationsNestedInput
  }

  export type MedicationAdministrationUncheckedUpdateWithoutMedicationRecordInput = {
    id?: StringFieldUpdateOperationsInput | string
    administeredById?: StringFieldUpdateOperationsInput | string
    administeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doseType?: EnumDoseTypeFieldUpdateOperationsInput | $Enums.DoseType
    doseTaken?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reportId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MedicationAdministrationUncheckedUpdateManyWithoutMedicationRecordInput = {
    id?: StringFieldUpdateOperationsInput | string
    administeredById?: StringFieldUpdateOperationsInput | string
    administeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    doseType?: EnumDoseTypeFieldUpdateOperationsInput | $Enums.DoseType
    doseTaken?: BoolFieldUpdateOperationsInput | boolean
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reportId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RiskAssessmentCreateManyRiskCategoryInput = {
    id?: string
    clientId: string
    description: string
    affectedParties: string
    mitigationStrategy: string
    likelihood: number
    severity: number
    riskScore: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RiskAssessmentUpdateWithoutRiskCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    affectedParties?: StringFieldUpdateOperationsInput | string
    mitigationStrategy?: StringFieldUpdateOperationsInput | string
    likelihood?: IntFieldUpdateOperationsInput | number
    severity?: IntFieldUpdateOperationsInput | number
    riskScore?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutRiskAssessmentsNestedInput
  }

  export type RiskAssessmentUncheckedUpdateWithoutRiskCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    affectedParties?: StringFieldUpdateOperationsInput | string
    mitigationStrategy?: StringFieldUpdateOperationsInput | string
    likelihood?: IntFieldUpdateOperationsInput | number
    severity?: IntFieldUpdateOperationsInput | number
    riskScore?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RiskAssessmentUncheckedUpdateManyWithoutRiskCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    affectedParties?: StringFieldUpdateOperationsInput | string
    mitigationStrategy?: StringFieldUpdateOperationsInput | string
    likelihood?: IntFieldUpdateOperationsInput | number
    severity?: IntFieldUpdateOperationsInput | number
    riskScore?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}